/* REXX - User Routine Sample to display the contents of the current            
          selected row as an aid to developing customer specific user routines. 
          The intent is that users can develop interfaces to almost any back-end
          tool, that needs to be 'fed' element information.                     
          Some Examples might include;                                          
          Selecting an item for custom import/export to an external tool for    
          editing (for example SDF, CSP, Natural etc.)                          
          or...                                                                 
          Selecting elements to be deployed to a test environment for testing   
          or...                                                                 
          Selecting elements for packaging etc...                               
          in which scenario, one command could add elements (selecting them,    
          another routine, could deselect previously selected elements, and     
          a primary command could submit the batch/request...                   
*/                                                                              
parse arg PassParm                                /* Get parm that contains   */
PassName = strip(PassParm,,"'")                   /* ...all the names         */
ADDRESS ISPEXEC "VGET ("PassName") SHARED"        /* Retrieve it's value      */
interpret 'ALLVALS = 'PassName                    /* Use it to retrieve names */
ADDRESS ISPEXEC "VGET ("ALLVALS") SHARED"         /* ...and retrieve them     */
ADDRESS ISPEXEC "vget (ZSCREEN) shared"           /* Get current screen       */
DDNAME = 'DUMPOUT' || ZSCREEN                     /* use screen in DDName     */
address TSO "ALLOC DD("DDNAME") SP(1,0) ",        /* Allocate temp file       */
   "TR NEW RELEASE LRECL(512) BLKSIZE(0)",                                      
     "DSORG(PS)",                                                               
     "RECFM(V,B) NEW REU UNCATALOG"                                             
queue "  User Row Routine dump"                   /* Write a Title            */
queue " "                                                                       
queue "The sample UX (UsrRtnUX) command just retrieves and displays all the"    
queue "Element row details - it's intended as a debug tool and/or as a hint"    
queue "to what might be possible if you want to write your own line commands;"  
queue "Perhaps a custom editor for BMS, TWS or Natural etc., to perform Element"
queue "specific debug or test runs, or ad-hoc deployments etc."                 
queue " "                                                                       
queue "Name     Value         "                   /* Write a column header    */
queue "--------" copies('----+----|',50)                                        
do i = 1 to words(ALLVALS)                        /* for Each value...        */
  Queue left(word(AllVals,i)||copies(' ',8),8) || '(' ,                         
  || value(word(allvals,i)) || ')'                /*   Wite it's name & value */
end                                                                             
Queue ""                                          /* null line to terminate   */
address TSO "EXECIO * DISKW "DDNAME" (FINIS"      /* Write queued lines       */
zedsmsg = 'Selected Row Dumped'                   /* Set a user message       */
zedlmsg = 'All variables for row have been collected'                           
address ispexec "SETMSG MSG(ISRZ000)"                                           
ADDRESS ISPEXEC "LMINIT DATAID(DDID) DDNAME("DDNAME")"                          
ADDRESS ISPEXEC "VIEW DATAID(&DDID)"              /* invoke View to Browse    */
ADDRESS ISPEXEC "LMFREE DATAID(&DDID)"                                          
address TSO "FREE FILE("DDNAME")"                 /* Free the file we're done */
USERMSG = '*Dumped'                               /* Tell user what happened  */
ADDRESS ISPEXEC "VPUT (USERMSG) SHARED"           /* and store the message    */
EXIT 0                                                                          
