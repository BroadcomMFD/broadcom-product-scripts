000100 PROCESS DYNAM OUTDD(DISPLAYS)
000200 IDENTIFICATION DIVISION.
000300 PROGRAM-ID. C1UEXT02.
000400 DATE-COMPILED.
000500 DATE-WRITTEN.
000600 ENVIRONMENT DIVISION.
000700 CONFIGURATION SECTION.
000800 SOURCE-COMPUTER. IBM-370.
000900 OBJECT-COMPUTER. IBM-370.
001000*****************************************************************
001100* DESCRIPTION: THIS PGM IS CALLED before Element processing     *
001200*              It gathers Endevor info from the exit blocks     *
001300*              then calls REXX program C1UEXTR2.                *
001400*                                                               *
001500* SETUP:       The REXX C1UEXTR2 gets called from DD REXFILE.   *
001600*              Change the DSN to a secure dataset.(2 places)    *
001700*                                                               *
001910*    STRING 'ALLOC DD(REXFILE) ', <--look for REXFILE/SYSEXEC   *
001920*          'DA(ESS.ENDEVOR.EXIT.REXX)'  <----- here             *
001930*               DELIMITED BY SIZE                               *
001940*                 ' SHR REUSE'                                  *
001950*               DELIMITED BY SIZE                               *
001960*          INTO ALLOC-TEXT                                      *
001970*    END-STRING.                                                *
002000*                                                               *
002200*                                                               *
002300*                                                               *
002400*****************************************************************
002500 INPUT-OUTPUT SECTION.
002600 FILE-CONTROL.
002700 DATA DIVISION.
002800 FILE SECTION.
002900
003000*****************************************************************
003100* W O R K I N G  S T O R A G E                                  *
003200*****************************************************************
003300 WORKING-STORAGE SECTION.
003400
003500 77  FLAGS                             PIC S9(8) BINARY.
003600 77  REXX-RETURN-CODE                  PIC S9(8) BINARY.
003700 77  DUMMY-ZERO                        PIC S9(8) BINARY VALUE 0.
003800 77  ARGUMENT-PTR                      POINTER.
003900 77  EXECBLK-PTR                       POINTER.
004000 77  ARGTABLE-PTR                      POINTER.
004100 77  EVALBLK-PTR                       POINTER.
004200
004300 01  IRXJCL                            PIC X(6)  VALUE 'IRXJCL'.
004400 01  IRXEXEC-PGM                       PIC X(08) VALUE 'IRXEXEC'.
004500
004600 01 WS-VARIABLES.
004700    03  WS-POINTER                   PIC 9(8)  COMP.
004800    03  WS-WORK-ADDRESS-ADR          PIC S9(8) COMP SYNC .
004900    03  WS-WORK-ADDRESS-PTR          REDEFINES WS-WORK-ADDRESS-ADR
005000                                     USAGE IS POINTER .
005100    03  ADDRESS-ECB-RETURN-CODE      PIC 9(10) .
005200    03  ADDRESS-ECB-MESSAGE-CODE     PIC 9(10) .
005300    03  ADDRESS-ECB-MESSAGE-LENGTH   PIC 9(10) .
005400    03  ADDRESS-ECB-MESSAGE-TEXT     PIC 9(10) .
005500    03  ADDRESS-REQ-SISO-INDICATOR   PIC 9(10) .
005600    03  ADDRESS-REQ-CCID             PIC 9(10) .
005700    03  ADDRESS-REQ-COMMENT          PIC 9(10) .
005800
005900
006000 01 BPXWDYN PIC X(8) VALUE 'BPXWDYN'.
006100 01 ALLOC-STRING.
006200    05 ALLOC-LENGTH PIC S9(4) BINARY VALUE 100.
006300    05 ALLOC-TEXT   PIC X(100).
006400
006500* The block of data below is passed to the REXX program C1UEXTR2
006600* to ensure new elements are Registered.
006700* The bulk of the logic is found in C1UEXTR2
006800 01  ELM-C1UEXTR2-PARMS-IRXJCL.
006900   02  ELM-EXECUTE-PARMS-IRXJCL-TOP.
007000     03 PARM-LENGTH           PIC X(02) VALUE X'0711'.            00004500
007100     03 REXX-NAME             PIC X(08) VALUE 'C1UEXTR2'.
007200     03 FILLER                PIC X(01) VALUE SPACE .
007300   02  ELM-EXECUTE-PARMS-IRXEXEC.                                 00004800
007400     03 WS-REXX-STATEMENTS    PIC X(1800).
007500
007600 01  EXECBLK.
007700     05 EXECBLK-ACRYN                  PIC X(08) VALUE 'IRXEXECB'.
007800     05 EXECBLK-LENGTH                 PIC S9(8) BINARY
007900                                                 VALUE 48.
008000     05 EXECBLK-RESERVED               PIC S9(8) BINARY
008100                                                 VALUE 0.
008200     05 EXECBLK-MEMBER                 PIC X(08) VALUE 'C1UEXTR2'.
008300     05 EXECBLK-DDNAME                 PIC X(08) VALUE 'REXFILE '.
008400     05 EXECBLK-SUBCOM                 PIC X(08) VALUE SPACES.
008500     05 EXECBLK-DSNPTR                 POINTER   VALUE NULL.
008600     05 EXECBLK-DSNLEN                 PIC 9(04) COMP
008700                                                 VALUE 0.
008800
008900 01  EVALBLK.
009000     05 EVALBLK-EVPAD1                 PIC S9(8) BINARY
009100                                                 VALUE 0.
009200     05 EVALBLK-EVSIZE                 PIC S9(8) BINARY
009300                                                 VALUE 34.
009400     05 EVALBLK-EVLEN                  PIC S9(8) BINARY
009500                                                 VALUE 0.
009600     05 EVALBLK-EVPAD2                 PIC S9(8) BINARY
009700                                                 VALUE 0.
009800     05 EVALBLK-EVDATA                 PIC X(256).
009900
010000 01  ARGUMENT.
010100     02 ARGUMENT-1                     OCCURS 1 TIMES.
010200        05 ARGSTRING-PTR               POINTER.
010300        05 ARGSTRING-LENGTH            PIC S9(8) BINARY.
010400     02 ARGSTRING-LAST1                PIC S9(8) BINARY
010500                                                 VALUE -1.
010600     02 ARGSTRING-LAST2                PIC S9(8) BINARY
010700                                                 VALUE -1.
010800
010900
011000*-----------------------------------------------------------------
011100 LINKAGE SECTION.
011200*-----------------------------------------------------------------
011300 COPY EXITBLKS.
011400
011500 PROCEDURE DIVISION USING
011600                    EXIT-CONTROL-BLOCK
011700                    REQUEST-INFO-BLOCK
011800                    SRC-ENVIRONMENT-BLOCK
011900                    SRC-ELEMENT-MASTER-INFO-BLOCK
012000                    SRC-FILE-CONTROL-BLOCK
012100                    TGT-ENVIRONMENT-BLOCK
012200                    TGT-ELEMENT-MASTER-INFO-BLOCK
012300                    TGT-FILE-CONTROL-BLOCK.
013400
013500     MOVE SPACES TO WS-REXX-STATEMENTS .
013600
013700     SET  WS-WORK-ADDRESS-PTR TO
013800          ADDRESS OF ECB-RETURN-CODE .
013900     MOVE WS-WORK-ADDRESS-ADR
014000                          TO ADDRESS-ECB-RETURN-CODE .
014100
014200     SET  WS-WORK-ADDRESS-PTR TO
014300          ADDRESS OF ECB-MESSAGE-CODE.
014400     MOVE WS-WORK-ADDRESS-ADR
014500                          TO ADDRESS-ECB-MESSAGE-CODE.
014600
014700     SET  WS-WORK-ADDRESS-PTR TO
014800          ADDRESS OF ECB-MESSAGE-LENGTH.
014900     MOVE WS-WORK-ADDRESS-ADR
015000                          TO ADDRESS-ECB-MESSAGE-LENGTH .
015100
015200     SET  WS-WORK-ADDRESS-PTR TO
015300          ADDRESS OF ECB-MESSAGE-TEXT  .
015400     MOVE WS-WORK-ADDRESS-ADR
015500                          TO ADDRESS-ECB-MESSAGE-TEXT   .
015600
015700     SET  WS-WORK-ADDRESS-PTR TO
015800          ADDRESS OF REQ-CCID  .
015900     MOVE WS-WORK-ADDRESS-ADR
016000                          TO ADDRESS-REQ-CCID .
016100
016200     SET  WS-WORK-ADDRESS-PTR TO
016300          ADDRESS OF REQ-COMMENT .
016400     MOVE WS-WORK-ADDRESS-ADR
016500                          TO ADDRESS-REQ-COMMENT .
016600
016700*****
016800***** / Convert COBOL exit block Datanames into Rexx \
016900*****
017000*****
017100     MOVE 1 TO WS-POINTER.
017200
017210
017300     STRING
017400            'ECB_TSO_BATCH_MODE = "'
017500               DELIMITED BY SIZE
017600             ECB-TSO-BATCH-MODE
017700               DELIMITED BY SIZE
017800            '";'
017900               DELIMITED BY SIZE
018000            'ECB_USER_ID = "'
018100               DELIMITED BY SIZE
018200             ECB-USER-ID
018300               DELIMITED BY SIZE
018400            '";'
018500               DELIMITED BY SIZE
018600            'ECB_ACTION_NAME = "'
018700               DELIMITED BY SIZE
018800             ECB-ACTION-NAME
018900               DELIMITED BY SIZE
019000            '";'
019100               DELIMITED BY SIZE
019200            'REQ_CCID = "'
019300               DELIMITED BY SIZE
019400             REQ-CCID
019500               DELIMITED BY SIZE
019600            '";'
019700               DELIMITED BY SIZE
019800            'Address_REQ_CCID = '
019900               DELIMITED BY SIZE
020000             ADDRESS-REQ-CCID
020100               DELIMITED BY SIZE
020200            ';'
020300               DELIMITED BY SIZE
020400            'REQ_COMMENT = "'
020500               DELIMITED BY SIZE
020600             REQ-COMMENT
020700               DELIMITED BY SIZE
020800            '";'
020900               DELIMITED BY SIZE
021000            'Address_REQ_COMMENT = '
021100               DELIMITED BY SIZE
021200             ADDRESS-REQ-COMMENT
021300               DELIMITED BY SIZE
021400            ';'
021500               DELIMITED BY SIZE
021600            'REQ_SISO_INDICATOR = "'
021700               DELIMITED BY SIZE
021800             REQ-SISO-INDICATOR
021900               DELIMITED BY SIZE
022000            '";'
022100               DELIMITED BY SIZE
022200            'REQ_DELETE_AFTER = "'
022300               DELIMITED BY SIZE
022400             REQ-DELETE-AFTER
022500               DELIMITED BY SIZE
022600            '";'
022700               DELIMITED BY SIZE
022800            'REQ_SYNCHRONIZE = "'
022900               DELIMITED BY SIZE
023000             REQ-SYNCHRONIZE
023100               DELIMITED BY SIZE
023200            '";'
023300               DELIMITED BY SIZE
023400            'REQ_IGNGEN_FAIL = "'
023500               DELIMITED BY SIZE
023600             REQ-IGNGEN-FAIL
023700               DELIMITED BY SIZE
023800            '";'
023900               DELIMITED BY SIZE
024000            'REQ_PROCESSOR_GROUP = "'
024100               DELIMITED BY SIZE
024200             REQ-PROCESSOR-GROUP
024300               DELIMITED BY SIZE
024400            '";'
024500               DELIMITED BY SIZE
024600            'REQ_OVERWRITE_INDICATOR = "'
024700               DELIMITED BY SIZE
024800             REQ-OVERWRITE-INDICATOR
024900               DELIMITED BY SIZE
025000            '";'
025100               DELIMITED BY SIZE
025200            'REQ_GEN_COPYBACK = "'
025300               DELIMITED BY SIZE
025400             REQ-GEN-COPYBACK
025500               DELIMITED BY SIZE
025600            '";'
025700               DELIMITED BY SIZE
025800            'REQ_BENE = "'
025900               DELIMITED BY SIZE
026000             REQ-BENE
026100               DELIMITED BY SIZE
026200            '";'
026300               DELIMITED BY SIZE
026400            'REQ_AUTOGEN = "'
026500               DELIMITED BY SIZE
026600             REQ-AUTOGEN
026700               DELIMITED BY SIZE
026800            '";'
026900               DELIMITED BY SIZE
031800            'TGT_ELM_LAST_PROC_PACKAGE = "'
031900               DELIMITED BY SIZE
032000             TGT-ELM-LAST-PROC-PACKAGE
032100               DELIMITED BY SIZE
032200            '";'
032300               DELIMITED BY SIZE
032400            'TGT_ELM_PROCESSOR_GROUP = "'
032500               DELIMITED BY SIZE
032600             TGT-ELM-PROCESSOR-GROUP
032700               DELIMITED BY SIZE
032800            '";'
032900               DELIMITED BY SIZE
037800            'SRC_ELM_LAST_PROC_PACKAGE = "'
037900               DELIMITED BY SIZE
038000             SRC-ELM-LAST-PROC-PACKAGE
038100               DELIMITED BY SIZE
038200            '";'
038300               DELIMITED BY SIZE
038400            'SRC_ELM_PROCESSOR_GROUP = "'
038500               DELIMITED BY SIZE
038600             SRC-ELM-PROCESSOR-GROUP
038700               DELIMITED BY SIZE
038800            '";'
038900               DELIMITED BY SIZE
039000            'Address_ECB_RETURN_CODE = ' ADDRESS-ECB-RETURN-CODE
039100               DELIMITED BY SIZE
039200            '; '
039300               DELIMITED BY SIZE
039400            'Address_ECB_MESSAGE_CODE = ' ADDRESS-ECB-MESSAGE-CODE
039500               DELIMITED BY SIZE
039600            '; '
039700               DELIMITED BY SIZE
039800            'Address_ECB_MESSAGE_LENGTH = '
039900               ADDRESS-ECB-MESSAGE-LENGTH
040000               DELIMITED BY SIZE
040100            '; '
040200               DELIMITED BY SIZE
040300            'Address_ECB_MESSAGE_TEXT = '
040400               ADDRESS-ECB-MESSAGE-TEXT
040500               DELIMITED BY SIZE
040600            '; '
040700               DELIMITED BY SIZE
040800        INTO   WS-REXX-STATEMENTS
040900        WITH POINTER WS-POINTER .
041000     IF SRC-ENV-IO-TYPE = 'I'
041100        STRING
041200           'SRC_ELM_ACTION_CCID = "'
041300              DELIMITED BY SIZE
041400            SRC-ELM-ACTION-CCID
041500              DELIMITED BY SIZE
041600           '";'
041700              DELIMITED BY SIZE
041800           'SRC_ELM_LEVEL_COMMENT= "'
041900              DELIMITED BY SIZE
042000            SRC-ELM-LEVEL-COMMENT
042100              DELIMITED BY SIZE
042200           '";'
042300              DELIMITED BY SIZE
042400        INTO   WS-REXX-STATEMENTS
042500        WITH POINTER WS-POINTER
042600        END-STRING .
042612        STRING
042613            'SRC_ENV_ENVIRONMENT_NAME = "'
042614               DELIMITED BY SIZE
042615             SRC-ENV-ENVIRONMENT-NAME
042616               DELIMITED BY SIZE
042617            '";'
042618               DELIMITED BY SIZE
042619            'SRC_ENV_STAGE_NAME = "'
042620               DELIMITED BY SIZE
042621             SRC-ENV-STAGE-NAME
042622               DELIMITED BY SIZE
042623            '";'
042624               DELIMITED BY SIZE
042625            'SRC_ENV_SYSTEM_NAME = "'
042626               DELIMITED BY SIZE
042627             SRC-ENV-SYSTEM-NAME
042628               DELIMITED BY SIZE
042629            '";'
042630               DELIMITED BY SIZE
042631            'SRC_ENV_SUBSYSTEM_NAME = "'
042632               DELIMITED BY SIZE
042633             SRC-ENV-SUBSYSTEM-NAME
042634               DELIMITED BY SIZE
042635            '";'
042636               DELIMITED BY SIZE
042637            'SRC_ENV_TYPE_NAME = "'
042638               DELIMITED BY SIZE
042639             SRC-ENV-TYPE-NAME
042640               DELIMITED BY SIZE
042641            '";'
042642               DELIMITED BY SIZE
042643            'SRC_ENV_ELEMENT_NAME = "'
042644               DELIMITED BY SIZE
042645             SRC-ENV-ELEMENT-NAME
042646               DELIMITED BY SIZE
042647            '";'
042648               DELIMITED BY SIZE
042649            'SRC_ENV_TYPE_OF_BLOCK = "'
042650               DELIMITED BY SIZE
042651             SRC-ENV-TYPE-OF-BLOCK
042652               DELIMITED BY SIZE
042653            '";'
042654               DELIMITED BY SIZE
042655            'SRC_ENV_IO_TYPE = "'
042656               DELIMITED BY SIZE
042657             SRC-ENV-IO-TYPE
042658               DELIMITED BY SIZE
042659            '";'
042660               DELIMITED BY SIZE
042661        INTO   WS-REXX-STATEMENTS
042662        WITH POINTER WS-POINTER
042663        END-STRING .
042703        STRING
042704            'TGT_ENV_ENVIRONMENT_NAME = "'
042705               DELIMITED BY SIZE
042706             TGT-ENV-ENVIRONMENT-NAME
042707               DELIMITED BY SIZE
042708            '";'
042709               DELIMITED BY SIZE
042710            'TGT_ENV_STAGE_NAME = "'
042711               DELIMITED BY SIZE
042712             TGT-ENV-STAGE-NAME
042713               DELIMITED BY SIZE
042714            '";'
042715               DELIMITED BY SIZE
042716            'TGT_ENV_SYSTEM_NAME = "'
042717               DELIMITED BY SIZE
042718             TGT-ENV-SYSTEM-NAME
042719               DELIMITED BY SIZE
042720            '";'
042721               DELIMITED BY SIZE
042722            'TGT_ENV_SUBSYSTEM_NAME = "'
042723               DELIMITED BY SIZE
042724             TGT-ENV-SUBSYSTEM-NAME
042725               DELIMITED BY SIZE
042726            '";'
042727               DELIMITED BY SIZE
042728            'TGT_ENV_TYPE_NAME = "'
042729               DELIMITED BY SIZE
042730             TGT-ENV-TYPE-NAME
042731               DELIMITED BY SIZE
042732            '";'
042733               DELIMITED BY SIZE
042734            'TGT_ENV_ELEMENT_NAME = "'
042735               DELIMITED BY SIZE
042736             TGT-ENV-ELEMENT-NAME
042737               DELIMITED BY SIZE
042738            '";'
042739               DELIMITED BY SIZE
042740            'TGT_ENV_TYPE_OF_BLOCK = "'
042741               DELIMITED BY SIZE
042742             TGT-ENV-TYPE-OF-BLOCK
042743               DELIMITED BY SIZE
042744            '";'
042745               DELIMITED BY SIZE
042746            'TGT_ENV_IO_TYPE = "'
042747               DELIMITED BY SIZE
042748             TGT-ENV-IO-TYPE
042749               DELIMITED BY SIZE
042750            '";'
042751               DELIMITED BY SIZE
042752        INTO   WS-REXX-STATEMENTS
042753        WITH POINTER WS-POINTER
042760        END-STRING .
042800     IF SRC-ENV-IO-TYPE NOT = 'I' AND
042900        TGT-ENV-IO-TYPE = 'O'
043000        STRING
043100           'TGT_ELM_ACTION_CCID = "'
043200              DELIMITED BY SIZE
043300            TGT-ELM-ACTION-CCID
043400              DELIMITED BY SIZE
043500           '";'
043600              DELIMITED BY SIZE
043700           'TGT_ELM_LEVEL_COMMENT= "'
043800              DELIMITED BY SIZE
043900            TGT-ELM-LEVEL-COMMENT
044000              DELIMITED BY SIZE
044100           '";'
044200              DELIMITED BY SIZE
044300        INTO   WS-REXX-STATEMENTS
044400        WITH POINTER WS-POINTER
044500        END-STRING  .
044600***** \ Convert COBOL exit block Datanames into Rexx /
044700*****
044900
045000     IF TSO
045200        MOVE 'C1UEXTR2'             TO EXECBLK-MEMBER
045300        MOVE  1800                  TO ARGSTRING-LENGTH(1)
045400        MOVE SPACES TO ALLOC-TEXT
045500        PERFORM 2100-ALLOCATE-REXFILE
045600        CALL 'SET-ARG1-POINTER'  USING ARGUMENT-PTR
045700                                       ELM-EXECUTE-PARMS-IRXEXEC
045800        PERFORM 1800-REXX-CALL-VIA-IRXEXEC
045900        PERFORM 2200-FREE-REXFILES
046000     ELSE
046200        PERFORM 2101-ALLOCATE-SYSEXEC
046300        CALL IRXJCL  USING ELM-C1UEXTR2-PARMS-IRXJCL
046400        IF RETURN-CODE NOT = 0
046500            DISPLAY 'C1UEXT02: BAD CALL TO IRXJCL - RC = '
046600                  RETURN-CODE
046700        END-IF
046800        PERFORM 2201-FREE-SYSEXEC
046900     END-IF .
047000
047100     MOVE 0           TO RETURN-CODE .
047200
047300     GOBACK.
047400
047500 1800-REXX-CALL-VIA-IRXEXEC.
048100     SET ARGSTRING-PTR (1)           TO ARGUMENT-PTR .
048200     CALL 'SET-ARGUMENT-POINTER'  USING ARGTABLE-PTR
048300                                        ARGUMENT .
048400     CALL 'SET-EXECBLK-POINTER'   USING EXECBLK-PTR
048500                                        EXECBLK .
048600     CALL 'SET-EVALBLK-POINTER'   USING EVALBLK-PTR
048700                                        EVALBLK .
049000     MOVE 536870912         TO FLAGS
049100     MOVE 0                 TO REXX-RETURN-CODE .
049200
049600*--- CALL THE REXX EXEC ---
049700     CALL IRXEXEC-PGM USING EXECBLK-PTR
049800                            ARGTABLE-PTR
049900                            FLAGS
050000                            DUMMY-ZERO
050100                            DUMMY-ZERO
050200                            EVALBLK-PTR
050300                            DUMMY-ZERO
050400                            DUMMY-ZERO
050500                            DUMMY-ZERO
050510                            REXX-RETURN-CODE.
050600
050700     IF REXX-RETURN-CODE NOT = 0
050800         DISPLAY 'C1UEXT02: IRXEXEC RETURN CODE = '
050900                 REXX-RETURN-CODE
051000     END-IF
051100
051200     CANCEL IRXEXEC-PGM
051300     .
051400
051410*****************************************************************
051420**  Allocate DD REXFILE for TSO processing
051430*****************************************************************
051500 2100-ALLOCATE-REXFILE.
051600
051900     MOVE SPACES TO ALLOC-TEXT .
052000     STRING 'ALLOC DD(REXFILE) ',
052100           'DA(ESS.ENDEVOR.EXIT.REXX)'
052200                DELIMITED BY SIZE
052300                  ' SHR REUSE'
052400                DELIMITED BY SIZE
052500           INTO ALLOC-TEXT
052600     END-STRING.
052700     PERFORM 9000-DYNAMIC-ALLOC-DEALLOC .
052800
052900*****************************************************************
053000**  Allocate DD SYSEXEC for batch processing
053100*****************************************************************
053200 2101-ALLOCATE-SYSEXEC.
053300
053400     MOVE SPACES TO ALLOC-TEXT .
053500     STRING 'ALLOC DD(SYSEXEC) ',
053600           'DA(ESS.ENDEVOR.EXIT.REXX)'
053700                DELIMITED BY SIZE
053800                  ' SHR REUSE'
053900                DELIMITED BY SIZE
054000           INTO ALLOC-TEXT
054100     END-STRING.
054200     PERFORM 9000-DYNAMIC-ALLOC-DEALLOC .
054300
054400*****************************************************************
054500**  DYNAMICALLY DE-ALLOCATE UNNEEDED REXX FILES
054600*****************************************************************
054700 2200-FREE-REXFILES.
054800
054900     MOVE 'FREE  DD(REXFILE)' TO ALLOC-TEXT
055000     PERFORM 9000-DYNAMIC-ALLOC-DEALLOC .
055100
055400*****************************************************************
055500**  CALL BPXWDYN TO PREFORM REQUIRED REXX FUNCTIONS
055600 2201-FREE-SYSEXEC.
055700
055800     MOVE 'FREE  DD(SYSEXEC)' TO ALLOC-TEXT
055900     PERFORM 9000-DYNAMIC-ALLOC-DEALLOC .
056000
056300*****************************************************************
056400**  CALL BPXWDYN TO PREFORM REQUIRED REXX FUNCTIONS
056500 9000-DYNAMIC-ALLOC-DEALLOC.
056600
056700     CALL BPXWDYN USING ALLOC-STRING
056800
056900     IF RETURN-CODE NOT = ZERO
057000         DISPLAY 'C1UEXT02: ALLOCATION result: RETURN CODE = '
057100                 RETURN-CODE
057200         DISPLAY ALLOC-TEXT
057300     END-IF
057400
057500     MOVE SPACES TO ALLOC-TEXT
057600     .
057700
057800
057900******************************************************************
058000*  BEGIN NESTED PROGRAMS USED TO SET THE POINTERS OF DATA AREAS
058100*  THAT ARE BEING PASSED TO IRXEXEC SO THAT A REXX ROUTINE CAN
058200*  PASS DATA (OTHER THAN A RETURN CODE) BACK TO A COBOL PROGRAM.
058300******************************************************************
058400
058500******** SET-ARG1-POINTER ********
058600 IDENTIFICATION DIVISION.
058700 PROGRAM-ID. SET-ARG1-POINTER.
058800 ENVIRONMENT DIVISION.
058900 DATA DIVISION.
059000 WORKING-STORAGE SECTION.
059100 LINKAGE SECTION.
059200   77 ARG-PTR                        POINTER.
059300   77 ARG1                           PIC X(16).
059400 PROCEDURE DIVISION USING ARG-PTR
059500                          ARG1.
059600     SET ARG-PTR TO ADDRESS OF ARG1
059700     GOBACK.
059800 END PROGRAM SET-ARG1-POINTER.
059900
060000******** SET-ARGUMENT-POINTER ********
060100 IDENTIFICATION DIVISION.
060200 PROGRAM-ID. SET-ARGUMENT-POINTER.
060300 ENVIRONMENT DIVISION.
060400 DATA DIVISION.
060500 WORKING-STORAGE SECTION.
060600 LINKAGE SECTION.
060700   77 ARGTABLE-PTR                   POINTER.
060800   01 ARGUMENT.
060900     02 ARGUMENT-1                   OCCURS 1 TIMES.
061000      05 ARGSTRING-PTR               POINTER.
061100      05 ARGSTRING-LENGTH            PIC S9(8) BINARY.
061200     02 ARGSTRING-LAST1              PIC S9(8) BINARY.
061300     02 ARGSTRING-LAST2              PIC S9(8) BINARY.
061400 PROCEDURE DIVISION USING ARGTABLE-PTR
061500                          ARGUMENT.
061600     SET ARGTABLE-PTR TO ADDRESS OF ARGUMENT
061700     GOBACK.
061800 END PROGRAM SET-ARGUMENT-POINTER.
061900
062000******** SET-EXECBLK-POINTER ********
062100 IDENTIFICATION DIVISION.
062200 PROGRAM-ID. SET-EXECBLK-POINTER.
062300 ENVIRONMENT DIVISION.
062400 DATA DIVISION.
062500 WORKING-STORAGE SECTION.
062600 LINKAGE SECTION.
062700   77 EXECBLK-PTR                    POINTER.
062800   01 EXECBLK.
062900      03 EXECBLK-ACRYN               PIC X(8).
063000      03 EXECBLK-LENGTH              PIC 9(4) COMP.
063100      03 EXECBLK-RESERVED            PIC 9(4) COMP.
063200      03 EXECBLK-MEMBER              PIC X(8).
063300      03 EXECBLK-DDNAME              PIC X(8).
063400      03 EXECBLK-SUBCOM              PIC X(8).
063500      03 EXECBLK-DSNPTR              POINTER.
063600      03 EXECBLK-DSNLEN              PIC 9(4) COMP.
063700 PROCEDURE DIVISION USING EXECBLK-PTR
063800                          EXECBLK.
063900     SET EXECBLK-PTR TO ADDRESS OF EXECBLK
064000     GOBACK.
064100 END PROGRAM SET-EXECBLK-POINTER.
064200
064300******** SET-EVALBLK-POINTER ********
064400 IDENTIFICATION DIVISION.
064500 PROGRAM-ID. SET-EVALBLK-POINTER.
064600 ENVIRONMENT DIVISION.
064700 DATA DIVISION.
064800 WORKING-STORAGE SECTION.
064900 LINKAGE SECTION.
065000   77 EVALBLK-PTR                    POINTER.
065100   01 EVALBLK.
065200      03 EVALBLK-EVPAD1              PIC 9(4) COMP.
065300      03 EVALBLK-EVSIZE              PIC 9(4) COMP.
065400      03 EVALBLK-EVLEN               PIC 9(4) COMP.
065500      03 EVALBLK-EVPAD2              PIC 9(4) COMP.
065600      03 EVALBLK-EVDATA              PIC X(256).
065700 PROCEDURE DIVISION USING EVALBLK-PTR
065800                          EVALBLK.
065900     SET EVALBLK-PTR TO ADDRESS OF EVALBLK
066000     GOBACK.
066100 END PROGRAM SET-EVALBLK-POINTER.
066200*--- END OF MAIN PROGRAM
066300 END PROGRAM C1UEXT02.
