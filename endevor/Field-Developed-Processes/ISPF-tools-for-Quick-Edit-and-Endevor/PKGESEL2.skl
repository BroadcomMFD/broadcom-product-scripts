)ATTR
/*-----------------------------------------------------------------------*/
/* Copyright (C) 2007 CA. All Rights Reserved.                           */
/*-----------------------------------------------------------------------*/
/* Following lines inserted for Endevor Action Bar/CUA support...        */
 0A TYPE(NT)                /* normal text */
 0B TYPE(AB)                /* Action bar Item */
 2D TYPE(ABSL) GE(ON)       /* action bar separator */
 16 TYPE(VOI) PADC(USER)    /* Var output info - Panel Title/navigation */
 28 TYPE(FP)                /* Field Prompt - Use for command/scroll text*/
 14 TYPE(NEF) CAPS(ON) PADC(USER) /* Normal Entry Field - cmd, scroll etc*/
 0d TYPE(PS)                /* Point and shoot */
/* End Action Bar Support Attributes                                     */
/* Following lines inserted for WideScreen Attribute support...          */
 # TYPE(OUTPUT) COLOR(YELLOW) CAPS(OFF)
 | TYPE(OUTPUT) COLOR(TURQ)   CAPS(OFF)
 ^ TYPE(OUTPUT) COLOR(RED)    CAPS(OFF)
 " TYPE(OUTPUT) COLOR(WHITE)  INTENS(HIGH) CAPS(OFF)
 @ TYPE(OUTPUT) COLOR(BLUE)   INTENS(LOW) CAPS(OFF)
 _ TYPE(INPUT)  COLOR(RED)    INTENS(HIGH) PADC(_) CAPS(ON) JUST(LEFT)
 { TYPE(INPUT)  COLOR(RED)    INTENS(HIGH) PADC(_) CAPS(OFF) JUST(ASIS)
 , TYPE(INPUT) CAPS(&VARCACCI) FORMAT(&VARFMCCI) PADC(_)
 ` TYPE(INPUT) CAPS(&VARCACOM) FORMAT(&VARFMCOM) PADC(_)
 ~ TYPE(INPUT) CAPS(&VARCADES) FORMAT(&VARFMDES) PADC(_)
/*-----------------------------------------------------------------------*/
/* Following lines inserted for Endevor Action Bar support...            */
/*-----------------------------------------------------------------------*/
)ABC DESC('Endevor') MNEM(1)
PDC DESC('Messages...')    MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(QMSGS)')
PDC DESC('Endevor')       MNEM(1) ACTION RUN(ISRROUTE)
 PARM('SELECT PGM(C1SM1000) NOCHECK NEWAPPL(CTLI) SCRNAME(NDAB16) PASSLIB')
PDC DESC('PDM')           MNEM(1) ACTION RUN(ISRROUTE)
 PARM('SELECT PGM(BC1G1000) NOCHECK NEWAPPL(CTLI) SCRNAME(PDAB16) PASSLIB')
PDC DESC('User Menu')     MNEM(1) ACTION  RUN(ISRROUTE)
  PARM('SELECT PANEL(NDVRUSER) NEWAPPL(CTLI) SCRNAME(USAB16) PASSLIB')
PDC DESC('ACMQ...')       MNEM(1)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ACMQ)')
PDC DESC('ESrchfor...')   MNEM(2) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESRCHFOR)')
PDC DESC('PackageEles...') MNEM(2) UNAVAIL(ENABUNA) ACTION RUN(ISRROUTE)
 PARM('SELECT CMD(PKGELES)')
PDC DESC('Exit') MNEM(2) PDSEP(ON) ACC(CTRL+X) ACTION RUN(EXIT)
)ABCINIT
.ZVARS=ENABOPT
)ABC DESC('Settings') MNEM(3)
PDC DESC('CCID/Comment')     MNEM(1)             /* 1.Edit CCID/COmment
 */
   ACTION RUN(ISRROUTE) PARM('SELECT CMD(ECCID)')
PDC DESC('&ENABOSIG.                  ') MNEM(1) /* 2.Toggle OverrideSignout
 */
PDC DESC('&ENABELMD.                  ') MNEM(1) /* 3.Toggle Element save
 */
PDC DESC('ECols...')                     MNEM(2) /* 4.Edit Column Settings
 */
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ECOLS)')
PDC DESC('Defaults...')       MNEM(1) UNAVAIL(ENABLST)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(EDFLTS)') /* 5/6. Can't do these...
 */
PDC DESC('Action Options...') MNEM(1) UNAVAIL(ENABLST)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(EDACTO)') /* without changes to Q/E
 */
)ABCINIT
.ZVARS=ENABSET
&ENABSET = &Z
 VGET (EEVOOSGN) SHARED
 VGET (ENABELMP) PROFILE
 if (&EEVOOSGN EQ 'Y')
   &ENABOSIG = 'Disable Override Signout'
 else
   &ENABOSIG = 'Enable Override Signout'
 if (&ENABELMP EQ 'Y')
   &ENABELMD = 'Forget Element Name'
 else
   &ENABELMD = 'Save Element Name in profile'
)ABCPROC
 if (&ENABSET EQ '1')        /* CCID/Comment */
    &EABREFSH = 'EEVCCID EEVCOMM'
 if (&ENABSET EQ '2')        /* toggle OverRide Signout */
   if (&EEVOOSGN EQ 'Y')
     &EEVOOSGN = 'N'
   else
     &EEVOOSGN = 'Y'
   VPUT (EEVOOSGN) SHARED
   &EABREFSH = 'EEVOOSGN'
 if (&ENABSET EQ '3')        /* toggle element save */
   if (&ENABELMP EQ 'Y')
     &ENABELMP = 'N'
     &QEPELM   = ''
     VPUT (QEPELM) PROFILE
   else
     &ENABELMP = 'Y'
   VPUT (ENABELMP) PROFILE
   &EABREFSH = 'ENABELMP'
)ABC DESC('Sort') MNEM(1)
PDC DESC('Element')          MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT)')
PDC DESC('Message(-)')       MNEM(2) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT -MES)')
PDC DESC('System')           MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT SYS)')
PDC DESC('SubSystem')        MNEM(3) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT SUB)')
PDC DESC('Type')             MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT TYP)')
PDC DESC('Environ')          MNEM(2) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT ENV)')
PDC DESC('Stage')            MNEM(4) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT STA)')
PDC DESC('VVLL(-)')          MNEM(2) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT -VVL)')
PDC DESC('CCID')             MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT CCI)')
PDC DESC('Userid')           MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT USE)')
PDC DESC('Signout')          MNEM(2) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT SIG)')
PDC DESC('Endevor RC(-)')    MNEM(9) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT -NDR)')
PDC DESC('Processor RC(-)')  MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT -PRR)')
PDC DESC('Processor Group') MNEM(11) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT PRO)')
PDC DESC('NoSource(-)')      MNEM(1) UNAVAIL(ENABPRI)
 ACTION RUN(ISRROUTE) PARM('SELECT CMD(ESORT -NS)')
)ABCINIT
.ZVARS=ENABSET
)ABC DESC('Menu') MNEM(1)
PDC DESC('Settings') UNAVAIL(ZPM1) MNEM(1) ACC(CTRL+S)
 ACTION RUN(ISRROUTE) PARM('SET')
PDC DESC('View') UNAVAIL(ZPM2) MNEM(1) ACC(CTRL+V)
 ACTION RUN(ISRROUTE) PARM('BR1')
PDC DESC('Edit') UNAVAIL(ZPM3) MNEM(1) ACC(CTRL+E)
 ACTION RUN(ISRROUTE) PARM('ED1')
PDC DESC('ISPF Command Shell') UNAVAIL(ZPM4) MNEM(6) ACC(CTRL+C)
 ACTION RUN(ISRROUTE) PARM('C1')
PDC DESC('Dialog Test...') UNAVAIL(ZPM5) MNEM(8) ACC(CTRL+T)
 ACTION RUN(ISRROUTE) PARM('DAL')
PDC DESC('Other IBM Products...') UNAVAIL(ZPM6) MNEM(1) ACC(CTRL+O)
 ACTION RUN(ISRROUTE) PARM('OIB')
PDC DESC('SCLM') UNAVAIL(ZPM7) MNEM(3) ACC(CTRL+L)
 ACTION RUN(ISRROUTE) PARM('SCL')
PDC DESC('ISPF Workplace') UNAVAIL(ZPM8) MNEM(6) ACC(CTRL+W)
 ACTION RUN(ISRROUTE) PARM('WRK')
PDC DESC('Status Area...') UNAVAIL(ZPMS) MNEM(8) ACC(CTRL+A)
 ACTION RUN(ISRROUTE) PARM('SAM')
)ABCINIT
.ZVARS=ISR@OPT
)ABC DESC('Utilities') MNEM(1)
PDC DESC('Library') UNAVAIL(ZUT1) MNEM(1) ACC(ALT+1)
 ACTION RUN(ISRROUTE) PARM('U1')
PDC DESC('Data set') UNAVAIL(ZUT2) MNEM(1) ACC(ALT+2)
 ACTION RUN(ISRROUTE) PARM('U2')
PDC DESC('Move/Copy') UNAVAIL(ZUT3) MNEM(1) ACC(ALT+3)
 ACTION RUN(ISRROUTE) PARM('U3')
PDC DESC('Data Set List') UNAVAIL(ZUT4) MNEM(2) ACC(ALT+4)
 ACTION RUN(ISRROUTE) PARM('U4')
PDC DESC('Reset Statistics') UNAVAIL(ZUT5) MNEM(5) ACC(ALT+5)
 ACTION RUN(ISRROUTE) PARM('U5')
PDC DESC('Hardcopy') UNAVAIL(ZUT6) MNEM(1) ACC(ALT+6)
 ACTION RUN(ISRROUTE) PARM('U6')
PDC DESC('Download...') UNAVAIL(ZUTDT) MNEM(2) ACC(ALT+7)
 ACTION RUN(ISRROUTE) PARM('UDT')
PDC DESC('Outlist') UNAVAIL(ZUT7) MNEM(2) ACC(ALT+8)
 ACTION RUN(ISRROUTE) PARM('U8')
PDC DESC('Commands...') UNAVAIL(ZUT8) MNEM(1) ACC(ALT+9)
 ACTION RUN(ISRROUTE) PARM('U9')
PDC DESC('Reserved') UNAVAIL(ZUT9) MNEM(6) ACTION RUN(ISRROUTE) PARM('U10')
PDC DESC('Format') UNAVAIL(ZUT10) MNEM(1) ACC(ALT+F1)
 ACTION RUN(ISRROUTE) PARM('U11')
PDC DESC('SuperC') UNAVAIL(ZUT11) MNEM(1) PDSEP(ON) ACC(CTRL+F2)
 ACTION RUN(ISRROUTE) PARM('U12')
PDC DESC('SuperCE') UNAVAIL(ZUT12) MNEM(3) ACC(CTRL+F3)
 ACTION RUN(ISRROUTE) PARM('U13')
PDC DESC('Search-For') UNAVAIL(ZUT13) MNEM(2) ACC(CTRL+F4)
 ACTION RUN(ISRROUTE) PARM('U14')
PDC DESC('Search-ForE') UNAVAIL(ZUT14) MNEM(4) ACC(CTRL+F5)
 ACTION RUN(ISRROUTE) PARM('U15')
PDC DESC('Table Utility') UNAVAIL(ZUT15) MNEM(3) ACC(CTRL+F6)
 ACTION RUN(ISRROUTE) PARM('U16')
PDC DESC('Directory List') UNAVAIL(ZUT16) MNEM(2) ACC(CTRL+F7)
 ACTION RUN(ISRROUTE) PARM('U17')
)ABCINIT
.ZVARS=PDFUTIL
     &zut9 = '1'
)ABC DESC('Help') MNEM(1)
PDC DESC('QuickEdit') MNEM(1) ACTION RUN(TUTOR) PARM('ENDHE100')
PDC DESC('Commands & Options') MNEM(1) ACTION RUN(TUTOR) PARM('ENDHE110')
PDC DESC('Location Fields') MNEM(1) ACTION RUN(TUTOR) PARM('ENDHE120')
PDC DESC('List Options') MNEM(6) ACTION RUN(TUTOR) PARM('ENDHE130')
PDC DESC('Action Options') MNEM(1) ACTION RUN(TUTOR) PARM('ENDHE140')
PDC DESC('Element Selection') MNEM(1) ACTION RUN(TUTOR) PARM('ENDHE250')
PDC DESC('Settings, Defaults') MNEM(11) ACTION RUN(TUTOR) PARM('ENDHEO00')
PDC DESC('Settings, Action Options') MNEM(1) ACTION RUN(TUTOR) PARM('ENDHE15
0')
PDC DESC('Endevor') MNEM(2) ACTION RUN(TUTOR) PARM('CITM1000')
)ABCINIT
.ZVARS=MEMLHELP
)BODY WIDTH(&ZSCREENW) EXPAND(\\) CMD(VARWKCMD)
 Endevor Settings Sort Menu Utilities Help
-------------------------------------------------\-\-----------------------
---
ENABFNC  ENABWAI
Command ===>VARWKCMD                                    \ \ Scroll ===>A
MT +
+
+  Element Options:
+   %S+Select Element(s)  %U+UnSelect Element(s)
+                                                     \ \      <==More
   +
@PKGE1H1
@PKGE1H2
)MODEL CLEAR(&PKGE1CL)
&PKGE1M1
&PKGE1M2
)INIT
/* Following lines inserted for Endevor Action Bar/CUA support...        */
&ENABFNC = 'Package'                         /* show where we are */
&ENABUNA = '1'                               /* UnAvailable Reserved */
&ENABPRI = '0'                               /* UnAvailable On Primary menu
*/
&ENABLST = '1'                               /* UnAvailable On list panel  *
/
&ENABWAIE = TRANS(&QEPEVNME, '','*' *,*)
&ENABWAIS = TRANS(&QEPSYS    '','*' *,*)
&ENABWAIB = TRANS(&QEPSBS    '','*' *,*)
&ENABWAIL = TRANS(&QEPELM    '','*' *,*)
&ENABWAIT = TRANS(&QEPTYP    '','*' *,*)
&ENABWAI = '&ENABWAIE/&ENABWAIS/&ENABWAIB/&ENABWAIL/&ENABWAIT'
/* Add Code for WideScreen Support - this is where the magic happens...  */
  .ZVARS = '(&PKGE1VR)'                  /* Set Zvars to match the model */
  &ZTDMARK= '&PKGE1ZM'                   /* and btm marker to match head */
  &VARPFX = 'PKGE'                       /* Set WideScreen prefix        */
  VPUT (VARPFX) SHARED                   /* and save it                  */
  VGET (ECOLREF) SHARED                  /* check did user change values */
  if (&ECOLREF = 'PENDING')              /* Pending, we're half way...   */
    &ECOLREF = ''                        /* reset the flag               */
    VPUT (ECOLREF) SHARED                /* ...and save it               */
    &ZCMD = RIGHT                        /* If we went left to get here  */
    .RESP = ENTER                        /* ...go right this time        */
    EXIT
  if (&ECOLREF = 'YES' )                 /* Yes, get new values, and     */
    &ECOLREF = 'PENDING'                 /* reset the flag to half-way   */
    VPUT (ECOLREF) SHARED                /* ...and save it               */
    &ZCMD = LEFT                         /* Set scroll to LEFT 1st  time */
    /* First get the values the user has just changed                    */
    VGET (PKGE1H1 PKGE1H2 PKGE1M1 PKGE1M2 PKGE1VR PKGE1CL) profile
    VGET (PKGE0H1 PKGE0H2 PKGE0M1 PKGE0M2 PKGE0VR PKGE0CL) profile
    /* Then trim them if necessary to match the available screen width   */
    *REXX (ZSCREENW ESRCHWRP VARPFX
       PKGE0H1  PKGE0H2  PKGE0M1  PKGE0M2  PKGE0VR  PKGE0CL PKGE0ZM
       PKGE1H1  PKGE1H2  PKGE1M1  PKGE1M2  PKGE1VR  PKGE1CL PKGE1ZM, (ENDVWI
DE))
    /* Make sure variables are available to other commands - e.g. COPYELM*/
    VPUT (PKGE0H1 PKGE0H2 PKGE0M1 PKGE0M2 PKGE0VR PKGE0CL PKGE0ZM) SHARED
    VPUT (PKGE1H1 PKGE1H2 PKGE1M1 PKGE1M2 PKGE1VR PKGE1CL PKGE1ZM) SHARED
    .RESP = ENTER                        /* and simulate an Enter key    */
    EXIT                                 /* our works is done, scroll    */
  .HELP = ENDHE250
  VGET (AMT)
  IF (&AMT = '')
    &AMT = CSR
)PROC
  VPUT (AMT) PROFILE
  &VARWKSEL = &EEVETSEL
  &EEVSELCH = &EEVETSEL
)FIELD
  FIELD(VARWKCMD) SCROLL(NO)  LEN(255)
  FIELD(EEVETSEL) SCROLL(NO)  /* no scroll in sel field so PF10/11 work */
  FIELD(EEVETKEL) SCROLL(YES) LEN(255)
  FIELD(EEVETDMS) SCROLL(YES) LEN(133)
  FIELD(EEVETKTY) SCROLL(YES) LEN(008)
  FIELD(EEVETNS ) SCROLL(YES) LEN(001)
  FIELD(EEVETKEN) SCROLL(YES) LEN(008)
  FIELD(EEVETKSI) SCROLL(YES) LEN(008)
  FIELD(EEVETKSY) SCROLL(YES) LEN(008)
  FIELD(EEVETKSB) SCROLL(YES) LEN(008)
  FIELD(EEVETDVL) SCROLL(YES) LEN(008)
  FIELD(EEVETPGR) SCROLL(YES) LEN(008)
  FIELD(EEVETUID) SCROLL(YES) LEN(008)
  FIELD(EEVETCCI) SCROLL(YES) LEN(012)
  FIELD(EEVETPRC) SCROLL(YES) LEN(008)
  FIELD(EEVETNRC) SCROLL(YES) LEN(008)
  FIELD(EEVETSO ) SCROLL(YES) LEN(008)
  FIELD(ESRFOUND) SCROLL(YES) LEN(255)
  FIELD(ESRTGTEL) SCROLL(YES) LEN(008)
  FIELD(USERDATA) SCROLL(YES) LEN(080)
)PNTS
  FIELD(ZPS00001) VAR(VARWKCMD) VAL('LEFT')
  FIELD(ZPS00002) VAR(VARWKCMD) VAL('RIGHT')
)END
