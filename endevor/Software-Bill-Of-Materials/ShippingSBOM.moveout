./  ADD  NAME=@README                     
These are asm          : C1LSTBKO 
These are rex/CSIQCLS0 : CMPNTGEN MODAHJOB 
These are skl/CSIQSENU : #NFTPRCN #PSNFTP1 #PSNFTP6 #PSNFTPE #PSNFTPJ #PSNFTPP #PSNFTPS #PSXCOME #PSXCOMP #PSXCOMS #RJ0 #RJFCPY1 #RJFCPY2 #RJICPY1 #RJICPY2 #RJICPYL #RJICPYU #RJNDVRA #RJNDVRA #RJNDVRB #RJNDVRS C1BMXCOM C1BMXEOJ C1BMXFTP C1BMXHCN C1BMXIN C1BMXJOB C1BMXLIB C1BMXLOC C1BMXNDM C1BMXRCN C1BMXSBD HASHSBOM SCMM@REX 
./  ADD  NAME=C1LSTBKO                
C1LSTBKO TITLE 'LIST PACKAGE BACKOUTS'                                          
***********************************************************************         
*   DESCRIPTION: THIS SAMPLE PROGRAM ISSUES A REQUEST TO THE                    
*                ENDEVOR API TO EXECUTE LIST PACKAGE BACKOUT                    
*                USING ENDEVOR API.                                             
*                                                                               
*   LINK EDIT:   AMODE=31,RMODE=24,RENT,REUS (RECOMMENDED)                      
*                OR                                                             
*                AMODE=24,RMODE=24,RENT,REUS                                    
*                                                                               
*   REGISTERS ON ENTRY:                                                         
*                                                                               
*   REGISTER USAGE:                                                             
*                R1     -> PARAMETER LIST                                       
*                R2     -> SAVE RETURN CODE                                     
*                R3     -> SAVE REASON CODE                                     
*                R12    -> BASE PROGRAM                                         
*                R13    -> STANDARD USAGE........                               
*                R15    -> RETURN CODE FROM CALL                                
*   ==>                 -> WE USE STANDARD STACK SAVEAREA USAGE                 
*                                                                               
*   THIS TEST PROGRAM PERFORMS THE FOLLOWING PACKAGE ACTIONS;                   
*         -- LBKO     LIST BACK-OUT INFORMATION FOR A PKG                       
*            HOW MANY ACTIONS ARE EXECUTED.  AS DELIVERED, ALL 7                
*            LIST PACKAGE ACTION WILL BE EXECUTED.                              
***********************************************************************         
*   WORKAREA                                                                    
***********************************************************************         
WORKAREA DSECT                                                                  
SAVEAREA DS    18F                                                              
WPARMLST DS    3A                      PARAMETER LIST                           
WCNT     DS    H                       ACTION COUNTER                           
PKGID    DS    CL16                                                             
         DS    0D                                                               
***********************************************************************         
* API CONTROL BLOCK                                                             
***********************************************************************         
         ENHAACTL DSECT=NO                                                      
***********************************************************************         
* API PACKAGE ACTION REQUEST BLOCKS                                             
***********************************************************************         
         ENHALBKO DSECT=NO                                                      
WORKLN   EQU   *-WORKAREA                                                       
***********************************************************************         
*   REQISTER EQUATES                                                            
***********************************************************************         
R0       EQU   0                                                                
R1       EQU   1                                                                
R2       EQU   2                                                                
R3       EQU   3                                                                
R4       EQU   4                                                                
R5       EQU   5                                                                
R6       EQU   6                                                                
R7       EQU   7                                                                
R8       EQU   8                                                                
R9       EQU   9                                                                
R10      EQU   10                                                               
R11      EQU   11                                                               
R12      EQU   12                                                               
R13      EQU   13                                                               
R14      EQU   14                                                               
R15      EQU   15                                                               
***********************************************************************         
C1LSTBKO CSECT                                                                  
C1LSTBKO AMODE 31                                                               
C1LSTBKO RMODE ANY                                                              
***********************************************************************         
*   HOUSEKEEPING                                                                
***********************************************************************         
         SAVE  (14,12)                 SAVE CALLERS REG 12(13)                  
         LR    R12,R15                 POINT TO THIS PROGRAM                    
         LR    R4,R1                   PARAMETER LIST ADDRESS                   
         USING C1LSTBKO,R12                                                     
***********************************************************************         
*   GET STORAGE FOR WORKAREA                                                    
***********************************************************************         
         L     R0,=A(WORKLN)           GET SIZE OF W.A                          
         GETMAIN R,LV=(0)              GET WORKING STORAGE                      
         ST    R1,8(R13)               STORE NEW STACK +8(OLD)                  
         ST    R13,4(R1)               STORE OLD STACK +4(NEW)                  
         LR    R13,R1                  POINT R13 TO OUR STACK                   
         LR    R11,R1                  LOAD SECOND BASE REGISTER                
         AHI   R11,4096                MOVE FOR 4096 BYTES                      
         USING SAVEAREA,R13,R11        ESTABLISH ADDRESSIBILIY                  
         SPACE ,                                                                
************************************************************                    
*        GET PACKAGE ID PASSED TO THIS PROGRAM                                  
************************************************************                    
         L    R4,0(R4)                                                          
         N    R4,=X'7FFFFFFF'                                                   
         LH   R5,0(R4)            GET  LENGTH                                   
         LTR  R5,R5                                                             
         BZ   NOPKGID                                                           
         BCTR R5,0                                                              
         MVC  PKGID,=CL16' '                                                    
         EX   R5,MOVEPKG                                                        
************************************************************                    
*        INITIALIZE AND POPULATE THE CONTROL STRUCTURE                          
*        NOTE: IF ANY INVENTORY MANAGEMENT MESSAGES ARE ISSUED, THEY            
*        ARE WRITTEN TO THE MSG DATA SET. THE OUTPUT FROM THIS REQUEST          
*        IS WRITTEN TO THE LIST DATA SET.                                       
************************************************************                    
         API$INIT STG=AACTL,BLOCK=AACTL                                         
         MVI   AACTL_SHUTDOWN,C'N'                                              
         MVC   AACTL_MSG_DDN,=CL8'APIMSGS '                                     
         MVC   AACTL_LIST_DDN,=CL8'       '                                     
         MVC   AACTL_STOPRC,=H'16'                                              
*                                                                               
************************************************************                    
BACKOUT  DS    0H                                                               
         MVC   AACTL_MSG_DDN,=CL8'BOUTMSG '                                     
         MVC   AACTL_LIST_DDN,=CL8'BOUTLST '                                    
*                                                                               
************************************************************                    
* LIST PACKAGE BACKOUT INFORMATION REQUEST                                      
*        INITIALIZE AND POPULATE THE REQUEST STRUCTURE                          
************************************************************                    
LISTBOUT DS    0H                                                               
         API$INIT STG=ALBKO_RQ,BLOCK=ALBKO_RQ                                   
         API$INIT STG=ALBKO_RS,BLOCK=ALBKO_RS                                   
* PACKAGE SELECTION CRITERIA                                                    
         MVC   ALBKO_RQ_PKGID,PKGID                                             
*                                                                               
************************************************************                    
*        BUILD PARMLIST                                                         
************************************************************                    
BLDPARML DS    0H                                                               
         LA    R1,WPARMLST                                                      
         LA    R14,AACTL                                                        
         ST    R14,0(0,R1)                                                      
         LA    R14,ALBKO_RQ                                                     
         ST    R14,4(0,R1)                                                      
         LA    R14,ALBKO_RS                                                     
         ST    R14,8(0,R1)                                                      
         OI    8(R1),X'80'                                                      
*                                                                               
************************************************************                    
*        CALL THE ENDEVOR API INTERFACE PROGRAM                                 
************************************************************                    
XCALLAPI DS    0H                                                               
         L     R15,=V(ENA$NDVR)                                                 
         BALR  R14,R15                                                          
         LR    R2,R15                    HOLD ONTO THE RETURN CODE              
         LR    R3,R0                     HOLD ONTO THE REASON CODE              
************************************************************                    
* SHUTDOWN THE API SERVER. ONLY THE AACTL BLOCK IS REQUIRED.                    
************************************************************                    
XSHUTDWN DS    0H                                                               
         API$INIT STG=AACTL,BLOCK=AACTL                                         
         MVI   AACTL_SHUTDOWN,C'Y'                                              
         LA    R1,WPARMLST                                                      
         LA    R14,AACTL                                                        
         ST    R14,0(0,R1)                                                      
         OI    0(R1),X'80'                                                      
         L     R15,=V(ENA$NDVR)                                                 
         BALR  R14,R15                                                          
         B     EXITOK                                                           
***********************************************************************         
* PROGRAM EXIT                                                                  
***********************************************************************         
NOPKGID  DS    0H                                                               
         WTO   'C1LSTBKO - NO PACKAGE ID PASSED TO THIS PROGRAM'                
         LA    R7,114                                                           
EXITOK   DS    0H                      SAVE SAVEAREA ADDRESS                    
         LR    R5,R13                  SAVE SAVEAREA ADDRESS                    
         L     R13,4(R13)              POINT TO PREVIOUS SAVEAREA               
*   CLEAN UP THIS PROGRAM'S STORAGE                                             
         L     R0,=A(WORKLN)                GET SIZE                            
         FREEMAIN R,A=(R5),LV=(R0)          FREE STORAGE                        
         C     R7,=F'114'                                                       
         BE    EXTNPARM                                                         
         LR    R15,R2                       SET RETURN CODE FROM CALL           
         B     LOADSA                                                           
EXTNPARM DS    0H                                                               
         LR    R15,R7                                                           
LOADSA   L     R14,12(R13)                                                      
         LM    R0,R12,20(R13)                                                   
         BSM   0,R14                        RETURN                              
MOVEPKG  MVC   PKGID(0),2(R4)                                                   
         END                                                                    
          
./  ADD  NAME=CMPNTGEN                
/*REXX***************************************************************/          
/********************************************************************/          
/************/                                                                  
/* MAIN     */                                                                  
/************/                                                                  
parse upper arg packageID TransMethod                                           
                                                                                
trace off                                                                       
                                                                                
select                                                                          
                                                                                
  when TransMethod = 'LOCAL' then do                                            
                                                                                
    if ExistDDname('XLCC') Then Do                                              
                                                                                
      "execio * diskr xlcc (stem xlcc. finis"                                   
                                                                                
      if xlcc.0 = 0 then do                                                     
        say 'XLCC file is empty'                                                
        return 8                                                                
       End                                                                      
                                                                                
      parse var xlcc.1 . "'" ahjobdsn "'"                                       
                                                                                
     end                                                                        
                                                                                
    else do                                                                     
      Say 'CMPGEN01E DDname XLCC is not allocated.'                             
      Return 8                                                                  
     end                                                                        
                                                                                
  end /* when LOCAL */                                                          
                                                                                
                                                                                
  when TransMethod = 'NETVIEW_FTP' then do                                      
                                                                                
    if ExistDDname('XFTC') Then Do                                              
                                                                                
      "execio * diskr xftc (stem xftc. finis"                                   
                                                                                
      if xftc.0 = 0 then do                                                     
        say 'XFTC file is empty'                                                
        return 8                                                                
      End                                                                       
                                                                                
      do i = 1 to xftc.0                                                        
                                                                                
        if pos('PUT ',xftc.i)  <> 0 & ,                                         
           pos('AHJOB',xftc.i) <> 0 Then do                                     
                                                                                
            parse var xftc.i  . "PUT " ahjobdsn .                               
            parse var ahjobdsn "'" ahjobdsn "'"                                 
            ahjobdsn = strip(ahjobdsn)                                          
            leave                                                               
                                                                                
        end /* if pos */                                                        
                                                                                
      end /* do i */                                                            
                                                                                
     end                                                                        
                                                                                
    else do                                                                     
      Say 'CMPGEN01E DDname XFTC is not allocated.'                             
      Return 8                                                                  
     end                                                                        
                                                                                
                                                                                
  end /* when NETVIEW */                                                        
                                                                                
                                                                                
  when TransMethod = 'XCOM' then do                                             
                                                                                
    if ExistDDname('XXCC') Then Do                                              
                                                                                
      "execio * diskr xxcc (stem xxcc. finis"                                   
                                                                                
      if xxcc.0 = 0 then do                                                     
        say 'XXCC file is empty'                                                
        return 8                                                                
      End                                                                       
                                                                                
      do i = 1 to xxcc.0                                                        
                                                                                
        if pos('LFILE=',xxcc.i) <> 0 & ,                                        
           pos('AHJOB',xxcc.i)  <> 0  Then do                                   
                                                                                
           parse var xxcc.i  . "LFILE=" ahjobdsn .                              
           ahjobdsn = strip(ahjobdsn)                                           
           leave                                                                
                                                                                
        end /* if pos */                                                        
                                                                                
      end /* do i */                                                            
                                                                                
     end                                                                        
                                                                                
    else do                                                                     
      Say 'CMPGEN01E DDname XXCC is not allocated.'                             
      Return 8                                                                  
     end                                                                        
                                                                                
                                                                                
  end /* when XCOM */                                                           
                                                                                
  when TransMethod = 'NETWORK_DM' then do                                       
                                                                                
    if ExistDDname('XNWC') Then Do                                              
                                                                                
      "execio * diskr xnwc (stem xnwc. finis"                                   
                                                                                
      if xnwc.0 = 0 then do                                                     
        say 'xnwc file is empty'                                                
        return 8                                                                
      End                                                                       
                                                                                
      do i = 1 to xnwc.0                                                        
                                                                                
        if pos('DSN=',xnwc.i)  <> 0 & ,                                         
           pos('AHJOB',xnwc.i) <> 0  Then do                                    
                                                                                
           parse var xnwc.i  . "DSN=" ahjobdsn ")" .                            
           ahjobdsn = strip(ahjobdsn)                                           
           leave                                                                
                                                                                
        end /* if pos */                                                        
                                                                                
      end /* do i */                                                            
                                                                                
     end                                                                        
                                                                                
    else do                                                                     
      Say 'CMPGEN01E DDname xnwc is not allocated.'                             
      Return 8                                                                  
     end                                                                        
                                                                                
                                                                                
  end /* when NETWORK_DM */                                                     
                                                                                
  otherwise                                                                     
    say 'MODAHJOB01E Transmission method is not supported'                      
    return 12                                                                   
                                                                                
end /* Select */                                                                
                                                                                
                                                                                
/*                                                                              
  Alocation Check                                                               
*/                                                                              
                                                                                
if ^ExistDDname('LISTPKGA') Then Do                                             
  Say 'CMPGEN01E DDname LISTPKGA is not allocated.'                             
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('COMPTEMP') Then Do                                             
  Say 'CMPGEN01E DDname COMPTEMP is not allocated.'                             
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('COMPNTS') Then Do                                              
  Say 'CMPGEN01E DDname COMPNTS is not allocated.'                              
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('GENFILES') Then Do                                             
  Say 'CMPGEN01E DDname GENFILES is not allocated.'                             
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('BOUTLST') Then Do                                              
  Say 'CMPGEN02E DDname BOUTLST is not allocated.'                              
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('C1MSGS1') Then Do                                              
  Say 'CMPGEN02E DDname C1MSGS1 is not allocated.'                              
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('bstipt01') Then Do                                             
  Say 'CMPGEN02E DDname bstipt01 is not allocated.'                             
  Return 8                                                                      
End                                                                             
                                                                                
if ^ExistDDname('ahjobdsn') Then Do                                             
  Say 'CMPGEN02E DDname ahjobdsn is not allocated.'                             
  Return 8                                                                      
End                                                                             
                                                                                
"Execio * Diskr LISTPKGA (Stem listpkga. finis"                                 
ExecioRC = RC                                                                   
                                                                                
                                                                                
If ExecioRC > 0 Then Do                                                         
  Say 'CMPGEN05E Error reading file LISTPKGA. ',                                
      'rc: 'ExecioRC                                                            
  Return ExecioRC                                                               
End                                                                             
                                                                                
if listpkga.0 = 0 then Do                                                       
    Say 'CMPGEN05E Package Actions dataset is empty.'                           
    Return 12                                                                   
End                                                                             
                                                                                
delimiter = ',' /* Change to the C2D(...) function for                          
                   some characters like tab */                                  
quotation_mark = '"'                                                            
ndvrparm = 'C1BM3000'                                                           
NoBackout = 0                                                                   
GenFileDS. = ''                                                                 
GenIX = 0                                                                       
max_RC = 0                                                                      
/* integer_style = 1 */                                                         
                                                                                
/*                                                                              
  Get Host Staging data sets to be inclueded in the SBOM                        
*/                                                                              
                                                                                
rcHS = Generate_Host_Staging_ds(ahjobdsn)                                       
if rcHS <> 0 then do                                                            
  say 'Error during Host Staging data set processing'                           
  return rcHS                                                                   
end                                                                             
                                                                                
/*                                                                              
  Process the output generated by LIST PACKAGE ACTION                           
*/                                                                              
call parsecsv csv_file                                                          
                                                                                
if csv.0 > 0 then do                                                            
                                                                                
  /* total contain the name or number of the first column,                      
     we reuse the variable and dont use another */                              
  total = csv.1                                                                 
                                                                                
  /* we assume that every column contain equally many rows */                   
  total = value( 'csv.'total'.0' )                                              
                                                                                
end                                                                             
                                                                                
else return 0                                                                   
                                                                                
if  ListPackageBackouts(packageID) > 0 Then do                                  
  say 'An error ocurred while getting Package Backout using Endevor API. '      
                                                                                
end                                                                             
                                                                                
/*                                                                              
  Process every action included in the Package                                  
*/                                                                              
CompFound = 0                                                                   
                                                                                
do i = 1 to total                                                               
                                                                                
  "NEWSTACK"                                                                    
                                                                                
  queue 'SET STOPRC 12 . '                                                      
                                                                                
  queue 'PRINT ELEMENT "'csv.ELM__S_.i'" TO DDN COMPTEMP'                       
  queue '      FROM ENVIRONMENT "'csv.ENV_NAME__S_.i'"'                         
  queue '      SYSTEM "'csv.SYS_NAME__S_.i'"'                                   
  queue '      SUBSYSTEM "'csv.SBS_NAME__S_.i'"'                                
  queue '      TYPE "'csv.TYPE_NAME__S_.i'"'                                    
  queue '      STAGE 'csv.STG_#__S_.i                                           
  queue '      OPTIONS NOCC COMPONENTS'                                         
  queue '.'                                                                     
                                                                                
  "execio" queued() "diskw bstipt01 (finis"                                     
                                                                                
  "DELSTACK"                                                                    
  address TSO "call *(ndvrc1) '"||ndvrparm||"'"                                 
  ndvr_RC = rc                                                                  
                                                                                
  /*******************************************************************/         
  /* Validate RC from Endevor                                        */         
  /*******************************************************************/         
  select                                                                        
    when ndvr_RC = 0 then do                                                    
                                                                                
      "execio * diskr comptemp (stem comptemp. finis"                           
                                                                                
      do ix = 1 TO comptemp.0                                                   
        say strip(comptemp.ix,'T')                                              
      end                                                                       
                                                                                
      CompFound = 1                                                             
      OutputComponents. = ''                                                    
      call getOutputComponents                                                  
      call MatchBackout csv.ELM__S_.i                                           
                                                                                
      "execio * diskw COMPNTS (stem comptemp. "                                 
                                                                                
    end                                                                         
                                                                                
    when ndvr_RC = 4  then do                                                   
                                                                                
      max_RC = ndvr_RC                                                          
                                                                                
      "execio * diskr c1msgs1 (stem c1msgs1. finis"                             
      do ix = 1 TO c1msgs1.0                                                    
        say strip(c1msgs1.ix,'T')                                               
      end                                                                       
                                                                                
    end /* when ndvr_RC = 4 */                                                  
                                                                                
    otherwise                                                                   
      say ' PRINT ELEMENT COMPONENT rc higher than 4 'ndvr_RC                   
      return ndvr_RC                                                            
                                                                                
  end /* Select */                                                              
End /* do i = 1 to total */                                                     
                                                                                
/* Validate for Components in any elements included in the Pkg */               
if ^CompFound Then DO                                                           
                                                                                
  queue '**********************************************************'            
  queue '**                                                      **'            
  queue '** No components found in any of the elements included  **'            
  queue '** in the Package.                                      **'            
  queue '**                                                      **'            
  queue '**********************************************************'            
                                                                                
  "execio" queued() "diskw COMPNTS (finis"                                      
                                                                                
end /* CompFound */                                                             
                                                                                
                                                                                
Do ix = 1 to boutlst.0                                                          
                                                                                
  If Bout.Used.ix = 'N' then do                                                 
                                                                                
    GenDS = '"//'strip(Bout.DataSetName.ix)'('Bout.elemName.ix')"'              
    queue '--generic-file-source 'GenDS                                         
                                                                                
  end                                                                           
                                                                                
end                                                                             
                                                                                
queue '/*'                                                                      
                                                                                
"execio * diskw GENFILES (finis"                                                
                                                                                
/*                                                                              
  write ahjob data set name for future use                                      
*/                                                                              
queue ahjobdsn                                                                  
"execio" queued() "diskw ahjobdsn (finis"                                       
                                                                                
return max_RC                                                                   
                                                                                
/**********************************************************/                    
/*                                                        */                    
/* Procedimientos y Funciones utilizados en el REXX       */                    
/*                                                        */                    
/**********************************************************/                    
                                                                                
/*                                                                              
  Procedure Generate_Host_Staging_ds: generate SBOM genfiles commands   nt      
  for every host staging data set in the package shipment                       
*/                                                                              
Generate_Host_Staging_ds:                                                       
arg ahjobdsn                                                                    
                                                                                
alloc = "alloc fi('AHJOB') "                                                    
alloc = alloc||"da('"ahjobdsn"') shr msg(2)"                                    
call bpxwdyn alloc                                                              
allocRc = Result                                                                
                                                                                
if allocRc <> 0 then do                                                         
  say 'allocation error ddname AHJOB. rc: 'allocRC                              
  return allocRC                                                                
End                                                                             
                                                                                
"execio * diskr ahjob (stem ahjob. finis"                                       
                                                                                
i = 1                                                                           
Found256 = 0                                                                    
do while i <= ahjob.0                                                           
                                                                                
 if (pos('//HASH256',ahjob.i)<>0 & ,                                            
   pos('DD',ahjob.i)<>0 & ,                                                     
   pos('*',ahjob.i)<>0) then do                                                 
                                                                                
   Found256 = 1                                                                 
   i = i + 1                                                                    
   parse var ahjob.i . 3 ddname 11 . 12 HostStagingDS                           
                                                                                
   ddname = strip(ddname)                                                       
   HostStagingDS = strip(HostStagingDS)                                         
   found = 0                                                                    
   j = 0                                                                        
                                                                                
   do while pos('HASH',ddname) <> 0                                             
                                                                                
     j = j + 1                                                                  
                                                                                
     GenericFile.j = '--generic-file-source "//'||,                             
                     HostStagingDS||'"'                                         
     i = i + 3                                                                  
                                                                                
     parse var ahjob.i . 3 ddname 11 . 12 HostStagingDS                         
     HostStagingDS = strip(HostStagingDS)                                       
     Found = 1                                                                  
                                                                                
   end /* do while */                                                           
                                                                                
   if \found then do                                                            
     say 'GHOSTSTG01E No Host Staging data sets found.'                         
     return 8                                                                   
    end                                                                         
   else do                                                                      
                                                                                
     GenericFile.0 = j                                                          
     leave                                                                      
                                                                                
    end                                                                         
                                                                                
  end /* hash256 */                                                             
                                                                                
 i = i + 1                                                                      
                                                                                
end /* i = 1 to ahjob.0  */                                                     
                                                                                
if Found256 & Found Then do                                                     
                                                                                
  "execio * diskw hoststg (stem GenericFile. finis"                             
                                                                                
end                                                                             
                                                                                
Return 0                                                                        
                                                                                
                                                                                
/*                                                                              
  Procedure parsegetOutputComponents: get output components for an element      
  from a file                                                                   
*/                                                                              
getOutputComponents:                                                            
                                                                                
OutNum = 0                                                                      
                                                                                
Do ik = 1 to comptemp.0                                                         
                                                                                
  If pos('OUTPUT COMPONENTS',comptemp.ik) <> 0 then do                          
                                                                                
    OutIX = ik + 1                                                              
                                                                                
    Do while OutIX <= comptemp.0                                                
                                                                                
      If pos('STEP:',comptemp.OutIX) <> 0 &,                                    
         pos('DD=',comptemp.OutIX)   <> 0 &,                                    
         pos('VOL=',comptemp.OutIX)  <> 0 &,                                    
         pos('DSN=',comptemp.OutIX)  <> 0 then do                               
                                                                                
          OutNum = OutNum + 1                                                   
          parse var comptemp.OutIx . 'DSN=' OutputComponentDSN                  
          OutputComponents.OutNum = strip(OutputComponentDSN)                   
                                                                                
      end                                                                       
      OutIx = OutIx + 1                                                         
                                                                                
    end /* do while*/                                                           
                                                                                
    OutputComponents.0 = OutNum                                                 
    leave                                                                       
                                                                                
  end                                                                           
end /* do ik */                                                                 
                                                                                
return                                                                          
                                                                                
                                                                                
/*                                                                              
  Procedure MatchBackout: match package backouts against element output         
  component                                                                     
*/                                                                              
MatchBackout:                                                                   
arg element                                                                     
                                                                                
Do OutCompIX = 1 to OutputComponents.0                                          
                                                                                
  Do backoutIX = 1 to boutlst.0                                                 
                                                                                
    if OutputComponents.OutCompIX = Bout.DataSetName.backoutIX & ,              
       element = Bout.elemName.backoutIX then do                                
                                                                                
       Bout.Used.backoutIX = 'Y'                                                
       leave                                                                    
                                                                                
    end                                                                         
                                                                                
  end                                                                           
                                                                                
end                                                                             
                                                                                
return                                                                          
                                                                                
/*                                                                              
  Procedure parsecsv file by column name in stem vars                           
*/                                                                              
parsecsv:                                 ,                                     
procedure expose csv. listpkga. delimiter quotation_mark integer_style          
                                                                                
/* trace i */                                                                   
f_name = arg(1)                                                                 
csv.0 = 0                                                                       
i = 0                                                                           
K = 1                                                                           
/*                                                                              
  Translate special character not accepted as part as a compound                
  variable.                                                                     
*/                                                                              
do while k <= listpkga.0                                                        
                                                                                
  if i = arg(2) then return 0                                                   
                                                                                
  /* only parse a few rows specified by arg(2) */                               
  input = Strip(listpkga.k)                                                     
                                                                                
  if k=1 then do                                                                
    input = Translate(input,'_',' ')                                            
    input = Translate(input,'_',')')                                            
    input = Translate(input,'_','(')                                            
    input = Translate(input,'_','/')                                            
  End                                                                           
                                                                                
  j = 0                                                                         
                                                                                
  do while length( input ) > 0                                                  
    parse value input with i_val(delimiter)input                                
    j = j + 1                                                                   
    if csv.0 = 0 then do                                                        
                                                                                
      /* build "header", use the names on the first row                         
         specifying the column names */                                         
      if value( integer_style ) <> 'INTEGER_STYLE' then do                      
         csv.j = j                                                              
         c_val = csv.j                                                          
      end                                                                       
                                                                                
      else do                                                                   
          csv.j = translate(strip(strip(i_val,,quotation_mark)))                
          c_val = csv.j                                                         
      end                                                                       
    end                                                                         
                                                                                
    else do                                                                     
    /* build the rows, use the names found on the first rows */                 
                                                                                
      c_val = translate( csv.j )                                                
      call value 'csv.'c_val'.'i, strip( i_val,, quotation_mark )               
    end                                                                         
                                                                                
    call value 'csv.'c_val'.0', i                                               
                                                                                
  end /* length( input ) */                                                     
                                                                                
  if csv.0 = 0 then                                                             
      csv.0 = j                                                                 
  i = i + 1                                                                     
  k = k + 1                                                                     
                                                                                
end /* while i < csvfile.0 */                                                   
                                                                                
return                                                                          
                                                                                
/*                                                                              
  Procedure ListPackageBackouts                                                 
*/                                                                              
ListPackageBackouts:                                                            
procedure expose boutlst. Bout.                                                 
arg packageID                                                                   
                                                                                
/* List Package Backout */                                                      
                                                                                
address attchmvs "c1lstbko packageID"                                           
API_rc = rc                                                                     
                                                                                
If API_rc <> 0 Then Do                                                          
  say 'No Backout information from Package 'packageID                           
  return API_rc                                                                 
 End                                                                            
                                                                                
Else Do                                                                         
  "execio * diskr boutlst (stem boutlst. finis"                                 
  do i = 1 TO boutlst.0                                                         
    parse var boutlst.i . ,                                                     
              62 Bout.elemName.i ,                                              
              70 . ,                                                            
              86 Bout.DataSetName.i ,                                           
              130 .                                                             
    Bout.Used.i = 'N'                                                           
   /* say strip(boutlst.i,'T') */                                               
  end                                                                           
                                                                                
  return 0                                                                      
                                                                                
 End                                                                            
                                                                                
/*                                                                              
  Procedure ExistDDname allocated                                               
*/                                                                              
ExistDDname: Procedure                                                          
arg search4dd                                                                   
last1 = 0                                                                       
dsnlist = ''                                                                    
Found = 0                                                                       
Do i = 1 by 1 Until (last1 /= 0)                                                
   Call bpxwdyn 'info inrelno('i') inrtddn(found_dd)',                          
                'inrtlst(last1)'                                                
   If found_dd = search4dd Then                                                 
     Do                                                                         
       Found = 1                                                                
       leave                                                                    
     End                                                                        
End                                                                             
Return found                                                                    
          
./  ADD  NAME=MODAHJOB                
/* REXX */                                                                      
trace off                                                                       
                                                                                
parse arg pkgID ,                                                               
          signedSBOMfile                                                        
                                                                                
                                                                                
pkgID          = strip(pkgID)                                                   
signedSBOMfile = strip(signedSBOMfile)                                          
                                                                                
/*                                                                              
  Parm validation                                                               
*/                                                                              
                                                                                
if ExistDDname('AHJOBDSN') Then Do                                              
                                                                                
  "execio * diskr ahjobdsn (stem ahjobdsn. finis"                               
                                                                                
  if ahjobdsn.0 = 0 then do                                                     
    say 'MODAHJOB2E ahjobdsn file is empty'                                     
    return 8                                                                    
   End                                                                          
                                                                                
   dsname = strip(ahjobdsn.1)                                                   
                                                                                
 end                                                                            
                                                                                
else do                                                                         
  Say 'MODAHJOB1E DDname AHJOBDSN is not allocated.'                            
  Return 8                                                                      
 end                                                                            
                                                                                
alloc = "alloc fi('AHJOB') "                                                    
alloc = alloc||"da('"dsname"') shr msg(2)"                                      
call bpxwdyn alloc                                                              
allocRc = Result                                                                
                                                                                
if allocRc <> 0 then do                                                         
  say 'MODAHJOB03E Allocation error ddname AHJOB. rc: 'allocRC                  
  return allocRC                                                                
End                                                                             
                                                                                
"execio * diskr ahjob (stem ahjob. finis"                                       
                                                                                
do i = 1 to ahjob.0                                                             
                                                                                
  select                                                                        
                                                                                
    when pos('@@PKGID@@',ahjob.i) <> 0 then do                                  
                                                                                
       parse var ahjob.i head '@@PKGID@@' Tail                                  
       ahjob.i = Head ||strip(pkgID)||Tail                                      
       queue substr(ahjob.i,1,80)                                               
                                                                                
    end                                                                         
                                                                                
    when pos('@@signedSBOMfile@@',ahjob.i) <> 0 then do                         
                                                                                
       parse var ahjob.i head '@@signedSBOMfile@@' Tail                         
       ahjob.i = Head ||strip(signedSBOMfile)||Tail                             
       queue substr(ahjob.i,1,80)                                               
                                                                                
    end                                                                         
                                                                                
    otherwise                                                                   
      queue substr(ahjob.i,1,80)                                                
                                                                                
  end /* select */                                                              
                                                                                
                                                                                
end /* i = 1 to ahjob.0  */                                                     
                                                                                
"execio" queued() "diskw ahjob (finis"                                          
                                                                                
Return 0                                                                        
                                                                                
/*                                                                              
  Procedure ExistDDname allocated                                               
*/                                                                              
ExistDDname: Procedure                                                          
arg search4dd                                                                   
last1 = 0                                                                       
dsnlist = ''                                                                    
Found = 0                                                                       
Do i = 1 by 1 Until (last1 /= 0)                                                
   Call bpxwdyn 'info inrelno('i') inrtddn(found_dd)',                          
                'inrtlst(last1)'                                                
   If found_dd = search4dd Then                                                 
     Do                                                                         
       Found = 1                                                                
       leave                                                                    
     End                                                                        
End                                                                             
Return found                                                                    
                                                                                
          
./  ADD  NAME=#NFTPRCN                
//* *--------------------------------------------* ISPSLIB(#NFTPRCN) *          
//*                                                                             
//* *================================================================*          
//* *  INSTREAM DATASET CONTAINING REMOTE CONFIRMATION JCL                      
//* *================================================================*          
//*                                                                             
//CONFCOPY EXEC PGM=IEBGENER,COND=(0,NE,CHKHASH)  THE REMOTE SITE               
//SYSUT1   DD DATA,DLM=$$              JOB SHIPPED BACK TO HOST                 
&HJOBCARDS                                                                      
//CONFEXEC EXEC PGM=NDVRC1,                                #NFTPRCN             
//   PARM='&VNBCPARM,CONF,RCPY,EX,****,$DEST_ID'                                
&HLIBS                                                                          
//*********************************************************************         
//*  MOVE PACKAGE' SBOM IN ENDEVOR ADMIN ENVIRONMENT                  *         
//*********************************************************************         
//NDVRBAT  EXEC PGM=NDVRC1,DYNAMNBR=1500,COND=(4,LE),      #NFTPRCN             
//  PARM='C1BM3000'                                                             
&HLIBS                                                                          
//*********************************************************************         
//*             SORT WORK FILES                                       *         
//*********************************************************************         
//SORTWK01 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//SORTWK02 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//SORTWK03 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//C1TPDD01 DD UNIT=3390,SPACE=(CYL,5),                                          
//            DCB=(RECFM=VB,LRECL=260)                                          
//C1TPDD02 DD UNIT=3390,SPACE=(CYL,5),                                          
//            DCB=(RECFM=VB,LRECL=260)                                          
//*********************************************************************         
//*  OUTPUT DATA SETS                                                 *         
//*********************************************************************         
//C1MSGS1  DD SYSOUT=*                                                          
//C1MSGS2  DD SYSOUT=*                                                          
//C1PRINT  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133)                                
//SYSUDUMP DD SYSOUT=*                                                          
//SYMDUMP  DD DUMMY                                                             
//SYSOUT   DD SYSOUT=*                                                          
//*********************************************************************         
//*  REQUEST DATA SET                                                 *         
//*********************************************************************         
//BSTIPT01 DD *                                                                 
SET STOPRC 16 .                                                                 
MOVE ELEMENT '&VPHPKGID'                                                        
  FROM                                                                          
    ENVIRONMENT 'ADM' SYSTEM 'ADMMY' SUBSYSTEM 'PACKAGES'                       
    TYPE 'SBOM' STAGE NUMBER 1                                                  
  OPTIONS CCID 'PKGSBOM' COMMENTS "ADD NEW PACKAGE SBOM"                        
    WITH HISTORY                                                                
 .                                                                              
//* *--------------------------------------------* C1BMXRCN (CONT.)  *          
$$                                                                              
//SYSUT2   DD DISP=(,PASS),DSN=&&CONFJCL,                                       
//         UNIT=SYSDA,SPACE=(TRK,(2,1)),                                        
//         DCB=(LRECL=80,DSORG=PS)                                              
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD DUMMY                                                             
//*                                                                             
//CONFABND EXEC PGM=IEBGENER,COND=((0,EQ,CHKHASH),EVEN)    #NFTPRCN             
//SYSUT1   DD DATA,DLM=$$              JOB SHIPPED BACK TO HOST                 
&HJOBCARDS                                                                      
//ABNDEXEC EXEC PGM=NDVRC1,                                #NFTPRCN             
//  PARM='&VNBCPARM,CONF,RCPY,AB,****,$DEST_ID'                                 
//*                                                                             
&HLIBS                                                                          
//* *--------------------------------------------* C1BMXRCN (CONT.)  *          
$$                                                                              
//SYSUT2   DD DISP=(,PASS),DSN=&&CONFJCL,                                       
//         UNIT=SYSDA,SPACE=(TRK,(2,1)),                                        
//         DCB=(LRECL=80,DSORG=PS)                                              
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD DUMMY                                                             
//* *--------------------------------------------* ISPSLIB(#NFTPRCN) *          
//*                                                                             
//* *================================================================*          
//* *  FTP CONFIRMATION JCL TO HOST LPAR                                        
//* *================================================================*          
//*                                                                             
//SUBFTP01 EXEC PGM=FTP,COND=(4,LT)                        #NFTPRCN             
//ABNLIGNR DD DUMMY                                                             
//SYSPRINT DD SYSOUT=*                                                          
//SYSABEND DD SYSOUT=*                                                          
//NETRC    DD DISP=SHR,DSN=GONJO08.ENDEVOR.NETRC(SHIPPING)                      
//*NETRC    DD DISP=SHR,DSN=&SYSUID..ENDEVOR.NETRC(SHIPPING)                    
//SYSOUT   DD SYSOUT=*                                                          
//OUTPUT   DD SYSOUT=*                                                          
//CONFJCL  DD DISP=(OLD,DELETE),DSN=&&CONFJCL                                   
//INPUT    DD *                                                                 
10.175.81.102                                                                   
SITE FILETYPE=JES                                                               
PUT //DD:CONFJCL                                                                
STOP                                                                            
QUIT                                                                            
          
./  ADD  NAME=#PSNFTP1                
@REM ****************************************************** #PSNFTP1 ***        
@REM *    CONTENTS: ENDEVOR/MVS - START PROCESSING A NEW DESTINATION            
@REM * TRANSMITTER: NETVIEW FILE TRANSFER PROGRAM (FTP)                         
@REM *     PURPOSE: CREATE ORDERED JCL WHICH IS RELATED TO A NEW                
@REM *              DESTINATION BEING PROCESSED BY NETVIEW FTP.                 
@REM *******************************************************************        
@REM                                                                            
@PASS=10                                                                        
&HJOBCARDS                       NEW JOB FOR EACH DESTINATION                   
@REM                    #PSNFTP2 (PASS=10) FOR EACH PARTITIONED DATASET         
@REM                             SUPPLY TRANSMISSION JCL AND CONTROL            
@REM                             CARDS                                          
@REM                    #PSNFTP6 (PASS=10) FOR EACH SEQUENTIAL DATASET          
@REM                             SUPPLY TRANSMISSION JCL AND CONTROL            
@REM                             CARDS                                          
@REM                    #PSNFTP8 (PASS=10) EXECUTE THE COPY/DELETE JOB          
@REM                             AND THE HOST CONFIRMATION JOBSTEP              
@PASS=20                                                                        
@IF HDISP=DELETE                                                                
@INCLUDE=D                                                                      
@ENDIF                                                                          
          
./  ADD  NAME=#PSNFTP6                
@REM ****************************************************** #PSNFTP6 ***        
@REM *    CONTENTS: ENDEVOR/MVS - START PROCESSING THE SEQ DATASETS             
@REM * TRANSMITTER: NETVIEW FILE TRANSFER PROGRAM (FTP)                         
@REM *     PURPOSE: CREATE THE JOBSTEPS AND CONTROL CARDS NEEDED TO             
@REM *              TRANSMIST THE THREE SEQUENTIAL FILES.  FOR A MORE           
@REM *              DETAILED DESCRIPTION, REFER TO #PSNFTP1.                    
@REM *******************************************************************        
@REM                                                                            
@PASS=10                                                                        
@INCLUDE=J                       COPY JOBSTEP TO TRANSMIT AHJOB                 
@INCLUDE=S                                                                      
 PUT '&AHJOBDSN' +                                                              
     '&ARJOBDSN'                                                                
@REM          SFILEID='&AHJOBDSN' -                                             
@REM          RFILEID='&ARJOBDSN'                                               
@REM                                                                            
@IF &CHJOBDSN                                                                   
@INCLUDE=J                       COPY JOBSTEP TO TRANSMIT CHJOB                 
@INCLUDE=S                                                                      
 PUT '&CHJOBDSN' +                                                              
     '&CRJOBDSN'                                                                
@REM          SFILEID='&CHJOBDSN' -                                             
@REM          RFILEID='&CRJOBDSN'                                               
@ENDIF                                                                          
@REM                                                                            
@INCLUDE=J                       COPY JOBSTEP TO TRANSMIT AHREF                 
@INCLUDE=S                                                                      
 PUT '&AHREFDSN' +                                                              
     '&ARREFDSN'                                                                
@REM          SFILEID='&AHREFDSN' -                                             
@REM          RFILEID='&ARREFDSN'                                               
@PASS=20                                                                        
@IF HDISP=DELETE                                                                
@INCLUDE=X                       DELETE THE SEQUENTIALS                         
@ENDIF                                                                          
          
./  ADD  NAME=#PSNFTPE                
@REM **********************************************************                 
@REM ************************************************* #PSNFTPE                 
@REM *    CONTENTS: ENDEVOR/MVS - REMOTE EXECUTION OF THE AHJOB                 
@REM * TRANSMITTER: NETVIEW FILE TRANSFER PROGRAM                               
@REM *     PURPOSE: SUBMIT ARJOB DATASET FOR EXECUTION VIA TSO                  
@REM *              AT THE REMOTE SITE.                                         
@REM **********************************************************                 
//*  *******************************************************************        
//*  FRD JOBSTEP JCL TO SUBMIT JCL REMOTELY USING FTP                           
//*  ENDEVOR DESTINATION &VNBLSDST                                              
//*  NODE NAME           &NODENAME                                              
//*  *******************************************************************        
//*---------------------------------------------------------- #PSNFTPE          
//SUBFTP01 EXEC PGM=FTP,COND=(4,LT)                        #PSNFTPE             
//ABNLIGNR DD DUMMY                                                             
//SYSPRINT DD SYSOUT=*                                                          
//SYSABEND DD SYSOUT=*                                                          
//NETRC    DD DISP=SHR,DSN=GONJO08.ENDEVOR.NETRC(SHIPPING)                      
//*NETRC    DD DISP=SHR,DSN=&SYSUID..ENDEVOR.NETRC(SHIPPING)                    
//SYSOUT   DD SYSOUT=*                                                          
//*UTPUT    DD SYSOUT=*                                                         
//OUTPUT   DD DSN=&&FTPOUT,                                                     
//            DISP=(,PASS),SPACE=(TRK,(1,0)),                                   
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PS),                    
//            UNIT=SYSALLDA                                                     
//INPUT     DD *                                                                
&NODENAME                                                                       
BIN                                                                             
SITE FILETYPE=JES                                                               
 PUT '&AHJOBDSN'                                                                
STOP                                                                            
QUIT                                                                            
/*                                                                              
//*---------------------------------------------------------- #PSNFTPE          
//**********************************************************************        
          
./  ADD  NAME=#PSNFTPJ                
//*----PACKAGE SHIPMENT JOB #2 --    ------------------------ #PSNFTPJ          
@REM ****************************************************** #PSNFTPJ ***        
@REM *    CONTENTS: ENDEVOR/MVS - JCL TO TRANSMIT DATASET                       
@REM * TRANSMITTER: NETVIEW FILE TRANSFER PROGRAM (FTP)                         
@REM *     PURPOSE: TRANSMIT A PARTITIONED OR SEQUENTIAL DATASET                
@REM *              NOTE THAT ONLY ONE "FUNCTION=ADD" (TRANSMISSION)            
@REM *              CAN BE PERFORMED PER EXECUTION OF THIS JOBSTEP              
@REM *******************************************************************        
//*---------------------------------------------------------- #PSNFTPJ          
//* EXECUTE FTP COMMANDS ------------------------------------ #PSNFTPJ          
//*---------------------------------------------------------- #PSNFTPJ          
//FTP      EXEC PGM=FTP,PARM='(EXIT',COND=(4,LT),          #PSNFTPJ             
//         REGION=2048K,TIME=800                              #PSNFTPJ          
//*NETRC    DD DISP=SHR,DSN=&SYSUID..ENDEVOR.NETRC(SHIPPING)                    
//NETRC    DD DISP=SHR,DSN=GONJO08.ENDEVOR.NETRC(SHIPPING)                      
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSUDUMP  DD SYSOUT=Q                                                         
//OUTPUT   DD SYSOUT=*                                        #PSNFTPJ          
//SYSIN    DD *                                               #PSNFTPJ          
          
./  ADD  NAME=#PSNFTPP                
@REM *******************************************************************        
@REM *                                                                          
@REM * (C) 1987,2005 COMPUTER ASSOCIATES INTERNATIONAL, INC.                    
@REM *                                                                          
@REM * NAME: #PSNFTPP                                                           
@REM *                                                                          
@REM *    CONTENTS: ENDEVOR/MVS - TRANSMIT PARTITIONED DATASET                  
@REM * TRANSMITTER: NETVIEW FILE TRANSFER PROGRAM (FTP)                         
@REM *     PURPOSE: TRANSMIT A PARTITIONED DATASET TO THE REMOTE SITE.          
@REM *                                                                          
@REM * NOTE: IF NOT SPECIFIED, THE SPACE PARAMETERS DEFAULT TO THE              
@REM *       CHARACTERISTICS OF THE SENDING DATA SET, OR IF NOT                 
@REM *       AVAILABLE, TO THE FTP DEFAULTS FOR THE SENDING/RECEIVING           
@REM *       DATA SET TYPE (PO==>PO, PO==>PS).                                  
@REM *******************************************************************        
@REM * PARAMETERS PROVIDED ARE FOR NETVIEW FILE TRANSFER PROGRAM V2             
@REM *******************************************************************        
@REM                                                                            
@IF &FDSN                                                                       
@REM FUNCTION=ADD XMODE=TO,RMTLU=&NODENAME -                                    
@REM              SFILEORG=PO,RFILEORG=PO -                                     
@REM              SFILEID='&FDSN' -                                             
@REM              RFILEID='&TDSN' -                                             
@REM              RSTATOPT=MUSTNOTEXIST -                                       
@REM              RSPCUNIT=CYL -                                                
@REM              RSPCPRIM=&PRISPACE,RSPCSEC=&SECSPACE,RDIRBLK=&DIRBLKS         
@REM              WAIT=YES,WAITTIME=10 -                                        
@ENDIF                                                                          
@IF &RVOLSER                                                                    
@REM              RVOLSER=&RVOLSER -                                            
@ENDIF                                                                          
@IF &FDSN                                                                       
@REM          RUNIT=&UNIT                                                       
@ENDIF                                                                          
@REM *******************************************************************        
@REM * COMMENTED OUT PARAMETERS BELOW ARE PROVIDED FOR:                         
@REM *    NETVIEW FILE TRANSFER PROGRAM V1                                      
@REM *******************************************************************        
@REM FUNCTION=ADD XMODE=TO,SFTYPE=PO,RFTYPE=PO,WAIT=YES -                       
@REM          REMNODE=&NODENAME -                                               
@REM          SFILEID='&FDSN' -                                                 
@REM          RFILEID='&TDSN' -                                                 
@REM          RTDISP=CAT,RSPCUNIT=CYL -                                         
@REM          RDIRBLK=&DIRBLKS -                                                
@REM          RSPCPRIM=&PRISPACE -                                              
@REM          RSPCSEC=&SECSPACE -                                               
@REM *******************************************************************        
@IF &FDSN                                                                       
&NODENAME                                                                       
BINARY                                                                          
LCD '&FDSN'                                                                     
MKDIR '&TDSN' +                                                                 
(LIKE '&FDSN'                                                                   
CD '&TDSN'                                                                      
MPUT *                                                                          
QUIT                                                                            
;#PSNFTPP                                                                       
@ENDIF                                                                          
          
./  ADD  NAME=#PSNFTPS                
@REM *******************************************************************        
@REM *                                                                          
@REM * (C) 1987,2005 COMPUTER ASSOCIATES INTERNATIONAL, INC.                    
@REM *                                                                          
@REM * NAME: #PSNFTPS                                                           
@REM *                                                                          
@REM *    CONTENTS: ENDEVOR/MVS - TRANSMIT SEQUENTIAL DATASET                   
@REM * TRANSMITTER: NETVIEW FILE TRANSFER PROGRAM (FTP)                         
@REM *     PURPOSE: CONTAINS ALL EXCEPT THE SFILEID AND RFILEID.                
@REM *              NOTE THAT LAST STATEMENT HAS A CONTINUATION MARK.           
@REM *              IT IS EXPECTED THAT MEMBERS THAT @INCLUDE=S WILL            
@REM *              PROVIDE THE FILEID'S AFTER THE INCLUSION.                   
@REM *                                                                          
@REM * NOTE: IF YOU DO NOT SPECIFY VALUES FOR THE DCB AND/OR SPACE              
@REM *       PARAMETERS, FTP USES DEFAULT VALUES THAT CORRESPOND TO             
@REM *       THE CHARACTERISTS OF THE SENDING DATA SET.                         
@REM *                                                                          
@REM *******************************************************************        
@REM * PARAMETERS PROVIDED ARE FOR NETVIEW FILE TRANSFER PROGRAM V2             
@REM *******************************************************************        
@REM                                                                            
@REM FUNCTION=ADD XMODE=TO,RMTLU=&NODENAME -                                    
@REM              SFILEORG=PS,RFILEORG=PS -                                     
@REM              RSTATOPT=MUSTNOTEXIST -                                       
@REM              RRECFM=FB,RLRECL=80,RBLKSIZE=0 -                              
@REM              RSPCUNIT=TRK,RSPCPRIM=10,RSPCSEC=10 -                         
@REM              RUNIT=&UNIT -                                                 
@REM              WAIT=YES,WAITTIME=10 -                                        
@IF &RVOLSER                                                                    
@REM              RVOLSER=&RVOLSER -                                            
@ENDIF                                                                          
@REM          SFILEID='&HOST_DSN' -     <== OCCURS IN #PSNFTP6                  
@REM          RFILEID='&REMOTE_DSN'     <== OCCURS IN #PSNFTP6                  
@REM                                                                            
@REM *******************************************************************        
@REM * COMMENTED OUT PARAMETERS BELOW ARE PROVIDED FOR:                         
@REM *    NETVIEW FILE TRANSFER PROGRAM V1                                      
@REM *******************************************************************        
@REM FUNCTION=ADD XMODE=TO,SFTYPE=PS,RFTYPE=PS,WAIT=YES -                       
@REM          REMNODE=&NODENAME -                                               
@REM          RTDISP=CAT,RSPCUNIT=TRK -                                         
@REM          RRECFM=FB -                                                       
@REM          RLRECL=80 -                                                       
@REM          RBLKSIZE=3120 -                                                   
@REM          RSPCPRIM=10 -                                                     
@REM          RSPCSEC=10 -                                                      
@REM          RUNIT=&UNIT -                                                     
&NODENAME                                                                       
MODE B                                                                          
EBCDIC                                                                          
          
./  ADD  NAME=#PSXCOME                
@REM ****************************************************** #PSXCOME ***        
@REM *    CONTENTS: ENDEVOR/MVS - TRANSMIT AND EXECUTE THE REMOTE JOB           
@REM * TRANSMITTER: CA-XCOM                                                     
@REM *     PURPOSE: SUBMIT THE REMOTE COPY/DELETE JOB.  THE HOLDCOUNT           
@REM *              WILL DELAY ITS EXECUTION UNTIL ALL FILES HAVE BEEN          
@REM *              TRANSMITTED TO THE REMOTE NODE.  SUBMIT THE HOST            
@REM *              STAGING DATASET DELETION JOB.  THE HOLDCOUNT WILL           
@REM *              DELAY ITS EXECUTION UNTIL THE REMOTE COPY/DELETE            
@REM *              JOB HAS BEEN EXECUTED.                                      
@REM *******************************************************************        
@REM                                                                            
TYPE=SEND                                                                       
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
XTCJOB=J&D4.AR                                                                  
XTCGOODREL=J&D4.DEL                                                             
HOLDCOUNT=&FILECOUNT                                                            
FILETYPE=JOB                                                                    
FILEOPT=CREATE                                                                  
@IF &NODENAME                                                                   
LU=&NODENAME                                                                    
@ENDIF                                                                          
@IF &IPNAME                                                                     
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
@ENDIF                                                                          
UNIT=&RUNIT                                                                     
LFILE=&AHJOBDSN                                                                 
HOLD=NO                                                                         
@REM                                                                            
@IF HDISP=DELETE                                                                
@IFAND &NODENAME                                                                
*                                                                               
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
XTCJOB=J&D4.DEL                                                                 
HOLDCOUNT=0                                                                     
FILETYPE=JOB                                                                    
FILEOPT=CREATE                                                                  
LU=&NODENAME                                                                    
UNIT=&RUNIT                                                                     
LFILE=&SHIPHLI..D&SHIPDATE..T&SHIPTIME..XCOMCMD.FILE(&DESTID.D)                 
HOLD=YES                                                                        
@ENDIF                                                                          
@IF HDISP=DELETE                                                                
@IFAND &IPNAME                                                                  
*                                                                               
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
XTCJOB=J&D4.DEL                                                                 
HOLDCOUNT=0                                                                     
FILETYPE=JOB                                                                    
FILEOPT=CREATE                                                                  
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
UNIT=&RUNIT                                                                     
LFILE=&SHIPHLI..D&SHIPDATE..T&SHIPTIME..XCOMCMD.FILE(&DESTID.D)                 
HOLD=YES                                                                        
@ENDIF                                                                          
          
./  ADD  NAME=#PSXCOMP                
@REM ****************************************************** #PSXCOMP ***        
@REM *    CONTENTS: ENDEVOR/MVS - TRANSMIT A PARTITIONED DATASET                
@REM * TRANSMITTER: CA-XCOM                                                     
@REM *     PURPOSE: CREATE CONTROL CARDS TO TRANSMIT A PDS                      
@REM *******************************************************************        
@REM *  PTF C9224550 - CHANGE FILE=&TDSN TO FILE=&TDSN(*)                       
@REM *******************************************************************        
*                                                                               
@IF &FDSN                                                                       
@IFAND &NODENAME                                                                
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
XTCJOB=J&D4.DSN                                                                 
HOLDCOUNT=0                                                                     
XTCGOODDECR=J&D4.AR                                                             
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
LU=&NODENAME                                                                    
UNIT=&RUNIT                                                                     
@INCLUDE=Q                                                                      
HOLD=NO                                                                         
@ENDIF                                                                          
@IF &FDSN                                                                       
@IFAND &IPNAME                                                                  
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
XTCJOB=J&D4.DSN                                                                 
HOLDCOUNT=0                                                                     
XTCGOODDECR=J&D4.AR                                                             
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
UNIT=&RUNIT                                                                     
@INCLUDE=Q                                                                      
HOLD=NO                                                                         
@ENDIF                                                                          
@IF &FDSN                                                                       
LFILE=&FDSN(*)                                                                  
FILE=&TDSN(*)                                                                   
@ENDIF                                                                          
          
./  ADD  NAME=#PSXCOMS                
@REM ****************************************************** #PSXCOMS ***        
@REM *    CONTENTS: ENDEVOR/MVS - TRANSMIT SEQUENTIAL DATASETS                  
@REM * TRANSMITTER: CA-XCOM                                                     
@REM *     PURPOSE: CREATE CONTROL CARDS TO TRANSMIT THE SEQUENTIALS            
@REM *******************************************************************        
@REM                                                                            
*                                                                               
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
@IF &NODENAME                                                                   
LU=&NODENAME                                                                    
@ENDIF                                                                          
@IF &IPNAME                                                                     
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
@ENDIF                                                                          
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
@IF &RVOLSER                                                                    
VOL=&RVOLSER                                                                    
@ENDIF                                                                          
LFILE=&AHREFDSN                                                                 
FILE=&ARREFDSN                                                                  
*                                                                               
@IF &CHJOBDSN                                                                   
@IFAND &NODENAME                                                                
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
LU=&NODENAME                                                                    
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&CHJOBDSN                                                                 
FILE=&CRJOBDSN                                                                  
@ENDIF                                                                          
@IF &CHJOBDSN                                                                   
@IFAND &IPNAME                                                                  
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&CHJOBDSN                                                                 
FILE=&CRJOBDSN                                                                  
@ENDIF                                                                          
*                                                                               
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
@IF &NODENAME                                                                   
LU=&NODENAME                                                                    
@ENDIF                                                                          
@IF &IPNAME                                                                     
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
@ENDIF                                                                          
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
@IF &RVOLSER                                                                    
VOL=&RVOLSER                                                                    
@ENDIF                                                                          
LFILE=&AHJOBDSN                                                                 
FILE=&ARJOBDSN                                                                  
*                                                                               
@IF &AHUCDDSN                                                                   
@IFAND &NODENAME                                                                
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
LU=&NODENAME                                                                    
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&AHUCDDSN                                                                 
FILE=&ARUCDDSN                                                                  
@ENDIF                                                                          
*                                                                               
@IF &AHUCDDSN                                                                   
@IFAND &IPNAME                                                                  
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&AHUCDDSN                                                                 
FILE=&ARUCDDSN                                                                  
@ENDIF                                                                          
*                                                                               
@IF &CHUCDDSN                                                                   
@IFAND &NODENAME                                                                
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
LU=&NODENAME                                                                    
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&CHUCDDSN                                                                 
FILE=&CRUCDDSN                                                                  
@ENDIF                                                                          
*                                                                               
@IF &CHUCDDSN                                                                   
@IFAND &IPNAME                                                                  
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&CHUCDDSN                                                                 
FILE=&CRUCDDSN                                                                  
@ENDIF                                                                          
*                                                                               
@IF &AHPAXDSN                                                                   
@IFAND &NODENAME                                                                
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
LU=&NODENAME                                                                    
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&AHPAXDSN                                                                 
FILE=&ARPAXDSN                                                                  
@ENDIF                                                                          
*                                                                               
@IF &AHPAXDSN                                                                   
@IFAND &IPNAME                                                                  
NEWXFER                                                                         
TYPE=SEND                                                                       
XTCGOODDECR=J&D4.AR                                                             
XTCNET=T&SHIPTIME                                                               
ID=T&SHIPTIME                                                                   
FILETYPE=FILE                                                                   
FILEOPT=CREATE                                                                  
IPNAME=&IPNAME                                                                  
IPPORT=&IPPORT                                                                  
UNIT=&RUNIT                                                                     
HOLD=NO                                                                         
LFILE=&AHPAXDSN                                                                 
FILE=&ARPAXDSN                                                                  
@ENDIF                                                                          
          
./  ADD  NAME=#RJ0                
@TRACEON                                                                        
@EOF                                                                            
          
./  ADD  NAME=#RJFCPY1                
@REM ****************************************************** #RJFCPY1 ***        
@REM *    CONTENTS: ENDEVOR/MVS - START PROCESSING A NEW DESTINATION            
@REM *              REMOTE JOBSTREAM TO COPY/DELETE SHIPMENT MEMBERS            
@REM *     PURPOSE: GENERATE A REMOTE JOBSTREAM TO CREATE/DELETE                
@REM *              SHIPMENT MEMBERS USING PDSMAN AND IDCAMS. CONFIRM           
@REM *              THE EXECUTION OF THIS JOBSTREAM AT THE HOST                 
@REM *******************************************************************        
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=01   <=======================================================          
&RJOBCARDS                                                                      
@INCLUDE=(B)                                                                    
@IF &ANY2PROCESS                                                                
//JS01     EXEC PGM=IEBCOPY                                #RJFCPY1             
//SYSPRINT DD   SYSOUT=*                                                        
//SYSUT3   DD   UNIT=&RUNIT,SPACE=(TRK,(5,5))                                   
//SYSUT4   DD   UNIT=&RUNIT,SPACE=(TRK,(5,5))                                   
@ENDIF                                                                          
@REM *                                                                          
@REM *----------------------------------------------------------------          
@REM #RJFCPY2 @SECTION=01 GENS AN INDD CARD AND AN OUTDD CARD PER PDS           
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=02   <=======================================================          
@IF &ANY2PROCESS                                                                
//SYSIN    DD   *                                                               
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJFCPY2 @SECTION=02 GENS A FASTCOPY "COPY" STATEMENT FOR EACH             
@REM                      PDS CONTAINING MEMBERS TO BE COPIED                   
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=03   <=======================================================          
@REM *----------------------------------------------------------------          
@REM #RJFCPY2 @SECTION=03 GENS A FASTCOPY "EDITDIR" STATEMENT FOR               
@REM                      EACH PDS CONTAINING MEMBERS TO BE DELETED             
@REM #RJFCPY4 @SECTION=03 GENS A FASTCOPY DELETE FOR EACH MEMBER                
@REM                      TO BE DELETED                                         
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=04   <=======================================================          
@IF &RUCD                                                                       
//*                                                                             
//***********************************************************                   
//* (OPTIONAL) MODIFY ARUCD COMMAND FILE          #RJFCPY1                      
//*                                                                             
//* IF REQUIRED, YOU CAN EDIT THIS MODEL JCL HERE TO INSERT                     
//* A STEP TO MODIFY THE ARUCD BPXBATCH COMMAND FILE BEFORE                     
//* IT IS PROCESSED BY BPXBATCH.                                                
//* THE SYMBOL RUCD CAN BE USED FOR THE INPUT TO THE                            
//* TAILORING STEP.                                                             
//* THE STDPARM DD STATEMENT IN THE BPXBATCH STEP THAT                          
//* FOLLOWS CAN BE USED AS A MODEL FOR INPUT TO THE                             
//* INSERTED STEP.                                                              
//*                                                                             
//***********************************************************                   
//*                                                                             
//BPXBAT   EXEC PGM=BPXBATCH           FCPY                #RJFCPY1             
//STDOUT   DD   SYSOUT=*                                                        
//STDERR   DD   SYSOUT=*                                                        
//STDPARM  DD   DISP=SHR,                                                       
//         DSN=&RUCD                                                            
@ENDIF                                                                          
@SECTION=05   <=======================================================          
@INCLUDE=(A)                                                                    
@IF RDISP=DELETE                                                                
//JS02     EXEC PGM=IDCAMS                                 #RJFCPY1             
//SYSPRINT DD   SYSOUT=*                                                        
//SYSIN    DD   *                                                               
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJFCPY2 @SECTION=05 GENS AN IDCAMS "DELETE" STATEMENT FOR REMOTE          
@REM                      STAGING DATA SETS IF REMOTE DISP=DELETE               
@REM #RJFCPY6 @SECTION=05 GENS AN IDCAMS "DELETE" STATEMENT FOR REMOTE          
@REM                      JOB DATA SET AND DSN CROSS REFERENCE DATASET          
@REM                      IF REMOTE DISP=DELETE                                 
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=06   <=======================================================          
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM * NETVIEW FTP                                                              
@REM *                                                                          
@REM *----------------------------------------------------------------          
@IF XMIT4=NFTP                                                                  
@INCLUDE=#NFTPRCN                                                               
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM * LOCAL                                                                    
@REM *                                                                          
@REM *----------------------------------------------------------------          
@IF XMIT4=LOCL                                                                  
&RCONFJCL                                                                       
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM * XCOM                                                                     
@REM *                                                                          
@REM *----------------------------------------------------------------          
@IF XMIT4=XCOM                                                                  
&RCONFJCL                                                                       
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM *                                                                          
@REM * BDT                                                                      
@REM *                                                                          
@REM *----------------------------------------------------------------          
@IF XMIT4=BDT1                                                                  
&RCONFJCL                                                                       
@ENDIF                                                                          
//* **** END OF JOBSTREAM **** *                                                
          
./  ADD  NAME=#RJFCPY2                
@REM ****************************************************** #RJFCPY2 ***        
@REM *    CONTENTS: ENDEVOR/MVS - START PROCESSING A PDS TO BE SHIPPED          
@REM *     PURPOSE: (SEE #RJFCPY1 FOR DETAILS)                                  
@REM *******************************************************************        
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=01   <=======================================================          
@IF &FSTGDSN                                                                    
//&FSTGDDN DD DISP=SHR,  STAGING DATA SET                                       
//         DSN=&FSTGDSN                                                         
@ENDIF                                                                          
@IF &RDDN                                                                       
//&RDDN    DD DISP=OLD,  REMOTE PRODUCTION DATA SET                             
//         DSN=&RDSN                                                            
@ENDIF                                                                          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=02   <=======================================================          
@IF &FSTGDSN                                                                    
@IFAND &RDDN                                                                    
 COPY      INDD=((&FSTGDDN,R)),OUTDD=&RDDN                                      
@ENDIF                                                                          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=03   <=======================================================          
@IF &MBRS2DELETE                                                                
@IFAND &RDDN                                                                    
 EDITDIR   OUTDD=&RDDN                                                          
@ENDIF                                                                          
@REM *                                                                          
@REM *                                                                          
@REM *                                                                          
@SECTION=05   <=======================================================          
@IF RDISP=DELETE                                                                
@INCLUDE=#RJNDVRD                                                               
@ENDIF                                                                          
          
./  ADD  NAME=#RJICPY1                
@TRACEON                                                                        
@REM ****************************************************** #RJICPY1 ***        
@REM *    CONTENTS: ENDEVOR/MVS - START PROCESSING A NEW DESTINATION            
@REM *              REMOTE JOBSTREAM TO COPY/DELETE SHIPMENT MEMBERS            
@REM *     PURPOSE: GENERATE A REMOTE JOBSTREAM TO CREATE/DELETE                
@REM *              SHIPMENT MEMBERS USING IBM UTILITIES AND CONFIRM            
@REM *              THE EXECUTION OF THIS JOBSTREAM AT THE HOST                 
@REM *******************************************************************        
@REM *                                                                          
@REM *     P003154 APPLIED     REMOVE //* IN SECTION05                          
@REM *     P005812 ADDED INCLUDE OF #RJICPYU TO CONTAIN SYSUT3, SYSUT4          
@REM *                                                                          
@SECTION=00   <=======================================================          
&RJOBCARDS                                                                      
@IF &ANY2COPY                                                                   
//*#####################################################################        
//*                                                                             
//* SYMBOLS DEFINITION                                                          
//*                                                                             
//*#####################################################################        
//E1       EXPORT SYMLIST=(*)                                                   
//S1       SET DATE=&LYYMMDD                                                    
//S2       SET TIME=&LHHMMSS                                                    
//S3       SET USER=&SYSUID                                                     
//S4       SET PKGID='@@PKGID@@'                                                
//*#####################################################################        
//*                                                                             
//* SBOM Signature validation                                                   
//*                                                                             
//*#####################################################################        
//SBOMVRFY EXEC PGM=BPXBATCH,REGION=0M                     #RJICPY1             
//STDIN    DD DUMMY                                                             
//STDOUT   DD PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                 
// PATH='/tmp/&USER_D&DATE_T&TIME..&PKGID._sbom.out',                           
// PATHMODE=SIRWXU                                                              
//STDERR   DD PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                 
// PATH='/tmp/&USER_D&DATE_T&TIME..&PKGID._sbom.err',                           
// PATHMODE=SIRWXU                                                              
//STDENV   DD DUMMY                                                             
//STDPARM  DD *,SYMBOLS=JCLONLY                                                 
sh                                                                              
echo $SBOMZ_HOME ;                                                              
sbomz sign verify-json-file                                                     
@@signedSBOMfile@@                                                              
$SBOMZ_HOME/ship_sbom_pub.key                                                   
--config-work-directory $SBOMZ_HOME ;                                           
x=$? ;                                                                          
if [ $x -eq 0 ];                                                                
then cp  "@@signedSBOMfile@@"                                                   
         "$SBOMZ_HOME/pkgs/&PKGID._sbom.json";                                  
     exit 0;                                                                    
else                                                                            
  echo "SBOM signature validation failed" ;                                     
  exit 256;                                                                     
fi                                                                              
//*#####################################################################        
//*                                                                             
//* Convert SBOM ASCII to SBOM EBCDIC                                           
//*                                                                             
//*#####################################################################        
//SBMEBCDI EXEC PGM=IKJEFT01,DYNAMNBR=400,COND=(0,LT),REGION=0M                 
//SYSTSPRT DD SYSOUT=*                                                          
//SBOMASC  DD PATHMODE=SIRWXU,                                                  
// PATH='@@signedSBOMfile@@'                                                    
//SBOMEBC  DD DISP=(,PASS),DSN=&&SBOMEBC,                                       
//            DCB=(LRECL=32756,RECFM=VB),                                       
//            SPACE=(CYL,(5,1)),UNIT=3390                                       
//SYSTSIN  DD *                                                                 
OCOPY INDD(SBOMASC)  OUTDD(SBOMEBC) TEXT CONVERT((BPXFX311)) TO1047             
/*                                                                              
//*#####################################################################        
//*                                                                             
//* TEMP STEP to VALIDATE COPY and TRANSLATION                                  
//*                                                                             
//*#####################################################################        
//PROCESSP EXEC PGM=IEBGENER,COND=(0,LT)                   #RJICPY1             
//SYSPRINT DD  DUMMY                                                            
//SYSIN    DD  DUMMY                                                            
//SYSUT2   DD  SYSOUT=*                                                         
//SYSUT1   DD  DISP=(OLD,PASS),DSN=&&SBOMEBC                                    
//*#####################################################################        
//*                                                                             
//* GET STAGING DATA SETS HASHES FROM SBOM                                      
//*                                                                             
//*#####################################################################        
//GETHASH  EXEC PGM=IKJEFT01,COND=(0,NE),REGION=0M         #RJICPY1             
//*STEPLIB  DD DISP=SHR,DSN=REXX.SEAGLPA                                        
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//JSONIN   DD DISP=(OLD,PASS),DSN=&&SBOMEBC                                     
//HASHOUT  DD PATH='/tmp/&USER_D&DATE_T&TIME..hash.out',                        
//         PATHOPTS=(OWRONLY,OCREAT),FILEDATA=TEXT,                             
//         PATHMODE=SIRWXU,RECFM=VB,LRECL=255,BLKSIZE=32760                     
//CEEOPTS  DD DUMMY                                                             
//*SYSEXEC  DD DISP=SHR,DSN=GONJO08.CNTL.LRECL72.SYSCEXEC                       
//SYSEXEC  DD UNIT=SYSDA,SPACE=(CYL,(5,1,5)),                                   
// DSN=&SYSEXEC,                                                                
// RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PO                                         
//SYSUT2   DD DISP=(OLD,PASS),VOL=REF=*.SYSEXEC,                                
// DSN=&SYSEXEC(HASHSBOM)                                                       
//SYSTSIN  DD *                                                                 
REPRO IFILE(REXXMOD) OFILE(SYSUT2)                                              
HASHSBOM                                                                        
/*                                                                              
//REXXMOD  DD *,DLM='@@'                                                        
@INCLUDE=(HASHSBOM)                                                             
@@                                                                              
//HASH256  DD   *                                                               
@ENDIF                                                                          
@SECTION=01   <=======================================================          
@IF &ANY2COPY                                                                   
//*#####################################################################        
//*                                                                             
//* VALIDATE SBOM HASHES AGAINST REMOTE STAGING DATA SETS HASHES                
//*                                                                             
//*#####################################################################        
//CHKHASH  EXEC PGM=BPXBATCH,COND=(0,NE)                   #RJICPY1             
//STDOUT   DD SYSOUT=*                                                          
//STDERR   DD SYSOUT=*                                                          
//STDPARM  DD *,SYMBOLS=JCLONLY                                                 
SH sha256 -c /tmp/&USER._D&DATE._T&TIME..hash.out                               
@ENDIF                                                                          
@SECTION=02   <=======================================================          
@INCLUDE=(B)                                                                    
@IF &ANY2COPY                                                                   
//*#####################################################################        
//*                                                                             
//* COPY OF STAGING DATA SETS TO PRODUCTION DATA SETS                           
//*                                                                             
//*#####################################################################        
//JS01     EXEC PGM=IEBCOPY,COND=(0,NE)                    #RJICPY1             
//SYSPRINT DD   SYSOUT=*                                                        
@INCLUDE=U                                                                      
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJICPY2 @SECTION=01 GENS AN INDD CARD AND AN OUTDD CARD PER PDS           
@REM *----------------------------------------------------------------          
@SECTION=03   <=======================================================          
@IF &ANY2COPY                                                                   
//SYSIN    DD   *                                                               
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJICPY2 @SECTION=02 GENS AN IEBCOPY "COPY" STATEMENT PER PDS              
@REM *----------------------------------------------------------------          
@SECTION=04   <=======================================================          
//*                                                                             
@IF &ANY2DELETE                                                                 
//*#####################################################################        
//*                                                                             
//* DELETE STAGING DATS SETS                                                    
//*                                                                             
//*#####################################################################        
//JS02     EXEC PGM=IDCAMS,COND=(0,NE)                     #RJICPY1             
//SYSPRINT DD   SYSOUT=*                                                        
@ENDIF                                                                          
@SECTION=05   <=======================================================          
@IF &ANY2DELETE                                                                 
//SYSIN    DD   *                                                               
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJICPY4 @SECTION=04 GENS A DD CARD PER PDS                                
@REM *----------------------------------------------------------------          
@SECTION=06   <=======================================================          
@IF &RUCD                                                                       
//*                                                                             
//*#####################################################################        
//*                                                                             
//* (OPTIONAL) MODIFY ARUCD COMMAND FILE                       #RJICPY1         
//*                                                                             
//* IF REQUIRED, YOU CAN EDIT THIS MODEL JCL HERE TO INSERT                     
//* A STEP TO MODIFY THE ARUCD BPXBATCH COMMAND FILE BEFORE                     
//* IT IS PROCESSED BY BPXBATCH.                                                
//* THE SYMBOL RUCD CAN BE USED FOR THE INPUT TO THE                            
//* TAILORING STEP.                                                             
//* THE STDPARM DD STATEMENT IN THE BPXBATCH STEP THAT                          
//* FOLLOWS CAN BE USED AS A MODEL FOR INPUT TO THE                             
//* INSERTED STEP.                                                              
//*                                                                             
//*#####################################################################        
//*                                                                             
//BPXBAT   EXEC PGM=BPXBATCH,COND=(0,NE)                   #RJICPY1             
//STDOUT   DD   SYSOUT=*                                                        
//STDERR   DD   SYSOUT=*                                                        
//STDPARM  DD   DISP=SHR,                                                       
//         DSN=&RUCD                                                            
@ENDIF                                                                          
@SECTION=07   <=======================================================          
@INCLUDE=(A)                                                                    
@IF RDISP=DELETE                                                                
//*#####################################################################        
//*                                                                             
//* DELETE USS FILES                                                            
//*                                                                             
//*#####################################################################        
//JS03     EXEC PGM=IDCAMS,COND=(0,NE)                     #RJICPY1             
//SYSPRINT DD   SYSOUT=*                                                        
//SYSIN    DD   *                                                               
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJICPY2 @SECTION=06 GENS AN IDCAMS "DELETE" STATEMENT FOR REMOTE          
@REM                      STAGING DATA SETS IF REMOTE DISP=DELETE               
@REM #RJICPY6 @SECTION=06 GENS AN IDCAMS "DELETE" STATEMENT FOR REMOTE          
@REM                      JOB DATA SET AND DSN CROSS REFERENCE DATASET          
@REM                      IF REMOTE DISP=DELETE                                 
@REM *----------------------------------------------------------------          
@SECTION=08   <=======================================================          
//*                                                                             
&RCONFJCL                                                                       
//* **** END OF JOBSTREAM **** *                                                
          
./  ADD  NAME=#RJICPY2                
@REM ****************************************************** #RJICPY2 ***        
@REM *    CONTENTS: ENDEVOR/MVS - START PROCESSING A PDS TO BE SHIPPED          
@REM *     PURPOSE: (SEE #RJICPY1 FOR DETAILS)                                  
@REM *******************************************************************        
@REM *                                                                          
@REM *  P002868 CORRECT DUPLICATE DD NAMES.                                     
@REM *  P003154 INCLUDE COPYMOD                                                 
@REM *                                                                          
@SECTION=00   <=======================================================          
@IF &RDDN                                                                       
@IFAND &TDSN                                                                    
  HASH&F4 &FDSN                                                                 
           &TDSN                                                                
           &RDSN                                                                
@ENDIF                                                                          
@SECTION=02   <=======================================================          
@IF &RDDN                                                                       
@IFAND &TDSN                                                                    
//&TDDN  DD  DISP=SHR,  REMOTE STAGING DATA SET                                 
//         DSN=&TDSN                                                            
//&RDDN  DD  DISP=SHR,  REMOTE TARGET DATA SET                                  
//         DSN=&RDSN                                                            
@ENDIF                                                                          
@SECTION=03   <=======================================================          
@IF &RDDN                                                                       
@IFAND &TDSN                                                                    
@REM COPY      INDD=((&TDDN,R)),OUTDD=&RDDN                                     
@INCLUDE=#RJICPYL                              P003154                          
@ENDIF                                                                          
@SECTION=04   <=======================================================          
@IF &ANY2DELETE                                                                 
@IFAND &RDDN                                                                    
//&RDDN  DD  DISP=SHR,  REMOTE PRODUCTION DATA SET                              
//         DSN=&RDSN                                                            
@ENDIF                                                                          
@SECTION=07   <=======================================================          
@IF RDISP=DELETE                                                                
@INCLUDE=#RJIDVRD                                                               
@ENDIF                                                                          
          
./  ADD  NAME=#RJICPYL                
@REM ****************************************************** #RJICPYL ***        
@REM *    CONTENTS: ENDEVOR/MVS - COPY MODEL FOR ICPY                           
@REM *     PURPOSE: (SEE #RJICPY1 FOR DETAILS)                                  
@REM *                                                                          
@REM *    ADDED BY VIRTUE OF P003154                                            
@REM *******************************************************************        
@REM *                                                                          
@SECTION=03   <===================================================              
@IFNOT RECFM=U                                                                  
 COPY      INDD=((&TDDN,R)),OUTDD=&RDDN        FROM TEST                        
@ENDIF                                                                          
@IF RECFM=U                                                                     
 COPYMOD   INDD=((&TDDN,R)),OUTDD=&RDDN        FROM TEST                        
@ENDIF                                                                          
          
./  ADD  NAME=#RJICPYU                
@REM ****************************************************** #RJICPYU ***        
@REM *    CONTENTS: Provides IF statemnts and SYSUT3, SYSUT4 for                
@REM *              #RJICPY1.                                                   
@REM *     PURPOSE: This prevents a JCL error, of extra SYSUT3 and              
@REM *              SYSUT4, if there is nothing to be copied.                   
@REM *                                                                          
@REM *******************************************************************        
@REM *                                                                          
@REM *     P005812 Created this macro                                           
@REM *                                                                          
@SECTION=02   <=======================================================          
@IF &RUNIT                                                                      
//SYSUT3   DD   UNIT=&RUNIT,SPACE=(TRK,(5,5))                                   
//SYSUT4   DD   UNIT=&RUNIT,SPACE=(TRK,(5,5))                                   
@ENDIF                                                                          
@REM If no remote unit, use host unit, which always has a value.                
@REM It's set to 'SYSDA' by default.                                            
@IFNOT &RUNIT                                                                   
//SYSUT3   DD   UNIT=&HUNIT,SPACE=(TRK,(5,5))                                   
//SYSUT4   DD   UNIT=&HUNIT,SPACE=(TRK,(5,5))                                   
@ENDIF                                                                          
          
./  ADD  NAME=#RJNDVRA                
@REM ****************************************************** #RJNDVRA ***        
@REM *    CONTENTS: ENDEVOR/MVS - POST-SHIP SCRIPT EXECUTION (AFTER)            
@REM *     PURPOSE: THIS MEMBER CONTAINS THE SCRIPT FOR EXECUTION               
@REM *              AFTER THE REMOTE COPY TO THE TARGET LIBRARIES               
@REM *              HAS TAKEN PLACE.                                            
@REM *                                                                          
@REM * THIS MEMBER IS INCLUDED '@INCLUDE=(A)' IN #RJICPY1 AND #RJFCPY1.         
@REM *                                                                          
@REM * THE SYMBOLS &ZZSCRIPT1 AND &ZZSCRIPT2, IN USE IN THIS SAMPLE,            
@REM * ARE NAMED BASED UPON THE LAST QUALIFIER OF THE HOST SCRIPT DATA          
@REM * SET NAME (SCRIPT1 AND SCRIPT2).                                          
@REM * THE LAST QUALIFIER OF THE DSN IS PREFIXED BY &ZZ TO CREATE THE           
@REM * SYMBOL NAME. THESE SYMBOLS SHOULD BE CHANGED TO MATCH THE LAST           
@REM * QUALIFIER OF THE SCRIPT DATA SETS IN USE AT YOUR SITE...AND              
@REM * DON'T FORGET THE &ZZ PREFIX.                                             
@REM *                                                                          
@REM * THE VALUE OF THE &ZZ SYMBOLS, WHEN SUBSTITUTED, IS THE NAME OF           
@REM * THE SCRIPT REMOTE STAGING DATA SET. ALL MEMBERS CONTAINED IN THE         
@REM * SCRIPT REMOTE STAGING DATA SET ARE OUTPUT COMPONENTS OF THE              
@REM * PACKAGE OR PACKAGES BEING SHIPPED.                                       
@REM *                                                                          
@REM *******************************************************************        
@REM * THESE STEPS WILL EXECUTE AFTER THE COPY TO THE REMOTE TARGET             
@REM *******************************************************************        
//* START #RJNDVRA                                                              
@IF &ZZSCRIPT1                                                                  
//* START SCRIPT 1                                                              
//ASCRIPT1 EXEC PGM=IEFBR14            DATA SET SCRIPT1    #RJNDVRA             
//DD1      DD   DISP=SHR,                                                       
//         DSN=&ZZSCRIPT1                                                       
//* END SCRIPT 1                                                                
@ENDIF                                                                          
@IF &ZZSCRIPT2                                                                  
//* START SCRIPT 2                                                              
//ASCRIPT2 EXEC PGM=IEFBR14            DATA SET SCRIPT2    #RJNDVRA             
//DD1      DD   DISP=SHR,                                                       
//         DSN=&ZZSCRIPT2                                                       
//* END SCRIPT 2                                                                
@ENDIF                                                                          
//* END #RJNDVRA                                                                
          
./  ADD  NAME=#RJNDVRA                
@REM ****************************************************** #RJNDVRA ***        
@REM *    CONTENTS: ENDEVOR/MVS - POST-SHIP SCRIPT EXECUTION (AFTER)            
@REM *     PURPOSE: THIS MEMBER CONTAINS THE SCRIPT FOR EXECUTION               
@REM *              AFTER THE REMOTE COPY TO THE TARGET LIBRARIES               
@REM *              HAS TAKEN PLACE.                                            
@REM *                                                                          
@REM * THIS MEMBER IS INCLUDED '@INCLUDE=(A)' IN #RJICPY1 AND #RJFCPY1.         
@REM *                                                                          
@REM * THE SYMBOLS &ZZSCRIPT1 AND &ZZSCRIPT2, IN USE IN THIS SAMPLE,            
@REM * ARE NAMED BASED UPON THE LAST QUALIFIER OF THE HOST SCRIPT DATA          
@REM * SET NAME (SCRIPT1 AND SCRIPT2).                                          
@REM * THE LAST QUALIFIER OF THE DSN IS PREFIXED BY &ZZ TO CREATE THE           
@REM * SYMBOL NAME. THESE SYMBOLS SHOULD BE CHANGED TO MATCH THE LAST           
@REM * QUALIFIER OF THE SCRIPT DATA SETS IN USE AT YOUR SITE...AND              
@REM * DON'T FORGET THE &ZZ PREFIX.                                             
@REM *                                                                          
@REM * THE VALUE OF THE &ZZ SYMBOLS, WHEN SUBSTITUTED, IS THE NAME OF           
@REM * THE SCRIPT REMOTE STAGING DATA SET. ALL MEMBERS CONTAINED IN THE         
@REM * SCRIPT REMOTE STAGING DATA SET ARE OUTPUT COMPONENTS OF THE              
@REM * PACKAGE OR PACKAGES BEING SHIPPED.                                       
@REM *                                                                          
@REM *******************************************************************        
@REM * THESE STEPS WILL EXECUTE AFTER THE COPY TO THE REMOTE TARGET             
@REM *******************************************************************        
//* START #RJNDVRA                                                              
@IF &ZZSCRIPT1                                                                  
//* START SCRIPT 1                                                              
//ASCRIPT1 EXEC PGM=IEFBR14            DATA SET SCRIPT1    #RJNDVRA             
//DD1      DD   DISP=SHR,                                                       
//         DSN=&ZZSCRIPT1                                                       
//* END SCRIPT 1                                                                
@ENDIF                                                                          
@IF &ZZSCRIPT2                                                                  
//* START SCRIPT 2                                                              
//ASCRIPT2 EXEC PGM=IEFBR14            DATA SET SCRIPT2    #RJNDVRA             
//DD1      DD   DISP=SHR,                                                       
//         DSN=&ZZSCRIPT2                                                       
//* END SCRIPT 2                                                                
@ENDIF                                                                          
//* END #RJNDVRA                                                                
          
./  ADD  NAME=#RJNDVRB                
@REM ****************************************************** #RJNDVRB ***        
@REM *    CONTENTS: ENDEVOR/MVS - POST-SHIP SCRIPT EXECUTION (BEFORE)           
@REM *     PURPOSE: THIS MEMBER CONTAINS THE SCRIPT FOR EXECUTION               
@REM *              BEFORE THE REMOTE COPY TO THE TARGET LIBRARIES              
@REM *              HAS TAKEN PLACE.                                            
@REM *                                                                          
@REM * THIS MEMBER IS INCLUDED '@INCLUDE=(B)' IN #RJICPY1 AND #RJFCPY1.         
@REM *                                                                          
@REM * THE SYMBOLS &ZZSCRIPT1 AND &ZZSCRIPT2, IN USE IN THIS SAMPLE,            
@REM * ARE NAMED BASED UPON THE LAST QUALIFIER OF THE HOST SCRIPT DATA          
@REM * SET NAME (SCRIPT1 AND SCRIPT2).                                          
@REM * THE LAST QUALIFIER OF THE DSN IS PREFIXED BY &ZZ TO CREATE THE           
@REM * SYMBOL NAME. THESE SYMBOLS SHOULD BE CHANGED TO MATCH THE LAST           
@REM * QUALIFIER OF THE SCRIPT DATA SETS IN USE AT YOUR SITE...AND              
@REM * DON'T FORGET THE &ZZ PREFIX.                                             
@REM *                                                                          
@REM * THE VALUE OF THE &ZZ SYMBOLS, WHEN SUBSTITUTED, IS THE NAME OF           
@REM * THE SCRIPT REMOTE STAGING DATA SET. ALL MEMBERS CONTAINED IN THE         
@REM * SCRIPT REMOTE STAGING DATA SET ARE OUTPUT COMPONENTS OF THE              
@REM * PACKAGE OR PACKAGES BEING SHIPPED.                                       
@REM *                                                                          
@REM *******************************************************************        
@REM * THESE STEPS WILL EXECUTE BEFORE THE COPY TO THE REMOTE TARGET            
@REM *******************************************************************        
//* START #RJNDVRB                                                              
@IF &ZZSCRIPT1                                                                  
//* START SCRIPT 1                                                              
//BSCRIPT1 EXEC PGM=IEFBR14            DATA SET SCRIPT1    #RJNDVRB             
//DD1      DD   DISP=SHR,                                                       
//         DSN=&ZZSCRIPT1                                                       
//* END SCRIPT 1                                                                
@ENDIF                                                                          
@IF &ZZSCRIPT2                                                                  
//* START SCRIPT 2                                                              
//BSCRIPT2 EXEC PGM=IEFBR14            DATA SET SCRIPT2    #RJNDVRB             
//DD1      DD   DISP=SHR,                                                       
//         DSN=&ZZSCRIPT2                                                       
//* END SCRIPT 2                                                                
@ENDIF                                                                          
//* END #RJNDVRB                                                                
          
./  ADD  NAME=#RJNDVRS                
@REM ****************************************************** #RJNDVRS ***        
@REM *    CONTENTS: ENDEVOR/MVS - POST-SHIP SCRIPT EXECUTION (AFTER)            
@REM *     PURPOSE: THIS MEMBER CONTAINS THE SCRIPT HASH VALIDATION             
@REM *              BEFORE THE REMOTE COPY TO THE TARGET LIBRARIES              
@REM *              HAS TAKEN PLACE.                                            
@REM *                                                                          
@REM * THIS MEMBER IS INCLUDED '@INCLUDE=(S)' IN #RJICPY1 AND #RJFCPY1.         
@REM *                                                                          
@REM *******************************************************************        
@REM * THESE STEPS WILL EXECUTE BEFORE THE COPY TO THE REMOTE TARGET            
@REM *******************************************************************        
//* START #RJNDVRS                                                              
@SECTION=01   <=======================================================          
@IF &ANY2COPY                                                                   
//CHKHASH  EXEC PGM=IEFBR14                                #RJNDVRS             
//SYSPRINT DD   SYSOUT=*                                                        
@ENDIF                                                                          
@REM *----------------------------------------------------------------          
@REM #RJICPY2 @SECTION=01 GENS AN INDD CARD AND AN OUTDD CARD PER PDS           
@REM *----------------------------------------------------------------          
@SECTION=02   <=======================================================          
@IF &RDDN                                                                       
@IFAND &TDSN                                                                    
//&TDDN  DD  DISP=SHR,  REMOTE STAGING DATA SET                                 
//         DSN=&TDSN                                                            
@ENDIF                                                                          
@SECTION=03   <=======================================================          
@IF &ANY2COPY                                                                   
//SYSIN    DD   *                                                               
@ENDIF                                                                          
@SECTION=04   <=======================================================          
@IF &RDDN                                                                       
@IFAND &TDSN                                                                    
@REM COPY      INDD=((&TDDN,R)),OUTDD=&RDDN                                     
 INCLUDE=#RJICPYL                              P003154                          
@ENDIF                                                                          
//* END #RJNDVRS                                                                
          
./  ADD  NAME=C1BMXCOM                
)CM  PACKAGE SHIPMENT BATCH JCL -  XCOM FOR MVS - ISPSLIB(C1BMXCOM)             
)CM                                                                             
)CM  THIS SKELETON CONTAINS XCOM JCL.  THE &&XXCC DATASET WAS BUILT             
)CM  BY THE PACKAGE SHIPMENT UTILITY AND CONTAINS COMMANDS TO TRANSFER          
)CM  THE STAGING DATASETS TO THE REMOTE SITE(S).                                
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)CM  TAILORING INSTRUCTIONS:                                                    
)CM                                                                             
)CM  1.  MODIFY THE "STEPLIB" AND "XCOMCNTL"                                    
)CM      DSNAMES USING SITE SPECIFIC PREFIX, QUALIFIER, AND NAME.               
)CM                                                                             
)CM      "&I@PRFX..XCOM" IS THE PREFIX/QUALIFIER OF THE XCOM LIBRARIES.         
)CM                                                                             
)CM  2.  MODIFY THE DFLTAB=XCOMDFLT PARAMETER, IF NECESSARY.                    
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)REXX VNBSQDSP XNODE                                                            
   TRACE Off                                                                    
   SA= '&VNBSQDSP> 'VNBSQDSP                                                    
   SA= 'XNODE  ==> 'XNODE                                                       
)ENDREXX                                                                        
)IM C1BMXSBD                                                                    
//* *==============================================* ISPSLIB(C1BMXCOM) *        
//*#####################################################################        
//*                                                                             
//* Tailor AHJOB                                                                
//*                                                                             
//*#####################################################################        
//CHGAHJOB EXEC PGM=IKJEFT01,COND=(4,LT)                   C1BMXCOM             
//SYSEXEC  DD DISP=SHR,DSN=GONJO08.CNTL.SOURCE                                  
//XXCC     DD DSN=&&&&XXCC,DISP=(OLD,PASS)                                      
//AHJOBDSN DD DSN=&&&&AHJOBDSN,DISP=(OLD,DELETE)                                
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSTSIN  DD *,SYMBOLS=JCLONLY                                                 
    MODAHJOB     +                                                              
      &VPHPKGID  +                                                              
      /tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json                        
//*#####################################################################        
//*                                                                             
//* Transmit SBOM to REMOTE SYSTEM                                              
//*                                                                             
//*#####################################################################        
//C1BMXCOM EXEC PGM=XCOMJOB,                               C1BMXCOM             
//         PARM=('TYPE=SCHEDULE,DFLTAB=XCOMDFLT')                               
//STEPLIB  DD DISP=SHR,DSN=SHARE.XCOM.CBXGLOAD                                  
//         DD DISP=SHR,                                                         
//            DSN=CEE.SCEERUN                                                   
//XCOMCNTL DD DISP=SHR,                                                         
//            DSN=SHARE.XCOM.R120.CBXGPARM                                      
//**********************************************************************        
//SYSTCPD  DD  DISP=SHR,                                                        
//             DSN=SHARE.TCPIP.TCPPARMS(TCPDATA)                                
//XCOMGLOB DD  DISP=SHR,                                                        
//             DSN=SHARE.XCOM.XCOMGLOB                                          
//XCOMREST DD  DISP=SHR,                                                        
//             DSN=SHARE.XCOM.XCOMREST                                          
//XCOMPRNT DD  SYSOUT=*                            * IEBCOPY MSGS               
//SYSPRINT DD  SYSOUT=*                            * TCP/IP MSGS                
//SYSTERM  DD  SYSOUT=*                            * TCP/IP MSGS                
//**********************************************************************        
//SYSIN01  DD *,SYMBOLS=JCLONLY                                                 
IPNAME=&VDDXIPNM                                                                
IPPORT=&VDDXIPPT                                                                
TYPE=SEND                                                                       
USERID=GONJO08                                                                  
DROPSESS=YES                                                                    
FILEOPT=CREATE                                                                  
CKPT=0                                                                          
CODE=BINARY                                                                     
FILETYPE=FILE                                                                   
LFILE=/tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID._sbom.json                       
FILE=/tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID._sbom.json                        
/*                                                                              
//*#####################################################################        
//*                                                                             
//* XCOM COMANND EXECUTION                                                      
//*                                                                             
//*#####################################################################        
//COMMANDI EXEC PGM=IEBUPDTE,PARM=NEW,COND=(12,LE,NDVRSHIP)                     
//SYSPRINT DD  SYSOUT=*                                                         
//SYSUT2   DD  DISP=(NEW,CATLG),UNIT=SYSDA,                                     
//             DSN=&VNBSHHLI..D&VNB6DATE..T&VNB6TIME..XCOMCMD.FILE,             
//             SPACE=(TRK,(5,1,45)),                                            
//             DCB=(RECFM=FB,LRECL=80)                                          
//SYSUT1   DD  DUMMY                                                            
//SYSIN    DD  DISP=SHR,                                                        
//             DSN=&I@PRFX..&I@QUAL..CSIQOPTN(#PS#XCOM)                         
//* *================================================================* *        
//COMMANDP EXEC PGM=IEBUPDTE,PARM=MOD,COND=(12,LE,NDVRSHIP)                     
//SYSPRINT DD  SYSOUT=*                                                         
//SYSUT1   DD  DISP=SHR,                                                        
//             DSN=&VNBSHHLI..D&VNB6DATE..T&VNB6TIME..XCOMCMD.FILE              
//SYSUT2   DD  DISP=SHR,                                                        
//             DSN=&VNBSHHLI..D&VNB6DATE..T&VNB6TIME..XCOMCMD.FILE              
//SYSIN    DD  DSN=&&&&XXCC,DISP=(OLD,PASS)                                     
//* *================================================================* *        
//PRTXXCC  EXEC PGM=IEBGENER,COND=(12,LE,NDVRSHIP)         C1BMXCOM             
//SYSUT1   DD DSN=&&&&XXCC,DISP=(OLD,PASS)                                      
//SYSUT2   DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD DUMMY                                                             
//*                                                                             
//PRTCNTL  EXEC PGM=IEBGENER,COND=(12,LE,NDVRSHIP)         C1BMXCOM             
//SYSUT1   DD DISP=SHR,                                                         
//         DSN=&VNBSHHLI..D&VNB6DATE..T&VNB6TIME..XCOMCMD.FILE(CONTROL)         
//SYSUT2   DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD DUMMY                                                             
//*                                                                             
//* *================================================================* *        
//&VNBXSTP EXEC PGM=XCOMJOB,COND=(12,LE,NDVRSHIP),         C1BMXCOM             
//         PARM=('TYPE=SCHEDULE,DFLTAB=XCOMDFLT')                               
//STEPLIB  DD DISP=SHR,DSN=&I@PRFX..XCOM.CBXGLOAD                               
//         DD DISP=SHR,                                                         
//            DSN=CEE.SCEERUN                                                   
//XCOMCNTL DD DISP=SHR,                                                         
//            DSN=&I@PRFX..XCOM.R120.CBXGPARM                                   
//**********************************************************************        
//SYSTCPD  DD  DISP=SHR,                                                        
//             DSN=SHARE.TCPIP.TCPPARMS(TCPDATA)                                
//XCOMGLOB DD  DISP=SHR,                                                        
//             DSN=&I@PRFX..XCOM.XCOMGLOB                                       
//XCOMREST DD  DISP=SHR,                                                        
//             DSN=&I@PRFX..XCOM.XCOMREST                                       
//XCOMPRNT DD  SYSOUT=*                            * IEBCOPY MSGS               
//SYSPRINT DD  SYSOUT=*                             * TCP/IP MSGS               
//SYSTERM  DD  SYSOUT=*                            * TCP/IP MSGS                
//************************************************************                  
//SYSIN01  DD DISP=SHR,                                                         
//         DSN=&VNBSHHLI..D&VNB6DATE..T&VNB6TIME..XCOMCMD.FILE(CONTROL)         
//* *================================================================* *        
//CONTROLD EXEC PGM=IDCAMS                                 C1BMXCOM             
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD *                                                                 
 DELETE &VNBSHHLI..D&VNB6DATE..T&VNB6TIME..XCOMCMD.FILE(CONTROL)                
          
./  ADD  NAME=C1BMXEOJ                
)CM  PACKAGE SHIPMENT BATCH JCL -  END OF JOB JOBSTEP - ISPSLIB(C1BMXEOJ)       
)CM                                                                             
)CM  THIS SKELETON CAN BE CUSTOMIZED TO EXECUTE JOBSTEP(S) AFTER THE STAGING    
)CM  AND TRANSMISSION METHOD DEPENDENT JOBSTEPS.  THE ACTUAL TRANSMISSION OF    
)CM  OF THE STAGING DATASETS HAS PROBABLY NOT COMPLETED WHEN THIS JOBSTEP       
)CM  EXECUTES.  THE DISTRIBUTED VERSION OF THIS SKELETON CONTAINS ONLY A        
)CM  COMMENT CARD.                                                              
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
//* ISPSLIB(C1BMXEOJ) - END OF JOB                                              
          
./  ADD  NAME=C1BMXFTP                
)CM  PACKAGE SHIPMENT BATCH JCL -  NETVIEW FTP TRANSFERS - ISPSLIB(C1BMXFTP)    
)CM                                                                             
)CM  THIS IS THE SECOND STEP IN THE FTP TRANSMISSION PROCESS.  JCL              
)CM  GENERATED BY THE SHIPMENT STAGING UTILITY WILL CAUSE THE TRANSFER          
)CM  OF THE STAGING DATASETS AND THE ARJOB TO EXECUTE.                          
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)CM  TAILORING INSTRUCTIONS:                                                    
)CM                                                                             
)CM  ADJUST THE SYSUT2 INTERNAL READER PARAMETERS, IF NECESSARY.                
)CM                                                                             
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)REXX VNBSQDSP XNODE                                                            
   TRACE off                                                                    
   SA= '&VNBSQDSP> 'VNBSQDSP                                                    
   SA= 'XNODE  ==> 'XNODE                                                       
)ENDREXX                                                                        
)IM C1BMXSBD                                                                    
//* *==============================================* ISPSLIB(C1BMXFTP) *        
//*#####################################################################        
//*                                                                             
//* Tailor AHJOB                                                                
//*                                                                             
//*#####################################################################        
//CHGAHJOB EXEC PGM=IKJEFT01,COND=(4,LT)                   C1BMXFTP             
//SYSEXEC  DD DISP=SHR,DSN=GONJO08.CNTL.SOURCE                                  
//XFTC     DD DSN=&&&&XFTC,DISP=(OLD,PASS)                                      
//AHJOBDSN DD DSN=&&&&AHJOBDSN,DISP=(OLD,DELETE)                                
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSTSIN  DD *,SYMBOLS=JCLONLY                                                 
    MODAHJOB     +                                                              
      &VPHPKGID  +                                                              
      /tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json                        
/*                                                                              
//*#####################################################################        
//*                                                                             
//*  FTP SBOM file to Remote LPAR                                               
//*                                                                             
//*#####################################################################        
//FTPSBOM  EXEC PGM=FTP,PARM='(EXIT',COND=(4,LT),          C1BMXFTP             
//         REGION=2048K,TIME=800                                                
//NETRC    DD DISP=SHR,DSN=GONJO08.ENDEVOR.NETRC(SHIPPING)                      
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSUDUMP DD SYSOUT=Q                                                          
//OUTPUT   DD SYSOUT=*                                                          
//SYSIN    DD *,SYMBOLS=JCLONLY                                                 
&XNODE                                                                          
BINARY                                                                          
cd /tmp                                                                         
PUT /tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID._sbom.json                         
/*                                                                              
//*#####################################################################        
//*                                                                             
//*  FTP validation script to remote                                            
//*                                                                             
//*#####################################################################        
//FTPSBOM  EXEC PGM=IEFBR14                                C1BMXFTP             
//*FTPSBOM  EXEC PGM=FTP,PARM='(EXIT',COND=(4,LT),         C1BMXFTP             
//*         REGION=2048K,TIME=800                                               
//NETRC    DD DISP=SHR,DSN=GONJO08.ENDEVOR.NETRC(SHIPPING)                      
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSUDUMP DD SYSOUT=Q                                                          
//OUTPUT   DD SYSOUT=*                                                          
//SYSIN    DD *,SYMBOLS=JCLONLY                                                 
&XNODE                                                                          
BINARY                                                                          
cd /tmp                                                                         
mk &VPHPKGID                                                                    
cd &VPHPKGID                                                                    
PUT /u/users/gonjo08/rexxobj/HASHSBOM                                           
/*                                                                              
//*#####################################################################        
//*                                                                             
//*  SUBMIT FTP JOB                                                             
//*                                                                             
//*#####################################################################        
//*                                                                             
//&VNBXSTP EXEC PGM=IEBGENER,COND=(12,LE,NDVRSHIP)         C1BMXFTP             
//SYSUT1   DD DSN=&&&&XFTC,DISP=(OLD,PASS)                                      
//SYSUT2   DD SYSOUT=(A,INTRDR)                                                 
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD DUMMY                                                             
          
./  ADD  NAME=C1BMXHCN                
)CM  PACKAGE SHIPMENT BATCH JCL - STAGING STEP - ISPSLIB(C1BMXHCN)              
)CM                                                                             
)CM  THIS SKELETON CONFIRMS THE EXECUTION OF A FILE TRANSMISSION                
)CM  STEP AT THE HOST END.                                                      
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)CM  TAILORING INSTRUCTIONS:                                                    
)CM                                                                             
)CM  INSURE THAT THE CONDITION CODE ON THE "CONFEXEC" STEP MATCHES THE          
)CM  CONDITION CODE IN THE PRECEEDING FILE TRANSMISSION STEP.  THIS             
)CM  SKELETON CAN BE MODIFIED TO GIVE MORE SPECIFIC INFORMATION ABOUT           
)CM  THE RESULTS OF THE FILE TRANSMISSION STEP (CF. ADMINISTRATORS              
)CM  GUIDE - SHIPMENT TRACKING AND CONFIRMATION).                               
)CM                                                                             
//* *----------------------------------------------* ISPSLIB(C1BMXHCN) *        
//*                                                                             
//CONFEXEC EXEC PGM=NDVRC1,REGION=4096K,                   C1BMXHCN             
//    PARM='&VNBCPARM,CONF,HXMT,EX,****,&VNBCDEST'                              
//*                                                                             
//C1BMXDTM DD DSN=&&&&XDTM,DISP=(MOD,PASS),SPACE=(TRK,(1,0)),                   
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//*                                                                             
)IM C1BMXLIB OPT                                                                
//* *----------------------------------------------* C1BMXHCN (CONT.)  *        
//* *----------------------------------------------------------------* *        
//* *----------------------------------------------------------------* *        
//* *----------------------------------------------------------------* *        
//* *----------------------------------------------------------------* *        
//*                                                                             
//CONFABND EXEC PGM=NDVRC1,REGION=4096K,COND=ONLY,         C1BMXHCN             
//   PARM='&VNBCPARM,CONF,HXMT,AB,****,********'                                
//*                                                                             
//C1BMXDTM DD DSN=&&&&XDTM,DISP=(MOD,PASS),SPACE=(TRK,(1,0)),                   
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//*                                                                             
)IM C1BMXLIB OPT                                                                
          
./  ADD  NAME=C1BMXIN                
)CM  PACKAGE SHIPMENT BATCH JCL - SYSIN CARD IMAGES - ISPSLIB(C1BMXIN)          
)CM                                                                             
)CM  THIS SKELETON IS USED TO GENERATE "SHIP" COMMANDS USED AS INPUT            
)CM  TO C1BMX000.                                                               
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)CM  NO TAILORING IS NECESSARY FOR THIS SKELETON.                               
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
&VNBSQDSP                                                                       
)REXX VNBSQDSP PKGLIST                                                          
   SA= 'VALOR PKGLIST: 'PKGLIST                                                 
   IF PKGLIST = 'PKGLIST' THEN DO                                               
     PKGLIST = VNBSQDSP                                                         
    END                                                                         
   ELSE DO                                                                      
     PKGLIST  = PKGLIST  || '@' || VNBSQDSP                                     
    END                                                                         
   SA= 'PKGLIST:  ==> 'PKGLIST                                                  
)ENDREXX                                                                        
          
./  ADD  NAME=C1BMXJOB                
)CM  PACKAGE SHIPMENT BATCH JCL - STAGING STEP - ISPSLIB(C1BMXJOB)              
)CM                                                                             
)CM  THIS SKELETON IS USED TO GENERATE "PACKAGE SHIPMENT" JCL.  IT IS THE       
)CM  FIRST STEP OF A JOBSTREAM WHICH POPULATES STAGING DATASETS IN PREPARATION  
)CM  FOR TRANSMISSION VIA FILE TRANSMISSION SOFTWARE.                           
)CM                                                                             
)CM  ISPSLIB(C1BMXHJC) - JOBCARD FOR THE HOST SITE.  THIS SKELETON IS IMBEDDED  
)CM                      IN C1BMXJOB AND XRCN.                                  
)CM  ISPSLIB(SCMM@SYM) - SETS STANDARD VARIABLES,                               
)CM                      TAILORED BY THE HOST SITE.                             
)CM  ISPSLIB(C1BMXJOB) - ** YOU ARE HERE **                                     
)CM  ISPSLIB(C1BMXLIB) - STEPLIB : CONLIB : SYSUDUMP : MESSAGE LOG              
)CM                      THIS SKELETON IS IMBEDDED IN XJOB, XHCN, AND XRCN      
)CM  ISPSLIB(C1BMXRCN) - REMOTE CONFIRMATION EXECUTION JCL                      
)CM  ISPSLIB(C1BMXIN)  - SYSIN ( SHIP PKG <PKG-ID> TO DEST <DEST-ID> ETC. )     
)CM                                                                             
)CM  ISPSLIB(C1BMXCOM) - STEP TO TRANSFER VIA  XCOM FOR MVS                     
)CM  ISPSLIB(C1BMXLOC) - STEP TO TRANSFER LOCALLY USING IEBCOPY                 
)CM  ISPSLIB(C1BMXBD1) - STEP TO TRANSMIT VIA BULK DATA TRANSFER (JES)          
)CM  ISPSLIB(C1BMXBDT) - STEP TO TRANSMIT VIA BULK DATA TRANSFER (VER 2)        
)CM  ISPSLIB(C1BMXFTP) - STEP TO TRANSMIT VIA NETVIEW FTP                       
)CM  ISPSLIB(C1BMXNDM) - STEP TO TRANSMIT VIA NETWORK DATA MOVER                
)CM                                                                             
)CM  ISPSLIB(C1BMXHCN) - JCL TO CONFIRM TRANSMISSION VIA ABOVE 4 METHODS        
)CM                                                                             
)CM  ISPSLIB(C1BMXEOJ) - EPILOG STEP(S) - CLEANUP                               
)CM                                                                             
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)CM  THE FOLLOWING IS A GUIDE TO THE SKELETAL IMBEDDING:                        
)CM                                                                             
)CM  C1BMXJOB                                                                   
)CM       C1BMXHJC                                                              
)CM       C1BMXLIB                                                              
)CM       C1BMXHJC        DATA FOR DD=C1BMXHJC                                  
)CM       C1BMXHCN        DATA FOR DD=C1BMXHCN                                  
)CM            C1BMXHJC                                                         
)CM       C1BMXRCN        DATA FOR DD=C1BMXRCN                                  
)CM            C1BMXHJC                                                         
)CM            C1BMXLIB                                                         
)CM       C1BMXIN                                                               
)CM  C1BMXLOC                                                                   
)CM  C1BMXCOM                                                                   
)CM  C1BMXHCN                                                                   
)CM       C1BMXLIB                                                              
)CM  C1BMXBD1                                                                   
)CM  C1BMXBDT                                                                   
)CM  C1BMXHCN                                                                   
)CM       C1BMXLIB                                                              
)CM  C1BMXHCN                                                                   
)CM       C1BMXLIB                                                              
)CM  C1BMXFTP                                                                   
)CM  C1BMXNDM                                                                   
)CM  C1BMXHCN                                                                   
)CM       C1BMXLIB                                                              
)CM  C1BMXEOJ                                                                   
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)CM  TAILORING INSTRUCTIONS:                                                    
)CM                                                                             
)CM  1.  REMOVE THE TRANSMISSION PACKAGE DD STATEMENTS THAT DO NOT              
)CM      APPLY (E.G., IF BDT IS NOT USED, REMOVE C1BMXBDC AND C1BMXBDM).        
)CM                                                                             
)CM  2.  MODIFY THE MODEL CONTROL CARD DATASET NAME(S) USING SITE               
)CM      SPECIFIC PREFIXES.                                                     
)CM                                                                             
)CM      "&I@PRFX.&I@QUAL" IS THE PREFIX/QUALIFIER OF THE MODEL                 
)CM      CONTROL CARD LIBRARY.                                                  
)CM                                                                             
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  
)CM                                                                             
)IM C1BMXHJC                                                                    
//*#####################################################################        
//*                                                                             
//* SYMBOLS DEFINITION                                                          
//*                                                                             
//*#####################################################################        
//E1       EXPORT SYMLIST=(*)                                                   
//S1       SET DATE=&&LYYMMDD                                                   
//S2       SET TIME=&&LHHMMSS                                                   
//S3       SET USER=&&SYSUID                                                    
//* *==============================================* ISPSLIB(C1BMXJOB) *        
//*#####################################################################        
//*                                                                             
//* ENDEVOR PACKAGE SHIPMENT UTILITY                                            
//*                                                                             
//*#####################################################################        
//NDVRSHIP EXEC PGM=NDVRC1,DYNAMNBR=1500,COND=(4,LT),      C1BMXJOB             
//         PARM='&VNBCPARM SHIP &ZPREFIX '                                      
//*                                                                             
)IM C1BMXLIB                                                                    
)IM SCMM@REX                                                                    
//*                                                                             
//* *-----------------------------------**---------* C1BMXJOB (CONT.)  *        
//*                                                                             
//SYSPRINT DD DISP=(NEW,PASS),DSN=&&CHJOBDSN,SPACE=(CYL,(1,1))                  
//C1BMXDET DD SYSOUT=*     ** SHIPMENT DETAIL REPORT  ****************          
//C1BMXSUM DD SYSOUT=*     ** SHIPMENT SUMMARY REPORT ****************          
//C1BMXSYN DD SYSOUT=*     ** INPUT LISTING AND SYNTAX ERROR REPORT **          
//*                                                                             
//* ********************************************************************        
//* *  XCOM COMMAND DATASET                                                     
//* *  XCOM MODEL CONTROL CARD DATASET                                          
//* ********************************************************************        
//*                                                                             
//C1BMXXCC DD DSN=&&&&XXCC,DISP=(NEW,PASS),SPACE=(TRK,(2,10)),                  
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//C1BMXXCM DD DISP=SHR,                                                         
//            DSN=SHARE.ENDV.LIBR.ISPS.SHIP.SBOM                                
//         DD DISP=SHR,                                                         
//            DSN=&I@PRFX..&I@QUAL..CSIQOPTN                                    
//*                                                                             
//* ********************************************************************        
//* *  NETVIEW FTP "ADD TO TRANSMISSION QUEUE" DATASET AND INTERNAL RDR         
//* *  NETVIEW FTP MODEL CONTROL CARD DATASET                                   
//* ********************************************************************        
//*                                                                             
//C1BMXFTC DD DSN=&&&&XFTC,DISP=(NEW,PASS),SPACE=(TRK,(2,10)),                  
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//C1BMXFTM DD DISP=SHR,                                                         
//            DSN=SHARE.ENDV.LIBR.ISPS.SHIP.SBOM                                
//         DD DISP=SHR,                                                         
//            DSN=&I@PRFX..&I@QUAL..CSIQOPTN                                    
//*                                                                             
//* ******************************************************************          
//* *  NETWORK DATA MOVER COPY/RUN COMMAND DATASETS                             
//* *  NETWORK DATA MOVER MODEL CONTROL CARD DATASET                            
//* ******************************************************************          
//*                                                                             
//C1BMXNWC DD DSN=&&&&XNWC,DISP=(NEW,PASS),SPACE=(TRK,(2,10)),                  
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//C1BMXNWM DD DISP=SHR,                                                         
//            DSN=&I@PRFX..&I@QUAL..CSIQOPTN               C9221790             
//*                                                                             
//* ********************************************************************        
//* *  LOCAL TRANSFER COPY/RUN COMMAND DATASETS                                 
//* *  LOCAL MODEL CONTROL CARD DATASET                                         
//* ********************************************************************        
//*                                                                             
//C1BMXLCC DD DSN=&&&&XLCC,DISP=(NEW,PASS),SPACE=(TRK,(2,10)),                  
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//C1BMXLCM DD DISP=SHR,                                                         
//            DSN=&I@PRFX..&I@QUAL..CSIQOPTN                                    
//* ********************************************************************        
//* *  PDS CONTAINING REMOTE IEBCOPY AND IDCAMS JOBSTEP MEMBERS                 
//* ********************************************************************        
//*                                                                             
//C1BMXRJC DD DISP=SHR,                                                         
//            DSN=&I@PRFX..&I@QUAL..CSIQSENU                                    
//*                                                                             
//* ********************************************************************        
//* *  SHIPMENT DATE/TIME READ BY INLINE HOST CONFIRMATION STEP                 
//* ********************************************************************        
//*                                                                             
//C1BMXDTM DD DSN=&&&&XDTM,DISP=(NEW,PASS),SPACE=(TRK,(1,0)),                   
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//*                                                                             
//* ********************************************************************        
//* *  HOST STAGING DATASET DELETION STATEMENTS (IDCAMS)                        
//* ********************************************************************        
//*                                                                             
//C1BMXDEL DD DSN=&&&&HDEL,DISP=(NEW,PASS),SPACE=(TRK,(10,10)),                 
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=&T@DISK                                                      
//*                                                                             
//* ********************************************************************        
//* *  HOST STAGING USS DIRECTORY RM (DELETE) COMMANDS (BPXBATCH)               
//* ********************************************************************        
//*                                                                             
//C1BMXUDL DD DSN=&&&&HUDL,DISP=(NEW,PASS),SPACE=(TRK,(10,10)),                 
//            DCB=(RECFM=VB,LRECL=3000,DSORG=PS),                               
//            UNIT=&T@DISK                                                      
//*                                                                             
//* ********************************************************************        
//* *  REMOTE JCL MODEL MEMBERS                                                 
//* ********************************************************************        
//*                                                                             
//C1BMXMDL DD DISP=SHR,                                                         
//            DSN=SHARE.ENDV.LIBR.ISPS.SHIP.SBOM                                
//         DD DISP=SHR,                                                         
//            DSN=&I@PRFX..&I@QUAL..CSIQOPTN                                    
//*                                                                             
//* ********************************************************************        
//* *  JCL SEGMENTS TO CREATE GROUP SYMBOLICS FOR MODELLING                     
//* ********************************************************************        
//*                                                                             
//C1BMXHJC DD DATA,DLM=##                                                       
)IM C1BMXHJC OPT                                                                
##                                                                              
//*                                                                             
//* *----------------------------------------------* C1BMXJOB (CONT.)  *        
//*                                                                             
//C1BMXHCN DD DATA,DLM=##                                                       
)IM C1BMXHCN OPT                                                                
##                                                                              
//*                                                                             
//* *----------------------------------------------* C1BMXJOB (CONT.)  *        
//*                                                                             
//C1BMXRCN DD DATA,DLM=##                                                       
)IM C1BMXRCN OPT                                                                
##                                                                              
//*                                                                             
//* *----------------------------------------------* C1BMXJOB (CONT.)  *        
//*                                                                             
//C1BMXLIB DD DATA,DLM=##                                                       
)IM C1BMXLIB OPT                                                                
##                                                                              
//*                                                                             
//* *----------------------------------------------* C1BMXJOB (CONT.)  *        
//*                                                                             
//* ********************************************************************        
//* *  SHIP PACKAGE PKG-ID TO DESTINATION DEST-ID ( OPTION BACKOUT )            
//* ********************************************************************        
//*                                                                             
//* THE FOLLOWING DD STATEMENT MUST BE THE *LAST* CARD IN THIS MEMBER.          
//* ISPSLIB MEMBER C1BMXIN IS INCLUDED AFTER IT AS THE INSTREAM DATA.           
//*                                                                             
//C1BMXIN  DD *  *---------------------------------* ISPSLIB(C1BMXIN) *         
          
./  ADD  NAME=C1BMXLIB                
)CM *-----------------------------------------------------------------*         
)CM *                                                                 *         
)CM *  COPYRIGHT (C) 2022 BROADCOM. ALL RIGHTS RESERVED.              *         
)CM *                                                                 *         
)CM * NAME: C1BMXLIB                                                  *         
)CM *                                                                 *         
)CM *PACKAGE SHIPMENT BATCH JCL - STEPLIB/CONLIB - ISPSLIB(C1BMXLIB)  *         
)CM *                                                                 *         
)CM *THIS SKELETON CONTAINS THE STEPLIB AND CONLIB DEFINITIONS TO RUN *         
)CM *PACKAGE SHIPMENT JOB STEPS AT THE HOST SITE.                     *         
)CM *-----------------------------------------------------------------*         
//* ********************************************************************        
//* *  STEPLIB, CONLIB, MESSAGE LOG AND ABEND DATASETS                          
//* ********************************************************************        
)CM  ISPSLIB(SCMM@LIB) - STEPLIB/CONLIB CONCATENATIONS,                         
)CM                      TAILORED BY THE HOST SITE.                             
)IM SCMM@LIB                                                                    
//*                                                                             
//SYSUDUMP DD SYSOUT=*     *** DUMP TO SYSOUT *************************         
//SYMDUMP  DD DUMMY                                                             
//C1BMXLOG DD SYSOUT=*     *** MESSAGES, ERRORS, RETURN CODES *********         
//C1BMXTRC DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133)                                
          
./  ADD  NAME=C1BMXLOC                
)CM  PACKAGE SHIPMENT BATCH JCL -  LOCAL TRANSFERS - CSIQSENU(C1BMXLOC)         
)CM                                                                             
)CM  THIS SKELETON IS USED TO TRANSFER HOST STAGING DATASETS WHICH EXIST        
)CM  ON SHARED DASD TO PRODUCTION DATASETS WHICH MAY OR MAY NOT EXIST ON        
)CM  SHARED DASD.  THE JOB EXECUTES TSO IN BATCH AND THE INPUT (SYSTSIN)        
)CM  CONTAINS A SUBMIT COMMAND TO RUN AHJOB.                                    
)CM                                                                             
)CM //COPYSTMT EXEC PGM=IEBGENER                           C1BMXLOC             
)CM //SYSUT1   DD DSN=&&CHJOBDSN,DISP=(OLD,PASS)                                
)CM //SYSUT2   DD SYSOUT=*,DCB=(RECFM=FB,LRECL=80)                              
)CM //SYSPRINT DD SYSOUT=*                                                      
)CM //SYSIN    DD DUMMY                                                         
)CM //*                                                                         
)IM C1BMXSBD                                                                    
//*#####################################################################        
//*                                                                             
//* Tailor AHJOB                                                                
//*                                                                             
//*#####################################################################        
//*E1       EXPORT SYMLIST=(*)                                                  
//*S1       SET DATE=&&LYYMMDD                                                  
//*S2       SET TIME=&&LHHMMSS                                                  
//*S3       SET USER=&&SYSUID                                                   
//CHGAHJOB EXEC PGM=IKJEFT01,COND=(4,LT)                   C1BMXLOC             
//SYSEXEC  DD DISP=SHR,DSN=GONJO08.CNTL.SOURCE                                  
//XLCC     DD DSN=&&&&XLCC,DISP=(OLD,PASS)                                      
//AHJOBDSN DD DSN=&&&&AHJOBDSN,DISP=(OLD,DELETE)                                
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSTSIN  DD *,SYMBOLS=JCLONLY                                                 
    MODAHJOB     +                                                              
      &VPHPKGID  +                                                              
      /tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json                        
//* *==================================================================*        
//* *===============================================* CSIQSENU(C1BMXLOC)        
//* *==================================================================*        
//*                                                                             
//&VNBXSTP EXEC PGM=IKJEFT01,COND=(12,LE,NDVRSHIP)         C1BMXLOC             
//SYSTSIN  DD DSN=&&&&XLCC,DISP=(OLD,PASS)                                      
//SYSTSPRT DD SYSOUT=*                                                          
//SYSOUT   DD SYSOUT=*                                                          
          
./  ADD  NAME=C1BMXNDM                
)CM  PACKAGE SHIPMENT BATCH JCL - NETWORK DM XMISSION - CSIQSENU(C1BMXNDM)
)CM
)CM  THIS SKELETON IS USED TO TRANSMIT STAGING DATASETS AND "RUN JOB"
)CM  COMMANDS VIA NETWORK DATA MOVER.
)CM
)CM  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
)CM
)CM  TAILORING INSTRUCTIONS:
)CM
)CM  1.  MODIFY THE "LINKLIB", "NETMAP", "MSG", AND "PROCESS.LIB"
)CM      DSNAMES USING SITE SPECIFIC PREFIX, QUALIFIER, AND NAME.
)CM
)CM  2.  IF YOU NEED A SIGNON STATEMENT MODIFY THE SIGNON STATEMENT
)CM      IN THE &VNBXSTP JOB STEP USING SITE SPECIFIC SIGNON DATA.
)CM      ADDITIONAL KEYWORDS AND CONNECT:DIRECT CONTROL STATEMENTS
)CM      OTHER THAN SIGNON MAY ALSO BE ADDED. IF A SIGNON STATEMENT
)CM      IS NOT NEEDED, DELETE THE SYSIN DD AND SIGNON STATEMENT
)CM      IN THE &VNBXSTP JOB STEP AND CODE A SYSIN DD ON THE
)CM      CONNCMD.FILE DD STATEMENT.
)CM
)IM C1BMXSBD
//* *==============================================================* *
//* *===========================================* CSIQSENU(C1BMXNDM) *
//* *==============================================================* *
//* *==============================================================* *
//*#####################################################################
//*
//* Tailor AHJOB
//*
//*#####################################################################
//CHGAHJOB EXEC PGM=IKJEFT01,COND=(4,LT)                   C1BMXNDM
//SYSEXEC  DD DISP=SHR,DSN=GONJO08.CNTL.SOURCE
//XXCC     DD DSN=&&&&XNWC,DISP=(OLD,PASS)
//AHJOBDSN DD DSN=&&&&AHJOBDSN,DISP=(OLD,DELETE)
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *,SYMBOLS=JCLONLY
    MODAHJOB     +
      &VPHPKGID  +
      /tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json
//*#####################################################################
//*
//* Transmit SBOM to REMOTE SYSTEM
//*
//*#####################################################################
//SBOMESSI EXEC PGM=IEBUPDTE,PARM=NEW,COND=(12,LE,NDVRSHIP)
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DISP=(NEW,CATLG),UNIT=&T@DISK,
//             DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE,
//             SPACE=(CYL,(3,1,25)),
//             DCB=(RECFM=FB,LRECL=80)
//SYSUT1   DD  DUMMY
//SYSIN    DD  *
./ ADD NAME=SUBSBOM
./ NUMBER NEW1=1,INCR=1
***********************************************************
//* *==============================================================* *
//SBOMESSP EXEC PGM=IEBUPDTE,PARM=MOD,COND=(12,LE,NDVRSHIP)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=OLD,
//             DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE
//SYSUT2   DD  DISP=OLD,
//             DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE
//SYSIN    DD  *,SYMBOLS=JCLONLY
./ CHANGE NAME=SUBSBOM
./ NUMBER SEQ1=00000001,NEW1=00000010,INCR=00000010,INSERT=YES
      SUBMIT PROC=XMITSBOM
./ ADD NAME=XMITSBOM
XMITSBOM PROCESS SNODE=&XNODE
COPYSBOM COPY -
         FROM (PNODE DISP=SHR -
          DSN='/tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json' -
          SYSOPTS="DATATYPE=BINARY XLATE=NO"
         TO  -
          DSN='/tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json' -
          SYSOPTS="DATATYPE=BINARY XLATE=NO"
//* *==============================================================* *
//*****************************************************************
//*
//* Barclays Example - XMIT SBOM to Remote LPAR.
//*
//*****************************************************************
//DCTXSBOM EXEC PGM=DMBATCH,REGION=2048K,COND=(12,LE,NDVRSHIP)
//DMNETMAP DD  DISP=SHR,                   NDM NETWORK MAP
//             DSN=TZLD.NDM.NETMAP
//DMMSGFIL DD  DISP=SHR,                   NDM MESSAGE DATASET
//             DSN=TZLD.NDM.MSG
//DMPUBLIB DD  DISP=SHR,
//             DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE
//SYSPRINT DD  SYSOUT=*    ******************************************
//NDMCMNDS DD  SYSOUT=*    *      ****      REPORTS      ****       *
//DMPRINT  DD  SYSOUT=*    ******************************************
//SYSUDUMP DD  SYSOUT=*
//SYMDUMP  DD DUMMY
//SYSIN    DD  DSN=&&TEMP1,DISP=(OLD,PASS)
//         DD  DISP=SHR,
//         DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE(SUBSBOM)
//* *==============================================================* *
//DELMEM   EXEC PGM=IDCAMS,COND=(12,LE,NDVRSHIP)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DEL NDY.D&DTE..T&TME..SBOMCMD.FILE(SUBSBOM) NONVSAM
 DEL NDY.D&DTE..T&TME..SBOMCMD.FILE(XMITSBOM) NONVSAM
//DFILSBOM EXEC PGM=IEFBR14,COND=(0,NE,DELMEM)
//PDS      DD  DISP=(OLD,DELETE,DELETE),
//             DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE
//* *==============================================================* *
//* *===========================================* CSIQSENU(C1BMXNDM) *
//* *==============================================================* *
//*#####################################################################
//*
//* End of SBOM Transmission to REMOTE SYSTEM
//*
//*#####################################################################
//PROCESSI EXEC PGM=IEBUPDTE,PARM=NEW,COND=(12,LE,NDVRSHIP)
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DISP=(NEW,CATLG),UNIT=&T@DISK,
//             DSN=NDY.D&DTE..T&TME..CONNCMD.FILE,
//             SPACE=(CYL,(1,1,25)),
//             DCB=(RECFM=FB,LRECL=80)
//SYSUT1   DD  DUMMY
//SYSIN    DD  DISP=SHR,
//             DSN=&I@PRFX..&I@QUAL..CSIQOPTN(#PS#NDM)
//* *==============================================================* *
//PROCESSP EXEC PGM=IEBUPDTE,PARM=MOD,COND=(12,LE,NDVRSHIP)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=OLD,
//             DSN=NDY.D&DTE..T&TME..CONNCMD.FILE
//SYSUT2   DD  DISP=OLD,
//             DSN=NDY.D&DTE..T&TME..CONNCMD.FILE
//SYSIN    DD  DSN=&&&&XNWC,DISP=(OLD,PASS)
//*****************************************************************
//*
//* Barclays Example - XMITing files to Remote LPAR.
//*
//*****************************************************************
//&VNBXSTP EXEC PGM=DMBATCH,REGION=2048K,COND=(12,LE,NDVRSHIP)
//DMNETMAP DD  DISP=SHR,                   NDM NETWORK MAP
//             DSN=TZLD.NDM.NETMAP
//DMMSGFIL DD  DISP=SHR,                   NDM MESSAGE DATASET
//             DSN=TZLD.NDM.MSG
//DMPUBLIB DD  DISP=SHR,
//             DSN=NDY.D&DTE..T&TME..SBOMCMD.FILE
//SYSPRINT DD  SYSOUT=*    ******************************************
//NDMCMNDS DD  SYSOUT=*    *      ****      REPORTS      ****       *
//DMPRINT  DD  SYSOUT=*    ******************************************
//SYSUDUMP DD  SYSOUT=*
//SYMDUMP  DD  DUMMY
//SYSIN    DD  DSN=&&TEMP1,DISP=(OLD,PASS)
//         DD  DISP=SHR,
//         DSN=NDY.D&DTE..T&TME..CONNCMD.FILE(SUBMIT)
//* *==============================================================* *
//SUBMITD  EXEC PGM=IDCAMS,COND=(12,LE,NDVRSHIP)           C1BMXNDM
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *,SYMBOLS=JCLONLY
 DELETE NDY.D&DTE..T&TME..CONNCMD.FILE(SUBMIT) NONVSAM
          
./  ADD  NAME=C1BMXRCN                
REM   In Windows, execute this command file to collect all Package
@ECHO OFF
ECHO ./  ADD  NAME=@README                     > ShippingSBOM.moveout
These items come from the Endevor GitHub at
  https://github.com/BroadcomMFD/broadcom-product-scripts
ECHO These are asm          : C1LSTBKO >> ShippingSBOM.moveout
ECHO These are rex/CSIQCLS0 : CMPNTGEN MODAHJOB >> ShippingSBOM.moveout
ECHO These are skl/CSIQSENU : #NFTPRCN #PSNFTP1 #PSNFTP6 #PSNFTPE #PSNFTPJ #PSNFTPP #PSNFTPS #PSXCOME #PSXCOMP #PSXCOMS #RJ0 #RJFCPY1 #RJFCPY2 #RJICPY1 #RJICPY2 #RJICPYL #RJICPYU #RJNDVRA #RJNDVRA #RJNDVRB #RJNDVRS C1BMXCOM C1BMXEOJ C1BMXFTP #PSNWDMT #PSNWDM8 C1BMXNDM C1BMXHCN C1BMXIN C1BMXJOB C1BMXLIB C1BMXLOC C1BMXRCN C1BMXSBD HASHSBOM SCMM@REX >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1LSTBKO                >> ShippingSBOM.moveout
TYPE ASM\C1LSTBKO.asm   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=CMPNTGEN                >> ShippingSBOM.moveout
TYPE REXX\CMPNTGEN.rex   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=MODAHJOB                >> ShippingSBOM.moveout
TYPE REXX\MODAHJOB.rex   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#NFTPRCN                >> ShippingSBOM.moveout
TYPE ISPS\#NFTPRCN.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNFTP1                >> ShippingSBOM.moveout
TYPE ISPS\#PSNFTP1.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNFTP6                >> ShippingSBOM.moveout
TYPE ISPS\#PSNFTP6.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNFTPE                >> ShippingSBOM.moveout
TYPE ISPS\#PSNFTPE.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNFTPJ                >> ShippingSBOM.moveout
TYPE ISPS\#PSNFTPJ.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNFTPP                >> ShippingSBOM.moveout
TYPE ISPS\#PSNFTPP.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNFTPS                >> ShippingSBOM.moveout
TYPE ISPS\#PSNFTPS.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSXCOME                >> ShippingSBOM.moveout
TYPE ISPS\#PSXCOME.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSXCOMP                >> ShippingSBOM.moveout
TYPE ISPS\#PSXCOMP.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSXCOMS                >> ShippingSBOM.moveout
TYPE ISPS\#PSXCOMS.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJ0                >> ShippingSBOM.moveout
TYPE ISPS\#RJ0.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJFCPY1                >> ShippingSBOM.moveout
TYPE ISPS\#RJFCPY1.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJFCPY2                >> ShippingSBOM.moveout
TYPE ISPS\#RJFCPY2.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJICPY1                >> ShippingSBOM.moveout
TYPE ISPS\#RJICPY1.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJICPY2                >> ShippingSBOM.moveout
TYPE ISPS\#RJICPY2.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJICPYL                >> ShippingSBOM.moveout
TYPE ISPS\#RJICPYL.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJICPYU                >> ShippingSBOM.moveout
TYPE ISPS\#RJICPYU.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJNDVRA                >> ShippingSBOM.moveout
TYPE ISPS\#RJNDVRA.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJNDVRA                >> ShippingSBOM.moveout
TYPE ISPS\#RJNDVRA.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJNDVRB                >> ShippingSBOM.moveout
TYPE ISPS\#RJNDVRB.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#RJNDVRS                >> ShippingSBOM.moveout
TYPE ISPS\#RJNDVRS.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXCOM                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXCOM.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXEOJ                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXEOJ.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXFTP                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXFTP.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNWDMT                >> ShippingSBOM.moveout
TYPE ISPS\#PSNWDMT.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=#PSNWDM8                >> ShippingSBOM.moveout
TYPE ISPS\#PSNWDM8.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXNDM                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXNDM.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXHCN                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXHCN.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXIN                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXIN.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXJOB                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXJOB.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXLIB                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXLIB.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXLOC                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXLOC.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXRCN                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXRCN.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=C1BMXSBD                >> ShippingSBOM.moveout
TYPE ISPS\C1BMXSBD.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=HASHSBOM                >> ShippingSBOM.moveout
TYPE ISPS\HASHSBOM.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
ECHO ./  ADD  NAME=SCMM@REX                >> ShippingSBOM.moveout
TYPE ISPS\SCMM@REX.skl   >> ShippingSBOM.moveout
ECHO.          >> ShippingSBOM.moveout
REM
          
./  ADD  NAME=C1BMXSBD                
//* *==============================================* ISPSLIB(C1BMXSBD) *        
//*#####################################################################        
//*                                                                             
//* List Package definition and Package Actions                                 
//*                                                                             
//*#####################################################################        
//*******************************************************************           
//*                                                                             
//* SYMBOLS DEFINITION                                                          
//*                                                                             
//*******************************************************************           
//*ED       EXPORT SYMLIST=(*)                                                  
//*S1       SET DATE=&LYYMMDD                                                   
//*S2       SET TIME=&LHHMMSS                                                   
//*S3       SET USER=&SYSUID                                                    
//*S4       SET PKGID=&VPHPKGID                                                 
//LSTPKGID EXEC PGM=NDVRC1,                                C1BMXSBD             
//         PARM='CONCALL,DDN:CONLIB,BC1PCSV0'                                   
)IM C1BMXLIB                                                                    
//CSVIPT01 DD *,SYMBOLS=JCLONLY                                                 
  LIST PACKAGE ID &VPHPKGID TO FILE LSTPKGID                                    
   .                                                                            
  LIST PACKAGE ACTION TO FILE LISTPKGA                                          
       FROM PACKAGE &VPHPKGID                                                   
   .                                                                            
//*                                                                             
//C1PLMSGS DD SYSOUT=*                                                          
//CSVMSGS1 DD SYSOUT=*                                                          
//C1MSGSA  DD SYSOUT=*                                                          
//C1MSGS1  DD SYSOUT=*                                                          
//C1MSGS2  DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
//SYSOUT   DD SYSOUT=*                                                          
//SYSTERM  DD SYSOUT=*                                                          
//SYSUDUMP DD SYSOUT=*                                                          
//SYMDUMP  DD SYSOUT=*                                                          
//*                                                                             
//LSTPKGID DD DSN=&&&&LSTPKGID,                                                 
//         DCB=(DSORG=PS,RECFM=VB,LRECL=4092),                                  
//         DISP=(NEW,PASS),                                                     
//         SPACE=(CYL,(5,1),RLSE),                                              
//         UNIT=3390                                                            
//LISTPKGA DD DSN=&&&&LISTPKGA,                                                 
//         DCB=(DSORG=PS,RECFM=VB,LRECL=4092),                                  
//         DISP=(NEW,PASS),                                                     
//         SPACE=(CYL,(5,1),RLSE),                                              
//         UNIT=3390                                                            
//*#####################################################################        
//*                                                                             
//* Generate Source Output COmponents and Ship data sets components             
//*                                                                             
//*#####################################################################        
//CMPNTGEN EXEC PGM=IKJEFT01,COND=(4,LT)                   C1BMXSBD             
)IM C1BMXLIB                                                                    
//**********************************************************************        
//*  REXX DATA SETS                                                    *        
//**********************************************************************        
)IM SCMM@REX                                                                    
//SYSTSPRT DD SYSOUT=*                                                          
//SYSPRINT DD SYSOUT=*                                                          
)SEL &XMETHOD = LOCAL                                                           
//XLCC     DD DISP=(OLD,PASS),DSN=&&&&XLCC                                      
)ENDSEL                                                                         
)SEL &XMETHOD = NETVIEW_FTP                                                     
//XFTC     DD DISP=(OLD,PASS),DSN=&&&&XFTC                                      
)ENDSEL                                                                         
)SEL &XMETHOD = XCOM                                                            
//XXCC     DD DISP=(OLD,PASS),DSN=&&&&XXCC                                      
)ENDSEL                                                                         
)SEL &XMETHOD = NETWORK_DM                                                      
//XNWC     DD DISP=(OLD,PASS),DSN=&&&&XNWC                                      
)ENDSEL                                                                         
//SYSTSIN  DD *,SYMBOLS=JCLONLY                                                 
  CMPNTGEN     +                                                                
     &VPHPKGID +                                                                
     &XMETHOD                                                                   
//**********************************************************************        
//*  INPUT DATA SETS                                                   *        
//**********************************************************************        
//LISTPKGA DD DISP=(OLD,PASS),DSN=&&&&LISTPKGA                          00008003
//**********************************************************************        
//*             SORT WORK FILES                                        *        
//**********************************************************************        
//SORTWK01 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//SORTWK02 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//SORTWK03 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//C1TPDD01 DD UNIT=3390,SPACE=(CYL,5),                                          
//            DCB=(RECFM=VB,LRECL=260)                                          
//C1TPDD02 DD UNIT=3390,SPACE=(CYL,5),                                          
//            DCB=(RECFM=VB,LRECL=260)                                          
//**********************************************************************        
//*  OUTPUT DATA SETS                                                  *        
//**********************************************************************        
//C1MSGS1  DD DISP=(NEW,PASS),DSN=&&&&C1MSGS1,                                  
//            DCB=(DSORG=PS,LRECL=133,RECFM=FBA),                               
//            SPACE=(CYL,(2,1))                                                 
//C1MSGS2  DD SYSOUT=*                                                          
//COMPNTS  DD DISP=(NEW,PASS),DSN=&&&&COMPNTS,                                  
//            DCB=(DSORG=PS,LRECL=133),                                         
//            SPACE=(CYL,(2,1))                                                 
//COMPTEMP DD DISP=(NEW,PASS),DSN=&&&&COMPTEMP,                                 
//            DCB=(DSORG=PS,LRECL=133),                                         
//            SPACE=(CYL,(2,1))                                                 
//GENFILES DD DISP=(NEW,PASS),DSN=&&&&GENFILES,                                 
//            DCB=(DSORG=PS,LRECL=80),                                          
//            SPACE=(CYL,(2,1))                                                 
//HOSTSTG  DD DISP=(NEW,PASS),DSN=&&&&HOSTSTG,                                  
//            DCB=(DSORG=PS,LRECL=80),                                          
//            SPACE=(CYL,(2,1))                                                 
//AHJOBDSN DD DSN=&&&&AHJOBDSN,DISP=(NEW,PASS),SPACE=(TRK,(2,10)),              
//            DCB=(RECFM=FB,LRECL=80,DSORG=PS),                                 
//            UNIT=3390                                                         
//*SYSABEND DD SYSOUT=*                                                         
//*SYSUDUMP DD SYSOUT=*                                                         
//*SYMDUMP  DD DUMMY                                                            
//SYSOUT   DD SYSOUT=*                                                          
//**********************************************************************        
//*  API DATA SETS                                                     *        
//**********************************************************************        
//APIMSGS  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133)                                
//APILST   DD SYSOUT=*,DCB=(RECFM=VB,LRECL=2048)                                
//*                                                                             
//BOUTMSG  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133)                                
//BOUTLST  DD DISP=(NEW,PASS),                                                  
//            DSN=&&&&BOUTLST,DCB=(RECFM=VB,LRECL=2048),                        
//            SPACE=(CYL,(2,1))                                                 
//BSTERR   DD SYSOUT=*                 (ERROR LOG)                              
//**********************************************************************        
//*  REQUEST DATA SET                                                  *        
//**********************************************************************        
//BSTIPT01 DD DISP=(NEW,PASS),DSN=&&&&BSTIPT01,                                 
//            DCB=(RECFM=FB,LRECL=80),                                          
//            SPACE=(CYL,(2,1))                                                 
//**********************************************************************        
//*        ERROR AND TRACE DD STATEMENTS                                        
//**********************************************************************        
//*EN$TRAPI DD SYSOUT=*                 (API INTERNAL TRACE)                    
//*BSTAPI   DD SYSOUT=*                 (API DIAGNOSTIC TRACE)                  
//*#####################################################################        
//*                                                                             
//* COPY CSVs AND COMPONENT LISTING TO USS IN ASCII FORMAT                      
//*                                                                             
//*#####################################################################        
//ASCIIOUT EXEC PGM=IKJEFT01,DYNAMNBR=300,COND=(4,LT)      C1BMXSBD             
//SYSTSPRT DD SYSOUT=*                                                          
//*                                                                             
//LSTPKIN  DD DISP=(OLD,DELETE),DSN=&&&&LSTPKGID                                
//LSTPKOUT DD PATH='/tmp/&&USER_D&&DATE_T&&TIME..listpkgID.csv',                
// PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                            
// PATHMODE=SIRWXU                                                              
//*                                                                             
//LSPKAIN  DD DISP=(OLD,DELETE),DSN=&&&&LISTPKGA                                
//LSPKAOUT DD PATH='/tmp/&&USER_D&&DATE_T&&TIME..listpkga.csv',                 
// PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                            
// PATHMODE=SIRWXU                                                              
//*                                                                             
//LSTCMIN  DD DISP=(OLD,DELETE),DSN=&&&&COMPNTS                                 
//LSTCMOUT DD PATH='/tmp/&&USER_D&&DATE_T&&TIME..listcmpnts.txt',               
// PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                            
// PATHMODE=SIRWXU                                                              
//*                                                                             
//SYSPRINT DD SYSOUT=*                                                          
//SYSTSIN  DD *                                                                 
OCOPY INDD(LSTPKIN) OUTDD(LSTPKOUT) TEXT CONVERT((BPXFX311)) FROM1047           
OCOPY INDD(LSPKAIN) OUTDD(LSPKAOUT) TEXT CONVERT((BPXFX311)) FROM1047           
OCOPY INDD(LSTCMIN) OUTDD(LSTCMOUT) TEXT CONVERT((BPXFX311)) FROM1047           
/*                                                                              
//*#####################################################################        
//*                                                                             
//*  GENERATE PACKAGE SBOM FROM FILES                                           
//*                                                                             
//*#####################################################################        
//SBOMZGEN EXEC PGM=BPXBATCH,REGION=0M,COND=(4,LT)         C1BMXSBD             
//EN$TRXIT DD  SYSOUT=*                                                         
//STDIN    DD DUMMY                                                             
//STDOUT   DD PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                 
// PATHMODE=SIRWXU,                                                             
// PATH='/tmp/&&USER_D&&DATE_T&&TIME..&VPHPKGID_sbom.json'                      
//STDERR   DD PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                 
// PATHMODE=SIRWXU,                                                             
// PATH='/tmp/&&USER_D&&DATE_T&&TIME..&VPHPKGID_sbom.err'                       
//STDENV   DD DUMMY                                                             
/*                                                                              
//STDPARM  DD *,SYMBOLS=JCLONLY                                                 
sh                                                                              
sbomz endevor sbom                                                              
--endevor-list-package-action-path                                              
/tmp/&&USER._D&&DATE._T&&TIME..listpkga.csv                                     
--endevor-list-package-id-path                                                  
/tmp/&&USER._D&&DATE._T&&TIME..listpkgID.csv                                    
--endevor-print-component-path                                                  
/tmp/&&USER._D&&DATE._T&&TIME..listcmpnts.txt                                   
--log-debug                                                                     
--sbom-no-endevor-package-source-elements                                       
--sbom-no-endevor-element-properties                                            
--sbom-endevor-include-package-target-components                                
--config-path /u/users/ENDV/ndvrwsR19/sbom/sbomz.config_noloc.json              
--config-work-directory=/u/users/ENDV/ndvrwsR19/sbom                            
//         DD DISP=(OLD,DELETE),DSN=&&&&GENFILES                                
//         DD DISP=(OLD,DELETE),DSN=&&&&HOSTSTG                                 
//*#####################################################################        
//*                                                                             
//* SBOM SIGN                                                                   
//*                                                                             
//*#####################################################################        
//SBOMSIGN EXEC PGM=BPXBATCH,REGION=0M                     C1BMXSBD             
//STDIN    DD DUMMY                                                             
//STDOUT   DD DUMMY                                                             
//STDERR   DD PATHOPTS=(OWRONLY,OCREAT,OTRUNC),                                 
// PATH='/tmp/&&USER_D&&DATE_T&&TIME..&VPHPKGID_signed_sbom.err',               
// PATHMODE=SIRWXU                                                              
//STDENV   DD DUMMY                                                             
//STDPARM  DD *,SYMBOLS=JCLONLY                                                 
sh                                                                              
sbomz sign json-file                                                            
/tmp/&&USER._D&&DATE._T&&TIME..&VPHPKGID_sbom.json                              
$HOME/sbom/ship_sbom_pvt.key                                                    
/*                                                                              
//*#####################################################################        
//*                                                                             
//* Copy HFS output files to SYSOUT, since BPXBATCH can only write              
//* STDOUT and STDERR to HFS files.                                             
//*                                                                             
//*#####################################################################        
//SBMEBCDI EXEC PGM=IKJEFT01,DYNAMNBR=300,COND=(4,LT)      C1BMXSBD             
//SYSTSPRT DD SYSOUT=*                                                          
//HFSOUT   DD PATHMODE=SIRWXU,                                                  
// PATH='/tmp/&&USER_D&&DATE_T&&TIME..&VPHPKGID_sbom.json'                      
//PKGSBOM  DD DISP=(,PASS),DSN=&&PKGSBOM,                                       
//            DCB=(LRECL=255,RECFM=FB,DSORG=PS),                                
//            SPACE=(CYL,(5,1))                                                 
//*                                                                             
//HFSERR   DD PATHMODE=SIRWXU,                                                  
// PATH='/tmp/&&USER_D&&DATE_T&&TIME..&VPHPKGID_sbom.err'                       
//STDERRL  DD SYSOUT=*,DCB=(RECFM=VB,LRECL=3000,BLKSIZE=3004)                   
//*                                                                             
//HFSERRS  DD PATHMODE=SIRWXU,                                                  
// PATH='/tmp/&&USER_D&&DATE_T&&TIME..&VPHPKGID_signed_sbom.err'                
//STDERRLS DD SYSOUT=*,DCB=(RECFM=VB,LRECL=3000,BLKSIZE=3004)                   
//*                                                                             
//SYSPRINT DD SYSOUT=*                                                          
//SYSTSIN  DD *                                                                 
OCOPY INDD(HFSOUT)  OUTDD(PKGSBOM)  TEXT CONVERT((BPXFX311)) TO1047             
OCOPY INDD(HFSERR)  OUTDD(STDERRL)  TEXT CONVERT((BPXFX311)) TO1047             
OCOPY INDD(HFSERRS) OUTDD(STDERRLS) TEXT CONVERT((BPXFX311)) TO1047             
/*                                                                              
//*#####################################################################        
//*                                                                             
//*  ADD SBOM TO ENDEVOR ADMIN ENVIRONMENT                   *                  
//*                                                                             
//*#####################################################################        
//NDVRADD  EXEC PGM=NDVRC1,DYNAMNBR=1500,COND=(4,LT),      C1BMXSBD             
//  PARM='C1BM3000'                                                             
)IM C1BMXLIB                                                                    
//**********************************************************************        
//*             SORT WORK FILES                                        *        
//**********************************************************************        
//SORTWK01 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//SORTWK02 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//SORTWK03 DD UNIT=3390,SPACE=(CYL,(1,2))                                       
//C1TPDD01 DD UNIT=3390,SPACE=(CYL,5),                                          
//            DCB=(RECFM=VB,LRECL=260)                                          
//C1TPDD02 DD UNIT=3390,SPACE=(CYL,5),                                          
//            DCB=(RECFM=VB,LRECL=260)                                          
//**********************************************************************        
//*  INPUT  DATA SETS                                                  *        
//**********************************************************************        
//PKGSBOM  DD DISP=(OLD,PASS),DSN=&&&&PKGSBOM                                   
//**********************************************************************        
//*  OUTPUT DATA SETS                                                  *        
//**********************************************************************        
//C1MSGS1  DD SYSOUT=*                                                          
//C1MSGS2  DD SYSOUT=*                                                          
//C1PRINT  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133)                                
//SYSUDUMP DD SYSOUT=*                                                          
//SYMDUMP  DD DUMMY                                                             
//SYSOUT   DD SYSOUT=*                                                          
//**********************************************************************        
//*  REQUEST DATA SET                                                  *        
//**********************************************************************        
//BSTIPT01 DD *,SYMBOLS=JCLONLY                                                 
  SET STOPRC 16 .                                                               
  ADD ELEMENT '&VPHPKGID'                                                       
    FROM DDNAME PKGSBOM                                                         
    TO   ENVIRONMENT 'ADM' SYSTEM 'ADMMY' SUBSYSTEM 'PACKAGES'                  
      TYPE 'SBOM'                                                               
    OPTIONS CCID 'pkgsbom' COMMENTS "add new package sbom" UPDATE               
      OVE SIGNO                                                                 
   .                                                                            
//*                                                                             
          
./  ADD  NAME=HASHSBOM                
/* REXX */                                                                      
trace r                                                                         
VERBOSE = 0                                                                     
/* Get Web Enablement Toolkit REXX constants */                                 
 call HTTP_getToolkitConstants                                                  
 if RESULT <> 0 then                                                            
    exit fatalError( '** SBOMHASH90E Environment error **' )                    
                                                                                
/* Initialize variables used in program */                                      
 call InitializeVars                                                            
                                                                                
 return main()                                                                  
                                                                                
                                                                                
/***********************************************/                               
/* Function:  main                             */                               
/*                                             */                               
/* help implementing new functionalities       */                               
/* using as example a json text read from a    */                               
/* file.                                       */                               
/*                                             */                               
/* Returns: 0 if successful, -1 if not.        */                               
/***********************************************/                               
                                                                                
main:                                                                           
                                                                                
/* Validate the JSON Text read from ddname JSONIN         */                    
                                                                                
address mvs "execio * diskr hash256 (stem hash256. finis"                       
                                                                                
i = 1                                                                           
j = 1                                                                           
Do while i<= hash256.0                                                          
                                                                                
  parse var hash256.i shipRef HostStagingDS                                     
                                                                                
  shipRef = strip(shipRef)                                                      
  HostStagingDS = strip(HostStagingDS)                                          
                                                                                
  if pos('HASH',shipRef) <> 0 then do                                           
   if HostStagingDS <> '' then do                                               
      RemoteStagingDS = strip(value('hash256.'i+1))                             
      RemoteProdDS = strip(value('hash256.'i+2))                                
                                                                                
      If RemoteStagingDS <> '' & RemoteProdDS <> '' then do                     
         ShipHostStagingDS.j   = HostStagingDS                                  
         ShipRemoteStagingDS.j = RemoteStagingDS                                
         ShipRemoteProdDS.j    = RemoteProdDS                                   
         j = j + 1                                                              
         i = i + 3                                                              
       end                                                                      
      else do                                                                   
         say 'SBOMHASH01E Host staging Data Set is not included in the' ,       
             'HSAH256 ddname'                                                   
         return 8                                                               
      end                                                                       
                                                                                
    end                                                                         
   Else do                                                                      
     say 'SBOMHASH01E Host staging Data Set is not included in the',            
         'HSAH256 ddname'                                                       
     return 8                                                                   
    end                                                                         
   end                                                                          
  Else do                                                                       
     say 'SBOMHASH02E There is not shipping reference in this line of',         
         'hash256 ddname.'                                                      
     return 8                                                                   
   end                                                                          
                                                                                
End /*do while i<= hash256.0*/                                                  
                                                                                
j = j - 1                                                                       
ShipHostStagingDS.0   = j                                                       
ShipRemoteStagingDS.0 = j                                                       
ShipRemoteProdDS.0    = j                                                       
                                                                                
                                                                                
/* Validate the JSON Text read from ddname JSONIN         */                    
                                                                                
address mvs "execio * diskr JSONIN (stem jsonIN. finis"                         
                                                                                
jsonTEXT = ''                                                                   
Do I=1 to jsonIN.0                                                              
  jsonTEXT = jsonText || strip(jsonIN.i)                                        
End                                                                             
                                                                                
/* write JSON string to an output dataset */                                    
/* queue jsontext                                                               
queue ''                                                                        
"execio * diskw JSONOUT (finis" */                                              
                                                                                
/* say ''                                                                       
say 'JSON Text read from File: '                                                
say ''                                                                          
say jsonTEXT                                                                    
say '' */                                                                       
                                                                                
/*                                                        */                    
/*                                                        */                    
call JSON_initParser                                                            
                                                                                
if RESULT <> 0 then                                                             
   return fatalError( '** Pre-processing error (parser init failure) **' )      
                                                                                
/****************************/                                                  
/* Parse the response data. */                                                  
/****************************/                                                  
call JSON_parse jsonTEXT                                                        
if RESULT <> 0 then                                                             
   do                                                                           
      call JSON_termParser                                                      
      return fatalError( '** Error while parsing Input JSON Text **' )          
   end                                                                          
                                                                                
call get_SBOM_HASHES jsonTEXT                                                   
if RESULT <> 0 then                                                             
   do                                                                           
      call JSON_termParser                                                      
      return fatalError( '** Error while processing SBOM  **' )                 
   end                                                                          
                                                                                
call JSON_termParser                                                            
                                                                                
/*do i=1 to ShipHostStagingDS.0                                                 
   say ''                                                                       
   say 'ShipHostStagingDS.'i':   'ShipHostStagingDS.i                           
   say 'ShipRemoteStagingDS.'i': 'ShipRemoteStagingDS.i                         
   say 'ShipRemoteProdDS.'i':    'ShipRemoteProdDS.i                            
end                                                                             
                                                                                
do i=1 to SBOMHostStaging_DS.0                                                  
   say ''                                                                       
   say 'SBOMHostStaging_DS.'i':   'SBOMHostStaging_DS.i                         
   say 'SBOMHostStagingDS_HASH.'i': 'SBOMHostStagingDS_HASH.i                   
   say ''                                                                       
end */                                                                          
                                                                                
call build_HASH_Table                                                           
if RESULT <> 0 then                                                             
   do                                                                           
      return fatalError( '** Error found while building HASH Table **' )        
   end                                                                          
                                                                                
address mvs "execio * diskw hashout (stem HASH_Table. finis"                    
                                                                                
/* do i = 1 to  HASH_Table.0                                                    
   say 'Hash Table.'i': ' HASH_Table.i                                          
end */                                                                          
                                                                                
return 0                                                                        
                                                                                
                                                                                
/**********************************************************/                    
/* Function: build_HASH_Table                             */                    
/*                                                        */                    
/* Initializes the global parserHandle variable via       */                    
/* call to toolkit service HWTJINIT.                      */                    
/*                                                        */                    
/* Returns: 0 if successful, -1 if unsuccessful           */                    
/**********************************************************/                    
build_HASH_Table:                                                               
                                                                                
ix = 0                                                                          
do i=1 to ShipRemoteStagingDS.0                                                 
                                                                                
   x = outtrap(dirList.)                                                        
    address TSO "listds '"ShipRemoteStagingDS.i"' members"                      
   x = outtrap(off)                                                             
                                                                                
   k = 1                                                                        
   do while pos('--MEMBERS--',dirList.k) = 0                                    
    k = k + 1                                                                   
   end                                                                          
                                                                                
   do k = k + 1 to dirList.0 /* 1 to 6 contains info abt the pds */             
                                                                                
      member = strip(dirList.k)                                                 
                                                                                
      j=1                                                                       
      Found = 0                                                                 
      do while j <= SBOMHostStaging_DS.0                                        
                                                                                
      /* say ''                                                                 
         say 'ShipHostStagingDS.'i': 'ShipHostStagingDS.i||'('||member||')'     
         say 'SBOMHostStaging_DS.'j':'SBOMHostStaging_DS.j                      
         say '' */                                                              
         if ShipHostStagingDS.i||'('||member||')' = ,                           
            SBOMHostStaging_DS.j then do                                        
                                                                                
            Found = 1                                                           
            leave                                                               
                                                                                
         end                                                                    
         j = j + 1                                                              
      end /* do j=1 */                                                          
                                                                                
      If Found then do                                                          
                                                                                
         ix = ix + 1                                                            
         HASH_Table.ix = "SHA256 (//'"||,                                       
                         ShipRemoteStagingDS.i||"("||member||")') = "||,        
                         SBOMHostStagingDS_HASH.j                               
                                                                                
       end                                                                      
      else do                                                                   
         say 'No HASH value found for 'ShipHostStagingDS.i||'('||member||,      
              ') in the SBOM.'                                                  
         return 8                                                               
       end                                                                      
                                                                                
   end /* K = 7 */                                                              
                                                                                
end /* i=1 */                                                                   
                                                                                
HASH_Table.0 = ix                                                               
                                                                                
return 0                                                                        
/**********************************************************/                    
/* Function: JSON_initParser                              */                    
/*                                                        */                    
/* Initializes the global parserHandle variable via       */                    
/* call to toolkit service HWTJINIT.                      */                    
/*                                                        */                    
/* Returns: 0 if successful, -1 if unsuccessful           */                    
/**********************************************************/                    
JSON_initParser:                                                                
 if VERBOSE then                                                                
    say 'Initializing Json Parser'                                              
 /***********************************/                                          
 /* Call the HWTJINIT toolkit api.  */                                          
 /***********************************/                                          
 ReturnCode = -1                                                                
 DiagArea. = ''                                                                 
 address hwtjson "hwtjinit ",                                                   
                 "ReturnCode ",                                                 
                 "handleOut ",                                                  
                 "DiagArea."                                                    
 RexxRC = RC                                                                    
 if JSON_isError(RexxRC,ReturnCode) then                                        
    do                                                                          
    call JSON_surfaceDiag 'hwtjinit', RexxRC, ReturnCode, DiagArea.             
    return fatalError( '** hwtjinit failure **' )                               
    end  /* endif hwtjinit failure */                                           
 parserHandle = handleOut                                                       
 if VERBOSE then                                                                
    say 'Json Parser init (hwtjinit) succeeded'                                 
 return 0  /* end function */                                                   
                                                                                
                                                                                
/**********************************************************************/        
/* Function:  JSON_parse                                              */        
/*                                                                    */        
/* Parses the input text body (which should be syntactically correct  */        
/* JSON text) via call to toolkit service HWTJPARS.                   */        
/*                                                                    */        
 /* Returns: 0 if successful, -1 if unsuccessful                      */        
/**********************************************************************/        
JSON_parse:                                                                     
 jsonTextBody = arg(1)                                                          
  if VERBOSE then                                                               
    say 'Invoke Json Parser'                                                    
 /**************************************************/                           
 /* Call the HWTJPARS toolkit api.                 */                           
 /* Parse scans the input text body and creates an */                           
 /* internal representation of the JSON data,      */                           
 /* suitable for search and create operations.     */                           
 /**************************************************/                           
 ReturnCode = -1                                                                
 DiagArea. = ''                                                                 
 address hwtjson "hwtjpars ",                                                   
                 "ReturnCode ",                                                 
                 "parserHandle ",                                               
                 "jsonTextBody ",                                               
                 "DiagArea."                                                    
 RexxRC = RC                                                                    
 if JSON_isError(RexxRC,ReturnCode) then                                        
    do                                                                          
    call JSON_surfaceDiag 'hwtjpars', RexxRC, ReturnCode, DiagArea.             
    return fatalError( '** hwtjpars failure **' )                               
    end  /* endif hwtjpars failure */                                           
 if VERBOSE then                                                                
    say 'JSON data parsed successfully'                                         
 return 0  /* end function */                                                   
                                                                                
                                                                                
/**********************************************************************/        
/* Function:  get_SBOM_HASHES                                         */        
/*                                                                    */        
/* Process the sbom parsed by json parser                             */        
/**********************************************************************/        
get_SBOM_HASHES:                                                                
jsonTextBody = arg(1)                                                           
                                                                                
if VERBOSE then                                                                 
   say 'Process_SBOM'                                                           
                                                                                
metadata        = JSON_findValue(0,,                                            
                                 "metadata",,                                   
                                 HWTJ_OBJECT_TYPE)                              
                                                                                
component       = JSON_findValue(metadata,,                                     
                                 "component",,                                  
                                 HWTJ_OBJECT_TYPE)                              
                                                                                
componentsList  = JSON_findValue(component,,                                    
                                 "components",,                                 
                                 HWTJ_ARRAY_TYPE)                               
                                                                                
                                                                                
address hwtjson "hwtjgnue ",                                                    
                "ReturnCode ",                                                  
                "parserHandle ",                                                
                "ComponentsList ",                                              
                "NumOfComponents ",                                             
                "DiagArea."                                                     
                                                                                
RexxRC = RC                                                                     
                                                                                
if JSON_isError(RexxRC,ReturnCode) then do                                      
   call JSON_surfaceDiag 'hwtjgnue', RexxRC, ReturnCode, DiagArea.              
   return fatalError( '** hwtjgnue failure **' )                                
 end  /* endif hwtjinit failure */                                              
                                                                                
/* Say 'Number of Components Element in SBOM: 'NumOfComponents                  
say '' */                                                                       
                                                                                
/* Process each element of the array of objects */                              
trace off                                                                       
                                                                                
J = 1                                                                           
do component#=0 to  NumOfComponents-1                                           
                                                                                
  address hwtjson  "hwtjgaen ",                                                 
                    "ReturnCode ",                                              
                    "ParserHandle ",                                            
                    "componentsList ",                                          
                    "component# ",                                              
                    "EntryValueHandle",                                         
                    "DiagArea."                                                 
                                                                                
  RexxRC = RC                                                                   
  if JSON_isError(RexxRC,ReturnCode) then do                                    
       call JSON_surfaceDiag 'hwtjgaen', RexxRC, ReturnCode, DiagArea.          
       return fatalError( '** hwtjgaen failure **' )                            
   end  /* endif hwtjinit failure */                                            
                                                                                
                                                                                
  /* Bom_Ref     = JSON_findValue( EntryValueHandle,                            
                               ,"bom-ref" ,                                     
                               ,HWTJ_STRING_TYPE)                               
                                                                                
  say 'bom-ref: 'Bom_Ref */                                                     
                                                                                
  hashesList = JSON_findValue(EntryValueHandle,,                                
                             "hashes",,                                         
                             HWTJ_ARRAY_TYPE)                                   
                                                                                
  if hashesList <> '(not found)' & hashesList <> '' Then do                     
                                                                                
      address hwtjson "hwtjgnue ",                                              
                        "ReturnCode ",                                          
                        "parserHandle ",                                        
                        "hashesList ",                                          
                        "NumOfhashes ",                                         
                        "DiagArea."                                             
                                                                                
      RexxRC = RC                                                               
                                                                                
      if JSON_isError(RexxRC,ReturnCode) then do                                
         call JSON_surfaceDiag 'hwtjgnue', RexxRC, ReturnCode, DiagArea.        
         return fatalError( '** hwtjgnue failure **' )                          
         end  /* endif hwtjinit failure */                                      
                                                                                
                                                                                
      /* Say 'Number of hashes for component: 'NumOfhashes                      
      say '' */                                                                 
                                                                                
      do hash#=0 to NumOfHashes-1                                               
                                                                                
         address hwtjson  "hwtjgaen ",                                          
                           "ReturnCode ",                                       
                           "ParserHandle ",                                     
                           "hashesList ",                                       
                           "hash# ",                                            
                           "EntryValueHandle1 ",                                
                           "DiagArea."                                          
                                                                                
         RexxRC = RC                                                            
         if JSON_isError(RexxRC,ReturnCode) then do                             
               call JSON_surfaceDiag 'hwtjgaen', RexxRC, ReturnCode, DiagArea.  
               return fatalError( '** hwtjgaen failure **' )                    
         end  /* endif hwtjinit failure */                                      
                                                                                
         algorithm = JSON_findValue( EntryValueHandle1,                         
                                    ,"alg" ,                                    
                                    ,HWTJ_STRING_TYPE)                          
                                                                                
         HASH      = JSON_findValue( EntryValueHandle1,                         
                                    ,"content" ,                                
                                    ,HWTJ_STRING_TYPE)                          
         /* say ''                                                              
         say 'algorithm: 'algorithm                                             
         say 'HASH: ' HASH */                                                   
         SBOMHostStagingDS_HASH.j = HASH                                        
                                                                                
      end /* do hash */                                                         
                                                                                
      DS_Name     = JSON_findValue( EntryValueHandle,                           
                                  ,"name" ,                                     
                                  ,HWTJ_STRING_TYPE)                            
                                                                                
      /* say 'name: 'DS_Name */                                                 
      parse var DS_Name "//'" DS_Name "'"                                       
      SBOMHostStaging_DS.j = DS_Name                                            
      j = j + 1                                                                 
   end                                                                          
  Else do                                                                       
    If hashesList = '' then do                                                  
       call JSON_surfaceDiag 'hwtjsrch', RexxRC, ReturnCode, DiagArea.          
       return fatalError( '** hwtjsrch hashes failure **' )                     
    end                                                                         
  end                                                                           
                                                                                
end /*component# */                                                             
                                                                                
j = J - 1                                                                       
SBOMHostStaging_DS.0 = J                                                        
SBOMHostStagingDS_HASH.0 = J                                                    
                                                                                
                                                                                
return 0                                                                        
                                                                                
/******************************************************************/            
/* Function:  JSON_findValue                                      */            
/*                                                                */            
/* Searches the appropriate portion of the parsed JSON data (that */            
/* designated by the objectToSearch argument) for an entry whose  */            
/* name matches the designated searchName argument.  Returns a    */            
/* value or handle, depending on the expectedType.                */            
/*                                                                */            
/* Returns: value or handle as described above, or  a null result */            
/* if no suitable value or handle is found.                       */            
/******************************************************************/            
JSON_findValue:                                                                 
 objectToSearch = arg(1) /* 0 */                                                
 searchName = arg(2)     /* label */                                            
 expectedType = arg(3)   /* tipo de dato */                                     
                                                                                
/*********************************************************/                     
/* Trying to find a value for a null entry is perhaps a  */                     
/* bit nonsensical, but for completeness we include the  */                     
/* possibility.  We make an arbitrary choice on what to  */                     
/* return, and do this first, to avoid wasted processing */                     
/*********************************************************/                     
 if expectedType == HWTJ_NULL_TYPE then                                         
    return '(null)'                                                             
 if VERBOSE then                                                                
    say 'Invoke Json Search'                                                    
 /********************************************************/                     
 /* Search the specified object for the specified name.  */                     
 /* The value 0 is specified (for the "startingHandle")  */                     
 /* to indicate that the search should start at the      */                     
 /* beginning of the designated object.                  */                     
 /********************************************************/                     
 ReturnCode = -1                                                                
 DiagArea. = ''                                                                 
 address hwtjson "hwtjsrch ",                                                   
                 "ReturnCode ",                                                 
                 "parserHandle ",                                               
                 "HWTJ_SEARCHTYPE_OBJECT ",                                     
                 "searchName ",                                                 
                 "objectToSearch ",                                             
                 "0 ",                                                          
                 "searchResult ",                                               
                 "DiagArea."                                                    
 RexxRC = RC                                                                    
 /************************************************************/                 
 /* Differentiate a not found condition from an error, and   */                 
 /* tolerate the former.  Note the order dependency here,    */                 
 /* at least as the called routines are currently written.   */                 
 /************************************************************/                 
 if JSON_isNotFound(RexxRC,ReturnCode) then                                     
    return '(not found)'                                                        
 if JSON_isError(RexxRC,ReturnCode) then                                        
    do                                                                          
    call JSON_surfaceDiag 'hwtjsrch', RexxRC, ReturnCode, DiagArea.             
    say '** hwtjsrch failure **'                                                
    return ''                                                                   
    end /* endif hwtjsrch failed */                                             
 /******************************************/                                   
 /* Verify the type of the search result   */                                   
 /******************************************/                                   
 resultType = JSON_getType( searchResult )                                      
 if resultType <> expectedType then                                             
    do                                                                          
    say '** Type mismatch ('||resultType||','||expectedType||') **'             
    return ''                                                                   
    end /* endif unexpected type */                                             
 /******************************************************/                       
 /* Return the located object or array, as appropriate */                       
 /******************************************************/                       
 if expectedType == HWTJ_OBJECT_TYPE | expectedType == HWTJ_ARRAY_TYPE then     
    do                                                                          
    return searchResult                                                         
    end /* endif object or array type */                                        
 /*******************************************************/                      
 /* Return the located string or number, as appropriate */                      
 /*******************************************************/                      
 if expectedType == HWTJ_STRING_TYPE | expectedType == HWTJ_NUMBER_TYPE then    
    do                                                                          
    if VERBOSE then                                                             
       say 'Invoke Json Get Value'                                              
    ReturnCode = -1                                                             
    DiagArea. = ''                                                              
    address hwtjson "hwtjgval ",                                                
                    "ReturnCode ",                                              
                    "parserHandle ",                                            
                    "searchResult ",                                            
                    "result ",                                                  
                    "DiagArea."                                                 
    RexxRC = RC                                                                 
    if JSON_isError(RexxRC,ReturnCode) then                                     
       do                                                                       
       call JSON_surfaceDiag 'hwtjgval', RexxRC, ReturnCode, DiagArea.          
       say '** hwtjgval failure **'                                             
       return ''                                                                
       end /* endif hwtjgval failed */                                          
                                                                                
    return result                                                               
    end /* endif string or number type */                                       
 /****************************************************/                         
 /* Return the located boolean value, as appropriate */                         
 /****************************************************/                         
  if expectedType == HWTJ_BOOLEAN_TYPE then                                     
    do                                                                          
    if VERBOSE then                                                             
       say 'Invoke Json Get Boolean Value'                                      
    ReturnCode = -1                                                             
    DiagArea. = ''                                                              
    address hwtjson "hwtjgbov ",                                                
                    "ReturnCode ",                                              
                    "parserHandle ",                                            
                    "searchResult ",                                            
                    "result ",                                                  
                    "DiagArea."                                                 
    RexxRC = RC                                                                 
    if JSON_isError(RexxRC,ReturnCode) then                                     
       do                                                                       
       call JSON_surfaceDiag 'hwtjgbov', RexxRC, ReturnCode, DiagArea.          
       say '** hwtjgbov failure **'                                             
       return ''                                                                
       end /* endif hwtjgbov failed */                                          
    return result                                                               
    end /* endif boolean type */                                                
 if VERBOSE then                                                                
    say '** No return value found **'                                           
 return ''  /* end function */                                                  
                                                                                
                                                                                
/***********************************************************/                   
/* Function:  JSON_getType                                 */                   
/*                                                         */                   
/* Determine the Json type of the designated search result */                   
/* via the HWTJGJST toolkit api.                           */                   
/*                                                         */                   
/* Returns: Non-negative integral number indicating type   */                   
/* if successful, -1 if not.                               */                   
/***********************************************************/                   
JSON_getType:                                                                   
 searchResult = arg(1)                                                          
 if VERBOSE then                                                                
    say 'Invoke Json Get Type'                                                  
 /*********************************/                                            
 /* Call the HWTHGJST toolkit api */                                            
 /*********************************/                                            
 ReturnCode = -1                                                                
 DiagArea. = ''                                                                 
 address hwtjson "hwtjgjst ",                                                   
                 "ReturnCode ",                                                 
                 "parserHandle ",                                               
                 "searchResult ",                                               
                 "resultTypeName ",                                             
                 "DiagArea."                                                    
 RexxRC = RC                                                                    
 if JSON_isError(RexxRC,ReturnCode) then                                        
    do                                                                          
    call JSON_surfaceDiag 'hwtjgjst', RexxRC, ReturnCode, DiagArea.             
    return fatalError( '** hwtjgjst failure **' )                               
    end /* endif hwtjgjst failure */                                            
 else                                                                           
    do                                                                          
    /******************************************************/                    
    /* Convert the returned type name into its equivalent */                    
    /* constant, and return that more convenient value.   */                    
    /* Note that the interpret instruction might more     */                    
    /* typically be used here, but the goal here is to    */                    
    /* familiarize the reader with these types.           */                    
    /******************************************************/                    
    type = strip(resultTypeName)                                                
    if type == 'HWTJ_STRING_TYPE' then                                          
       return HWTJ_STRING_TYPE                                                  
    if type == 'HWTJ_NUMBER_TYPE' then                                          
       return HWTJ_NUMBER_TYPE                                                  
    if type == 'HWTJ_BOOLEAN_TYPE' then                                         
       return HWTJ_BOOLEAN_TYPE                                                 
    if type == 'HWTJ_ARRAY_TYPE' then                                           
       return HWTJ_ARRAY_TYPE                                                   
    if type == 'HWTJ_OBJECT_TYPE' then                                          
       return HWTJ_OBJECT_TYPE                                                  
    if type == 'HWTJ_NULL_TYPE' then                                            
       return HWTJ_NULL_TYPE                                                    
    end                                                                         
 /***********************************************/                              
 /* This return should not occur, in practice.  */                              
 /***********************************************/                              
 return fatalError( 'Unsupported Type ('||type||') from hwtjgjst' )             
                                                                                
                                                                                
/**********************************************************/                    
/* Function:  JSON_termParser                             */                    
/*                                                        */                    
/* Cleans up parser resources and invalidates the parser  */                    
/* instance handle, via call to the HWTJTERM toolkit api. */                    
/* Note that as the REXX environment is single-threaded,  */                    
/* no consideration of any "busy" outcome from the api is */                    
/* done (as it would be in other language environments).  */                    
/*                                                        */                    
/* Returns: 0 if successful, -1 if not.                   */                    
/**********************************************************/                    
JSON_termParser:                                                                
 if VERBOSE then                                                                
    say 'Terminate Json Parser'                                                 
 /**********************************/                                           
 /* Call the HWTJTERM toolkit api  */                                           
 /**********************************/                                           
 ReturnCode = -1                                                                
 DiagArea. = ''                                                                 
 address hwtjson "hwtjterm ",                                                   
                 "ReturnCode ",                                                 
                 "parserHandle ",                                               
                 "DiagArea."                                                    
 RexxRC = RC                                                                    
 if JSON_isError(RexxRC,ReturnCode) then                                        
    do                                                                          
    call JSON_surfaceDiag 'hwtjterm', RexxRC, ReturnCode, DiagArea.             
    return fatalError( '** hwtjterm failure **' )                               
    end /* endif hwtjterm failure */                                            
 if VERBOSE then                                                                
    say 'Json Parser terminated'                                                
 return 0  /* end function */                                                   
                                                                                
                                                                                
/*************************************************************/                 
/* Function:  JSON_isNotFound                                */                 
/*                                                           */                 
/* Check the input processing codes. Note that if the input  */                 
/* RexxRC is nonzero, then the toolkit return code is moot   */                 
/* (the toolkit function was likely not even invoked). If    */                 
/* the toolkit return code is relevant, check it against the */                 
/* specific return code for a "not found" condition.         */                 
/*                                                           */                 
/* Returns:  1 if a HWTJ_JSRCH_SRCHSTR_NOT_FOUND condition   */                 
/* is indicated, 0 otherwise.                                */                 
/*************************************************************/                 
JSON_isNotFound:                                                                
 RexxRC = arg(1)                                                                
 if RexxRC <> 0 then                                                            
    return 0                                                                    
 ToolkitRC = strip(arg(2),'L',0)                                                
 if ToolkitRC == HWTJ_JSRCH_SRCHSTR_NOT_FOUND then                              
    return 1                                                                    
 return 0  /* end function */                                                   
                                                                                
                                                                                
/*************************************************************/                 
/* Function:  JSON_isError                                   */                 
/*                                                           */                 
/* Check the input processing codes. Note that if the input  */                 
/* RexxRC is nonzero, then the toolkit return code is moot   */                 
/* (the toolkit function was likely not even invoked). If    */                 
/* the toolkit return code is relevant, check it against the */                 
/* set of { HWTJ_xx } return codes for evidence of error.    */                 
/* This set is ordered: HWTJ_OK < HWTJ_WARNING < ...         */                 
/* with remaining codes indicating error, so we may check    */                 
/* via single inequality.                                    */                 
/*                                                           */                 
/* Returns:  1 if any toolkit error is indicated, 0          */                 
/* otherwise.                                                */                 
/*************************************************************/                 
JSON_isError:                                                                   
 RexxRC = arg(1)                                                                
 if RexxRC <> 0 then                                                            
    return 1                                                                    
 ToolkitRC = strip(arg(2),'L',0)                                                
 if ToolkitRC == '' then                                                        
       return 0                                                                 
 if ToolkitRC <= HWTJ_WARNING then                                              
       return 0                                                                 
 return 1  /* end function */                                                   
                                                                                
                                                                                
/***********************************************/                               
/* Procedure: JSON_surfaceDiag                 */                               
/*                                             */                               
/* Surface input error information.  Note that */                               
/* when the RexxRC is nonzero, the ToolkitRC   */                               
/* and DiagArea content are moot and are       */                               
/* suppressed (so as to not mislead).          */                               
/*                                             */                               
/***********************************************/                               
JSON_surfaceDiag: procedure expose DiagArea.                                    
  who = arg(1)                                                                  
  RexxRC = arg(2)                                                               
  ToolkitRC = arg(3)                                                            
  say                                                                           
  say '*ERROR* ('||who||') at time: '||Time()                                   
  say 'Rexx RC: '||RexxRC||', Toolkit ReturnCode: '||ToolkitRC                  
  if RexxRC == 0 then                                                           
     do                                                                         
     say 'DiagArea.ReasonCode: '||DiagArea.ReasonCode                           
     say 'DiagArea.ReasonDesc: '||DiagArea.ReasonDesc                           
     end                                                                        
  say                                                                           
 return  /* end procedure */                                                    
                                                                                
                                                                                
/*****************************************************************************/ 
/* Function:  fatalError                                                     */ 
/*****************************************************************************/ 
fatalError:                                                                     
 errorMsg = arg(1)                                                              
 say errorMsg                                                                   
 return -1  /* end function */                                                  
                                                                                
/*******************************************************/                       
/* Function:  HTTP_getToolkitConstants                 */                       
/*                                                     */                       
/* Access constants used by the toolkit (for return    */                       
/* codes, etc), via the HWTCONST toolkit api.          */                       
/*                                                     */                       
/* Returns: 0 if toolkit constants accessed, -1 if not */                       
/*******************************************************/                       
HTTP_getToolkitConstants:                                                       
 /***********************************************/                              
 /* Ensure that the toolkit host command is     */                              
 /* available in your REXX environment (no harm */                              
 /* done if already present).  Do this before   */                              
 /* your first toolkit api invocation.  Also,   */                              
 /* ensure no conflicting signal-handling in    */                              
 /* cases of running in USS environments.       */                              
 /***********************************************/                              
  if VERBOSE then                                                               
    say 'Setting hwtcalls on, syscalls sigoff'                                  
  call hwtcalls 'on'                                                            
  call syscalls 'SIGOFF'                                                        
 /************************************************/                             
 /* Call the HWTCONST toolkit api.  This should  */                             
 /* make all toolkit-related constants available */                             
 /* to procedures via (expose of) HWT_CONSTANTS  */                             
 /************************************************/                             
 if VERBOSE then                                                                
    say 'Including HWT Constants...'                                            
 address hwtjson "hwtconst ",                                                   
                 "ReturnCode ",                                                 
                 "DiagArea."                                                    
 RexxRC = RC                                                                    
 if JSON_isError(RexxRC,ReturnCode) then                                        
    do                                                                          
    call HTTP_surfaceDiag 'hwtconst', RexxRC, ReturnCode, DiagArea.             
    return fatalError( '** hwtconst (hwtjson) failure **' )                     
    end /* endif hwtconst failure */                                            
 return 0  /* end function */                                                   
                                                                                
/*******************************************************/                       
/* Function:  InitializeVars                           */                       
/*                                                     */                       
/*******************************************************/                       
InitializeVars:                                                                 
                                                                                
 programRc = -1                                                                 
                                                                                
return                                                                          
          
./  ADD  NAME=SCMM@REX                
//SYSEXEC  DD DISP=SHR,DSN=GONJO08.CNTL.SOURCE             SCMM@REX             
//         DD DISP=SHR,DSN=CADEMO.ENDV.PRCS.ADMTEST.REXXEXEC                    
//SYSTSPRT DD SYSOUT=*                                                          
          
